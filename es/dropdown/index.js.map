{"version":3,"sources":["../../src/components/dropdown/index.js"],"names":["React","useState","CSSTransition","Dropdown","props","visible","setVisible","dropdownClass","result","className","name","position","key","trim","trigger","width","minWidth","right","rightOffset","legtOffset","left","content"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,wBAA9B;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA,kBACDH,QAAQ,CAAC,KAAD,CADP;AAAA;AAAA,MACxBI,OADwB;AAAA,MACfC,UADe;;AAG/B,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,SAAS,GAAG;AACZC,MAAAA,IAAI,EAAE,oBADM;AAEZC,MAAAA,QAAQ,EAAEP,KAAK,CAACO,QAAN,GAAiBP,KAAK,CAACO,QAAvB,GAAkC,EAFhC;AAGZF,MAAAA,SAAS,EAAEL,KAAK,CAACK,SAAN,GAAkBL,KAAK,CAACK,SAAxB,GAAoC;AAHnC,KAAhB;;AAMA,SAAK,IAAMG,GAAX,IAAkBH,SAAlB,EAA6B;AACzB,UAAIA,SAAS,CAACG,GAAD,CAAb,EAAoBJ,MAAM,IAAIC,SAAS,CAACG,GAAD,CAAT,GAAiB,GAA3B;AACvB;;AACD,WAAOJ,MAAM,CAACK,IAAP,EAAP;AACH,GAZD;;AAcA,SACI;AAAK,IAAA,SAAS,EAAEN,aAAa,EAA7B;AACI,IAAA,QAAQ,EAAE,CAAC,CADf;AAEI,IAAA,MAAM,EAAE;AAAA,aAAMD,UAAU,CAAC,KAAD,CAAhB;AAAA;AAFZ,KAGI;AAAK,IAAA,OAAO,EAAE;AAAA,aAAMA,UAAU,CAAC,IAAD,CAAhB;AAAA;AAAd,KAAuCF,KAAK,CAACU,OAA7C,CAHJ,EAII,oBAAC,aAAD;AACI,IAAA,EAAE,EAAET,OADR;AAEI,IAAA,OAAO,EAAE,GAFb;AAGI,IAAA,UAAU,EAAC,UAHf;AAII,IAAA,aAAa;AAJjB,KAKI;AAAK,IAAA,SAAS,EAAC,UAAf;AACI,IAAA,KAAK,EAAE;AACHU,MAAAA,KAAK,EAAEX,KAAK,CAACW,KAAN,GAAcX,KAAK,CAACW,KAApB,GAA4B,EADhC;AAEHC,MAAAA,QAAQ,EAAEZ,KAAK,CAACY,QAAN,GAAiBZ,KAAK,CAACY,QAAvB,GAAkC,EAFzC;AAGHC,MAAAA,KAAK,EAAEb,KAAK,CAACc,WAAN,IAAqB,CAACd,KAAK,CAACe,UAA5B,GAAyCf,KAAK,CAACc,WAA/C,GAA6D,EAHjE;AAIHE,MAAAA,IAAI,EAAEhB,KAAK,CAACe,UAAN,IAAoB,CAACf,KAAK,CAACc,WAA3B,GAAyCd,KAAK,CAACe,UAA/C,GAA4D;AAJ/D;AADX,KAOI;AAAK,IAAA,OAAO,EAAE;AAAA,aAAMb,UAAU,CAAC,KAAD,CAAhB;AAAA;AAAd,KAAwCF,KAAK,CAACiB,OAA9C,CAPJ,CALJ,CAJJ,CADJ;AAsBH,CAvCM","sourcesContent":["import React, { useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nexport const Dropdown = (props) => {\n    const [visible, setVisible] = useState(false);\n\n    const dropdownClass = () => {\n        let result = '';\n        let className = {\n            name: 'dropdown-container',\n            position: props.position ? props.position : '',\n            className: props.className ? props.className : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    return (\n        <div className={dropdownClass()} \n            tabIndex={-1}\n            onBlur={() => setVisible(false)}>\n            <div onClick={() => setVisible(true)}>{props.trigger}</div>\n            <CSSTransition\n                in={visible}\n                timeout={300}\n                classNames=\"dropdown\"\n                unmountOnExit>\n                <div className=\"dropdown\" \n                    style={{ \n                        width: props.width ? props.width : '', \n                        minWidth: props.minWidth ? props.minWidth : '',\n                        right: props.rightOffset && !props.legtOffset ? props.rightOffset : '',\n                        left: props.legtOffset && !props.rightOffset ? props.legtOffset : ''\n                    }}>\n                    <div onClick={() => setVisible(false)}>{props.content}</div>\n                </div>\n            </CSSTransition>\n        </div>\n    )\n}\n"],"file":"index.js"}