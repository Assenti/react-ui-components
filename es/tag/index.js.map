{"version":3,"sources":["../../src/components/tag/index.js"],"names":["React","Icon","Tag","props","tagClass","result","className","btn","lifted","uppercase","smooth","rounded","color","disabled","light","dark","small","outlined","key","trim","width","iconLeft","value","iconRight"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,SAArB;AAEA,OAAO,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,KAAD,EAAW;AAC1B,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnB,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,SAAS,GAAG;AACZC,MAAAA,GAAG,EAAE,KADO;AAEZC,MAAAA,MAAM,EAAEL,KAAK,CAACK,MAAN,GAAe,QAAf,GAA0B,EAFtB;AAGZC,MAAAA,SAAS,EAAEN,KAAK,CAACM,SAAN,GAAkB,WAAlB,GAAgC,EAH/B;AAIZC,MAAAA,MAAM,EAAEP,KAAK,CAACO,MAAN,IAAgB,CAACP,KAAK,CAACQ,OAAvB,GAAiC,QAAjC,GAA4C,EAJxC;AAKZA,MAAAA,OAAO,EAAER,KAAK,CAACQ,OAAN,IAAiB,CAACR,KAAK,CAACO,MAAxB,GAAiC,SAAjC,GAA6C,EAL1C;AAMZE,MAAAA,KAAK,EAAET,KAAK,CAACS,KAAN,IAAe,CAACT,KAAK,CAACU,QAAtB,IAAkC,CAACV,KAAK,CAACW,KAAzC,IAAkD,CAACX,KAAK,CAACY,IAAzD,GAAgEZ,KAAK,CAACS,KAAtE,GAA8E,EANzE;AAOZI,MAAAA,KAAK,EAAEb,KAAK,CAACa,KAAN,GAAc,OAAd,GAAwB,EAPnB;AAQZC,MAAAA,QAAQ,EAAEd,KAAK,CAACc,QAAN,GAAiB,UAAjB,GAA8B,EAR5B;AASZX,MAAAA,SAAS,EAAEH,KAAK,CAACG,SAAN,GAAkBH,KAAK,CAACG,SAAxB,GAAoC;AATnC,KAAhB;;AAYA,SAAK,IAAMY,GAAX,IAAkBZ,SAAlB,EAA6B;AACzB,UAAIA,SAAS,CAACY,GAAD,CAAb,EAAoBb,MAAM,IAAIC,SAAS,CAACY,GAAD,CAAT,GAAiB,GAA3B;AACvB;;AACD,WAAOb,MAAM,CAACc,IAAP,EAAP;AACH,GAlBD;;AAoBA,SACI;AAAK,IAAA,SAAS,EAAEf,QAAQ,EAAxB;AAA4B,IAAA,KAAK,EAAE;AAAEgB,MAAAA,KAAK,EAAEjB,KAAK,CAACiB,KAAN,GAAcjB,KAAK,CAACiB,KAApB,GAA4B;AAArC;AAAnC,KACKjB,KAAK,CAACkB,QAAN,GAAiB,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAElB,KAAK,CAACkB;AAAlB,IAAjB,GAAiD,EADtD,EAEKlB,KAAK,CAACmB,KAFX,EAGKnB,KAAK,CAACoB,SAAN,GAAkB,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEpB,KAAK,CAACoB;AAAlB,IAAlB,GAAmD,EAHxD,CADJ;AAOH,CA5BM","sourcesContent":["import React from 'react';\nimport { Icon } from '../icon';\n\nexport const Tag = (props) => {\n    const tagClass = () => {\n        let result = '';\n        let className = {\n            btn: 'tag',\n            lifted: props.lifted ? 'lifted' : '',\n            uppercase: props.uppercase ? 'uppercase' : '',\n            smooth: props.smooth && !props.rounded ? 'smooth' : '',\n            rounded: props.rounded && !props.smooth ? 'rounded' : '',\n            color: props.color && !props.disabled && !props.light && !props.dark ? props.color : '',\n            small: props.small ? 'small' : '',\n            outlined: props.outlined ? 'outlined' : '',\n            className: props.className ? props.className : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    return (\n        <div className={tagClass()} style={{ width: props.width ? props.width : ''}}>\n            {props.iconLeft ? <Icon name={props.iconLeft}/> : ''}\n            {props.value}\n            {props.iconRight ? <Icon name={props.iconRight}/> : ''}\n        </div>\n    )\n}\n"],"file":"index.js"}