{"version":3,"sources":["../../src/components/pagination/index.js"],"names":["React","useState","useEffect","Select","ChevronBack","ChevronNext","generateMockArr","length","arr","i","push","Pagination","props","paginationClass","result","className","btn","size","rounded","color","key","trim","getLimit","Math","ceil","itemsCount","perPage","current","currentPage","setCurrentPage","allPages","setAllPages","slice","activePages","setActivePages","isPrevAvailable","isNextAvailable","handleOnNext","onChange","handleOnPrev","handlePerPageSelect","value","onPerPageSelect","getSize","map","item","index","perPageVariants","perPageText"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Select } from '../select';\nimport { ChevronBack, ChevronNext } from '../icon/icons/index';\n\nconst generateMockArr = (length) => {\n    let arr = []\n    for (let i = 0; i < length; i++) {\n        arr.push(i)\n    }\n    return arr\n}\n\nexport const Pagination = (props) => {\n    const paginationClass = () => {\n        let result = '';\n        let className = {\n            btn: 'pagination',\n            size: props.size ? props.size : '',\n            rounded: props.rounded ? 'rounded' : '',\n            color: props.color ? props.color : 'primary',\n            className: props.className ? props.className : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    const getLimit = () => Math.ceil(props.itemsCount/props.perPage) >= 5 ? 5 : Math.ceil(props.itemsCount/props.perPage);\n    const [currentPage, setCurrentPage] = useState(props.current ? props.current : 1);\n    const [allPages, setAllPages] = useState(generateMockArr(Math.ceil(props.itemsCount/props.perPage)));\n    const [activePages, setActivePages] = useState(allPages.slice(0, getLimit()))\n\n    const isPrevAvailable = () => {\n        return currentPage === 1 ? false : true\n    }\n\n    const isNextAvailable = () => {\n        if (currentPage === props.itemsCount || \n            props.itemsCount === 0 || \n            currentPage === Math.ceil(props.itemsCount/props.perPage)) return false \n        else return true\n    }\n\n    const handleOnNext = () => {\n        if (isNextAvailable()) {\n            if (currentPage % getLimit() === 0 && currentPage < allPages.length) {\n                setActivePages(allPages.slice(currentPage, currentPage + getLimit()))\n                setCurrentPage(currentPage + 1)\n                if (props.onChange) props.onChange(currentPage + 1)\n            } else if (currentPage < allPages.length) {\n                setCurrentPage(currentPage + 1)\n                if (props.onChange) props.onChange(currentPage + 1)\n            }\n        }\n    }\n\n    const handleOnPrev = () => {\n        if (isPrevAvailable()) {\n            if(currentPage > 1 && (currentPage - 1) % getLimit() === 0){\n                setActivePages(allPages.slice((currentPage-1) - getLimit(), currentPage-1))\n                setCurrentPage(currentPage - 1)\n                if (props.onChange) props.onChange(currentPage - 1)\n            } else if (currentPage > 1) {\n                setCurrentPage(currentPage - 1)\n                if (props.onChange) props.onChange(currentPage - 1)\n            }\n        }\n    }\n\n    const handlePerPageSelect = (value) => {\n        if (props.onPerPageSelect) props.onPerPageSelect(value)\n        setAllPages(generateMockArr(Math.ceil(props.itemsCount/value)))\n    }\n\n    const getSize = () => {\n        if (props.size === 'medium') return 100\n        else if (props.size === 'large') return 100\n        else return 100\n    }\n\n    useEffect(() => {\n        setActivePages(allPages.slice(0, getLimit()))\n    }, [props.perPage, props.itemsCount])\n\n    return (\n        <div className={paginationClass()}>\n            <div className={isPrevAvailable() ? 'pagination-item' : 'pagination-item disabled'} \n                onClick={handleOnPrev}>\n                <ChevronBack />\n            </div>\n\n            {activePages.map((item, index) => {\n                return (\n                    <div key={index} \n                        className={(item + 1) === currentPage ? \n                            'pagination-item active' : 'pagination-item'}\n                        onClick={() => {\n                            setCurrentPage(item + 1)\n                            if (props.onChange) props.onChange(item + 1)\n                        }}>\n                        {item + 1}\n                    </div>\n                )\n            })}\n\n            <div className={isNextAvailable() ? 'pagination-item' : 'pagination-item disabled'} \n                onClick={handleOnNext}>\n                <ChevronNext />\n            </div>\n\n            <div className=\"pagination-per-page\">\n                <Select\n                    minWidth={getSize()}\n                    size={props.size}\n                    rounded={props.rounded}\n                    color={props.color}\n                    items={props.perPageVariants ? props.perPageVariants : [10, 20, 50, 100]}\n                    normalTitle={true}\n                    selectedItem={`${props.perPage} / ${props.perPageText ? props.perPageText : 'page'}`}\n                    onSelect={handlePerPageSelect}/>\n            </div>\n        </div>\n    )\n}"],"file":"index.js"}