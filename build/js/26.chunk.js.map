{"version":3,"sources":["pages/ModalPage.js"],"names":["usage","keys","items","property","description","default","type","value","ModalPage","useState","modal","setModal","modalDark","setModalDark","modalReverse","setModalReverse","className","outlined","title","color","name","onClick","closable","toggleFullscreen","onClose","visible","header","prefix","placeholder","label","block","headerReverse","dark","centered","icon","iconSize","extra","defaultText","text","tooltip","language","style","prism","bordered","headers","index","itemTitles"],"mappings":"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","file":"js/26.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Modal, Button, Card, Collapse, Table, Icon, InputField, Checkbox, CopyToClipboard } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst usage =\n`// Usage examples\nimport React, { useState } from 'react';\nimport { Button, Modal, Checkbox, InputField } from '@assenti/rui-components';\n\nfunction Example() {\n    const [modal, setModal] = useState(false);\n    const [modalDark, setModalDark] = useState(false);\n    const [modalReverse, setModalReverse] = useState(false);\n\n    return (\n        <div>\n            <Button\n                color=\"primary\"\n                name=\"Default modal\"\n                onClick={() => setModal(true)}/>\n            <Button\n                color=\"primary\"\n                name=\"Reversed header modal\"\n                onClick={() => setModalReverse(true)}/>\n            <Button\n                color=\"black\"\n                name=\"Dark centered modal\"\n                onClick={() => setModalDark(true)}/>\n            <Modal\n                closable\n                toggleFullscreen\n                onClose={() => setModal(false)} \n                visible={modal} \n                header={<div>Sign in</div>}>\n                <div className=\"pa-10\">\n                    <InputField\n                        className=\"my-15 mx-0\"\n                        prefix={<Icon name=\"account\" />} \n                        placeholder=\"Login\"/>\n                    <InputField\n                        className=\"my-15 mx-0\"\n                        prefix={<Icon name=\"key\" />} \n                        placeholder=\"Password\"\n                        type=\"password\"/>\n                    <Checkbox\n                        className=\"my-15 mx-0\" \n                        color=\"primary\" \n                        label=\"Remember me?\"/>\n                    <Button \n                        className=\"my-15 mx-0\"\n                        color=\"primary\" \n                        name=\"Sign in\" block/>\n                    <div className=\"fz-9 rui-link text-center py-10\">\n                        Dont't have an account?\n                    </div>\n                </div>\n            </Modal>\n            <Modal\n                closable\n                toggleFullscreen\n                headerReverse\n                onClose={() => setModalReverse(false)} \n                visible={modalReverse} \n                header={<div>Sign in</div>}>\n                <div className=\"pa-10\">\n                    <InputField\n                        className=\"my-15 mx-0\"\n                        prefix={<Icon name=\"account\" />} \n                        placeholder=\"Login\"/>\n                    <InputField\n                        className=\"my-15 mx-0\"\n                        prefix={<Icon name=\"key\" />} \n                        placeholder=\"Password\"\n                        type=\"password\"/>\n                    <Checkbox\n                        className=\"my-15 mx-0\" \n                        color=\"primary\" \n                        label=\"Remember me?\"/>\n                    <Button \n                        className=\"my-15 mx-0\"\n                        color=\"primary\" \n                        name=\"Sign in\" block/>\n                    <div className=\"fz-9 rui-link text-center py-10\">\n                        Dont't have an account?\n                    </div>\n                </div>\n            </Modal>\n            <Modal\n                dark\n                centered\n                onClose={() => setModalDark(false)} \n                visible={modalDark} \n                header=\"Sign in\">\n                <div className=\"pa-10\">\n                    <InputField\n                        className=\"my-15 mx-0\"\n                        prefix={<Icon name=\"account\" />} \n                        placeholder=\"Login\"/>\n                    <InputField\n                        className=\"my-15 mx-0\"\n                        prefix={<Icon name=\"key\" />} \n                        placeholder=\"Password\"\n                        type=\"password\"/>\n                    <Checkbox\n                        className=\"my-15 mx-0\" \n                        color=\"primary\" \n                        label=\"Remember me?\"/>\n                    <Button \n                        className=\"my-15 mx-0\"\n                        color=\"primary\" \n                        name=\"Sign in\" block/>\n                    <div className=\"fz-9 rui-link text-center py-10\">\n                        Dont't have an account?\n                    </div>\n                </div>\n            </Modal>\n        </div>\n    )\n}`\n\nconst keys = ['property', 'description', 'default', 'type', 'value'];\nconst items = [\n    { \n        property: 'visible', \n        description: 'Set modal visible state', \n        default: '', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'onClose', \n        description: 'Ivokes on close icon click', \n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'closable', \n        description: 'Set closable on modal overlay click', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'centered', \n        description: 'Set modal vertical position - center', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'marginTop', \n        description: 'Set margin top (has no effect with centered prop)', \n        default: '20px', \n        type: 'number | string',\n        value: ''\n    },\n    { \n        property: 'padding', \n        description: 'Set modal body padding', \n        default: '15px', \n        type: 'number | string',\n        value: ''\n    },\n    { \n        property: 'toggleFullscreen', \n        description: 'Enable modal fullscreen mode', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'headerReverse', \n        description: 'Reverse modal header icons position', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'closeIconColor', \n        description: 'Set close icon color', \n        default: 'gray', \n        type: 'string',\n        value: 'hex | rgb() | css preset colors'\n    },\n    { \n        property: 'fullscreenIconColor', \n        description: 'Set fullscreen icon color', \n        default: 'gray', \n        type: 'string',\n        value: 'hex | rgb() | css preset colors'\n    },\n    { \n        property: 'dark', \n        description: 'Set modal dark mode', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'header', \n        description: 'Set modal header', \n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'footer', \n        description: 'Set modal footer', \n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'className', \n        description: 'Set css custom class', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n]\n\nconst ModalPage = () => {\n    const [modal, setModal] = useState(false);\n    const [modalDark, setModalDark] = useState(false);\n    const [modalReverse, setModalReverse] = useState(false);\n\n    return (\n        <div className=\"rui-page\">\n            <div className=\"rui-page-title\">Modal Component</div>\n            <Card outlined title=\"Modal usage\">\n                <Button\n                    color=\"primary\"\n                    name=\"Default modal\"\n                    onClick={() => setModal(true)}/>\n                <Button\n                    color=\"primary\"\n                    name=\"Reversed header modal\"\n                    onClick={() => setModalReverse(true)}/>\n                <Button\n                    color=\"black\"\n                    name=\"Dark centered modal\"\n                    onClick={() => setModalDark(true)}/>\n                <Modal\n                    closable\n                    toggleFullscreen\n                    onClose={() => setModal(false)} \n                    visible={modal} \n                    header={<div>Sign in</div>}>\n                    <div className=\"pa-10\">\n                        <InputField\n                            className=\"my-15 mx-0\"\n                            prefix={<Icon name=\"account\" />} \n                            placeholder=\"Login\"/>\n                        <InputField\n                            className=\"my-15 mx-0\"\n                            prefix={<Icon name=\"key\" />} \n                            placeholder=\"Password\"\n                            type=\"password\"/>\n                        <Checkbox\n                            className=\"my-15 mx-0\" \n                            color=\"primary\" \n                            label=\"Remember me?\"/>\n                        <Button \n                            className=\"my-15 mx-0\"\n                            color=\"primary\" \n                            name=\"Sign in\" block/>\n                        <div className=\"fz-9 rui-link text-center py-10\">\n                            Dont't have an account?\n                        </div>\n                    </div>\n                </Modal>\n                <Modal\n                    closable\n                    toggleFullscreen\n                    headerReverse\n                    onClose={() => setModalReverse(false)} \n                    visible={modalReverse} \n                    header={<div>Sign in</div>}>\n                    <div className=\"pa-10\">\n                        <InputField\n                            className=\"my-15 mx-0\"\n                            prefix={<Icon name=\"account\" />} \n                            placeholder=\"Login\"/>\n                        <InputField\n                            className=\"my-15 mx-0\"\n                            prefix={<Icon name=\"key\" />} \n                            placeholder=\"Password\"\n                            type=\"password\"/>\n                        <Checkbox\n                            className=\"my-15 mx-0\" \n                            color=\"primary\" \n                            label=\"Remember me?\"/>\n                        <Button \n                            className=\"my-15 mx-0\"\n                            color=\"primary\" \n                            name=\"Sign in\" block/>\n                        <div className=\"fz-9 rui-link text-center py-10\">\n                            Dont't have an account?\n                        </div>\n                    </div>\n                </Modal>\n                <Modal\n                    dark\n                    centered\n                    onClose={() => setModalDark(false)} \n                    visible={modalDark} \n                    header=\"Sign in\">\n                    <div className=\"pa-10\">\n                        <InputField\n                            className=\"my-15 mx-0\"\n                            prefix={<Icon name=\"account\" />} \n                            placeholder=\"Login\"/>\n                        <InputField\n                            className=\"my-15 mx-0\"\n                            prefix={<Icon name=\"key\" />} \n                            placeholder=\"Password\"\n                            type=\"password\"/>\n                        <Checkbox\n                            className=\"my-15 mx-0\" \n                            color=\"primary\" \n                            label=\"Remember me?\"/>\n                        <Button \n                            className=\"my-15 mx-0\"\n                            color=\"primary\" \n                            name=\"Sign in\" block/>\n                        <div className=\"fz-9 rui-link text-center py-10\">\n                            Dont't have an account?\n                        </div>\n                    </div>\n                </Modal>\n                <Collapse \n                    icon=\"code\" \n                    iconSize={18}\n                    extra={<CopyToClipboard defaultText=\"Copy code\" text={usage} className=\"mr-10\"/>} \n                    tooltip=\"Show/Hide Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usage}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <h2>API</h2>\n            <Table\n                bordered\n                headers={['Property', 'Description', 'Default', 'Type', 'Value']}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n\nexport default ModalPage;\n"],"sourceRoot":""}