{"version":3,"sources":["pages/ListPage.js"],"names":["names","name","hero","active","itemsComplexInitial","icon","check","keys","items","property","description","default","type","value","items2","ListPage","useState","itemsComplex","selected","setSelected","listApi","createRef","listItemApi","parent","isSelected","item","result","className","ref","onClick","current","scrollIntoView","behavior","block","outlined","title","header","map","index","isActiveItem","key","subTitle","size","leftBorder","hover","controls","iconSize","tooltip","language","style","prism","dark","length","filter","_item","selectOne","checkbox","Fragment","color","small","bordered","headers","itemTitles","setRef"],"mappings":"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","file":"js/22.chunk.js","sourcesContent":["import React, { useState, createRef } from 'react';\nimport { List, ListItem, Button, Table, Card, Collapse, BackTopBtn } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst simpleList =\n`// Usage examples\nimport React, { useState } from 'react';\nimport { List, ListItem } from '@assenti/rui-components';\nconst names = [\n    { name: 'John Doe', active: false },\n    { name: 'Peter Parker', active: true },\n    { name: 'Tony Stark', active: false },\n    { name: 'Bruce Benner', active: false }\n];\n\nfunction Example() {\n    const [item, setItem] = useState('');\n\n    return (\n        <div>\n            <List>\n                {names.map((item, index) => \n                    <ListItem\n                        isActiveItem={item => item.active} \n                        key={index} \n                        item={item}\n                        itemTitle=\"name\"/>\n                )}\n            </List>\n            <br/>\n            <List size=\"medium\" header=\"Medium size\">\n                {names.map((item, index) => \n                    <ListItem\n                        isActiveItem={item => item.active} \n                        key={index} \n                        item={item}\n                        itemTitle=\"name\"/>\n                )}\n            </List>\n            <br/>\n            <List size=\"large\" header=\"Large size\">\n                {names.map((item, index) => \n                    <ListItem\n                        key={index}\n                        hover\n                        icon=\"account\" \n                        item={item.name}\n                        controls={<span className=\"fz-10 text-dark\">+7 (777) 777-77-77</span>}/>\n                )}\n            </List>\n        </div>\n    )\n}`\n\nconst darkMode =\n`// Usage examples\nimport React, { useState } from 'react';\nimport { List, ListItem } from '@assenti/rui-components';\nconst heroes = [\n    { hero: 'Captain America', icon: 'shield-account' }, \n    { hero: 'Spider man', icon: 'shield-account' }, \n    { hero: 'Iron man', icon: 'shield-account' }, \n    { hero: 'Hulk', icon: 'shield-account' }\n];\n\nfunction Example() {\n    return (\n        <div>\n            <List dark\n            header=\"Marvel Avengers\" \n            items={itemsComplex} \n            itemTitle=\"hero\" \n            hover>\n            {itemsComplex.map((item, index) => \n                <ListItem \n                    key={index} \n                    item={item}\n                    icon={item.icon}\n                    itemTitle=\"hero\"\n                    hover/>\n            )}\n            </List>\n        </div>\n    )\n}`\n\nconst checkboxList =\n`// Usage examples\nimport React, { useState } from 'react';\nimport { List, ListItem, Checkbox } from '@assenti/rui-components';\nconst names = [\n    { name: 'Steve Rogers', hero: 'Captain America', check: false }, \n    { name: 'Peter Parker', hero: 'Spider man', check: false }, \n    { name: 'Tony Stark', hero: 'Iron man', check: false }, \n    { name: 'Bruce Benner', hero: 'Hulk', check: false }\n];\n\nfunction Example() {\n    const [selected, setSelected] = useState([]);\n\n    const selectOne = (item) => {\n        if (isSelected(item, 'hero')) {\n            setSelected(selected => selected.filter(_item => _item.hero !== item.hero))\n        } else setSelected([...selected, item]);\n    }\n\n    const isSelected = (item, prop) => {\n        let result = false\n        if (prop) {\n            for (const select of selected) {\n                if (item[prop] === select[prop]) result = true \n            }\n        }\n        return result\n    }\n\n    return (\n        <div>\n            <List header={'Selected Marvel avengers: ' + selected.length}>\n                {itemsComplex.map((item, index) => \n                    <ListItem \n                        key={index} \n                        item={item.hero}\n                        isActiveItem={isSelected(item.hero)}\n                        hover\n                        onClick={() => selectOne(item.hero)}\n                        checkbox/>\n                )}\n            </List>\n        </div>\n    )\n}`\n\nconst controlsList =\n`// Usage examples\nimport React, { useState } from 'react';\nimport { List, ListItem, Button, Tag } from '@assenti/rui-components';\nconst names = [\n    { name: 'Steve Rogers', hero: 'Captain America', icon: 'shield-account' }, \n    { name: 'Peter Parker', hero: 'Spider man', icon: 'shield-account' }, \n    { name: 'Tony Stark', hero: 'Iron man', icon: 'shield-account' }, \n    { name: 'Bruce Benner', hero: 'Hulk', icon: 'shield-account' }\n];\n\nfunction Example() {\n    return (\n        <div>\n            <List>\n                {names.map((item, index) => \n                    <ListItem \n                        key={index} \n                        item={item}\n                        icon={item.icon} \n                        itemTitle=\"name\"\n                        subTitle={<Tag small color=\"info\" value={item.hero}/>}\n                        controls={\n                            <React.Fragment>\n                                <Button small color=\"light\" className=\"mr-10\" icon=\"edit\"/>\n                                <Button small color=\"light\" icon=\"close\"/>\n                            </React.Fragment>\n                        }/>\n                )}\n            </List>\n        </div>\n    )\n}`\n\nconst names = [\n    { name: 'John Doe', hero: 'Captain America', active: false },\n    { name: 'Peter Parker', hero: 'Spider man', active: true },\n    { name: 'Tony Stark', hero: 'Iron man', active: false },\n    { name: 'Bruce Benner', hero: 'Hulk', active: false }\n];\n\nconst itemsComplexInitial = [\n    { name: 'Steve Rogers', hero: 'Captain America', icon: 'shield-account', check: false }, \n    { name: 'Peter Parker', hero: 'Spider man', icon: 'shield-account', check: false }, \n    { name: 'Tony Stark', hero: 'Iron man', icon: 'shield-account', check: false }, \n    { name: 'Bruce Benner', hero: 'Hulk', icon: 'shield-account', check: false }\n];\n\nconst keys = ['property', 'description', 'default', 'type', 'value'];\nconst items = [\n    { \n        property: 'header', \n        description: 'Set list header',\n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'size', \n        description: 'Set list item size',\n        default: '', \n        type: 'string',\n        value: 'medium | large'\n    },\n    { \n        property: 'dark',\n        description: 'Set dark mode (can not be used with light prop)', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'className',\n        description: 'Set a custom css class to component', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n]\nconst items2 = [\n    { \n        property: 'render', \n        description: 'You can pass your own custom element', \n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'onClick', \n        description: 'Invokes on item click', \n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'item', \n        description: 'Set list item', \n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'subTitle', \n        description: 'Set subtitle in list item (It can be just text or Tag and etc.)', \n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'isActiveItem', \n        description: 'Set active list item', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'roundedActive', \n        description: 'Set hover and active list item rounded', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'leftBorder', \n        description: 'Set left border highlighting on active item', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'checkbox',\n        description: 'A placeholder for checkbox (Expect a checkbox element or Component)', \n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'icon',\n        description: 'Set icon before the text in list item', \n        default: '', \n        type: 'string',\n        value: 'home | search | etc. (see icon names list in docs)'\n    },\n    { \n        property: 'controls',\n        description: 'A placeholder for item controls like buttons or etc.', \n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'noDivider',\n        description: 'Remove the divider line between items', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'hover',\n        description: 'Highlight hovered list item', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'className',\n        description: 'Set a custom css class to component', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n]\n\nconst ListPage = () => {\n    const [itemsComplex] = useState(itemsComplexInitial);\n    const [selected, setSelected] = useState([]);\n    const listApi = createRef();\n    const listItemApi = createRef();\n    const parent = createRef();\n\n    const goListApi = () => {\n        if (listApi.current) listApi.current.scrollIntoView({ behavior: 'smooth', block: 'start' })\n    }\n\n    const goListItemApi = () => {\n        if (listItemApi.current) listItemApi.current.scrollIntoView({ behavior: 'smooth', block: 'start' })\n    }\n\n    const selectOne = (item) => {\n        if (isSelected(item)) {\n            setSelected(selected => selected.filter(_item => _item !== item))\n        } else setSelected([...selected, item]);\n    }\n\n    const isSelected = (item) => {\n        let result = false\n        for (const select of selected) {\n            if (item === select) result = true \n        }\n        return result\n    }\n    \n    return (\n        <div className=\"rui-page\" ref={parent}>\n            <div className=\"row align-center space-between\">\n                <div className=\"rui-page-title\">List, ListItem Components</div>\n                <div className=\"row\">\n                    <div className=\"rui-link fz-13 fw-bold mr-10\" onClick={() => goListApi()}>List API</div>\n                    <div className=\"rui-link fz-13 fw-bold\" onClick={() => goListItemApi()}>ListItem API</div>\n                </div>\n            </div>\n            <Card \n                outlined \n                className=\"px-0\"\n                title=\"Simple list with active item\">\n                <List header=\"Default size\">\n                    {names.map((item, index) => \n                        <ListItem\n                            isActiveItem={item.active} \n                            key={index} \n                            item={item.name}\n                            subTitle={item.hero}/>\n                    )}\n                </List>\n                <br/>\n                <List size=\"medium\" header=\"Medium size, left bordered active item\">\n                    {names.map((item, index) => \n                        <ListItem\n                            isActiveItem={item.active} \n                            key={index}\n                            leftBorder \n                            item={item.name}\n                            subTitle={item.hero}/>\n                    )}\n                </List>\n                <br/>\n                <List size=\"large\" header=\"Large size\">\n                    {names.map((item, index) => \n                        <ListItem\n                            key={index}\n                            hover\n                            icon=\"account\" \n                            item={item.name}\n                            controls={<span className=\"fz-10 text-dark\">+7 (777) 777-77-77</span>}/>\n                    )}\n                </List>\n                <Collapse className=\"px-15\" icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {simpleList}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <br/>\n            <Card outlined title=\"Dark mode\">\n                <List dark\n                    header=\"Marvel Avengers\" \n                    hover>\n                    {itemsComplex.map((item, index) => \n                        <ListItem \n                            key={index} \n                            item={item.hero}\n                            icon={item.icon}\n                            hover/>\n                    )}\n                </List>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {darkMode}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <br/>\n            <Card \n                outlined \n                title=\"List with checkbox\"\n                className=\"px-0\">\n                <List header={'Selected Marvel avengers: ' + selected.length}>\n                    {itemsComplex.map((item, index) => \n                        <ListItem \n                            key={index} \n                            item={item.hero}\n                            isActiveItem={isSelected(item.hero)}\n                            hover\n                            onClick={() => selectOne(item.hero)}\n                            checkbox/>\n                    )}\n                </List>\n                <Collapse className=\"px-15\" icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {checkboxList}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <br/>\n            <Card outlined title=\"List with controls and subtitles\">\n                <List>\n                    {itemsComplex.map((item, index) => \n                        <ListItem \n                            key={index} \n                            item={item.name}\n                            icon={item.icon} \n                            subTitle={item.hero}\n                            controls={\n                                <React.Fragment>\n                                    <Button color=\"light\" \n                                        className=\"mr-10\" \n                                        icon=\"edit\"\n                                        iconSize={16}/>\n                                    <Button small color=\"light\" icon=\"close\"/>\n                                </React.Fragment>\n                            }/>\n                    )}\n                </List>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {controlsList}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <h2 ref={listApi}>List API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n            <h2 ref={listItemApi}>ListItem API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items2}\n                index={true}\n                itemTitles={keys}/>\n            <BackTopBtn setRef={parent} dark size=\"medium\"/>\n        </div>\n    )\n\n}\n\nexport default ListPage;\n"],"sourceRoot":""}