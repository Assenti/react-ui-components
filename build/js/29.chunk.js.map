{"version":3,"sources":["pages/RadioPage.js"],"names":["citiesUS","colors","keys","items","property","description","default","type","value","RadioPage","useState","cityUS","setCityUS","color","setColor","isDisabled","setIsDisabled","vertical","setVertical","className","outlined","title","prefix","name","width","label","onChange","v","check","rightLabel","disabled","options","icon","iconSize","tooltip","language","style","prism","bordered","headers","index","itemTitles"],"mappings":"sMAKMA,EAAW,CAAC,mBAAoB,gBAAiB,UAAW,SAAU,gBAAiB,eACvFC,EAAS,CAAC,UAAW,OAAQ,UAAW,SAExCC,EAAO,CAAC,WAAY,cAAe,UAAW,OAAQ,SACtDC,EAAQ,CACV,CACIC,SAAU,WACVC,YAAa,sBACbC,QAAS,GACTC,KAAM,WACNC,MAAO,wBAEX,CACIJ,SAAU,OACVC,YAAa,uBACbC,QAAS,GACTC,KAAM,SACNC,MAAO,IAEX,CACIJ,SAAU,QACVC,YAAa,eACbC,QAAS,GACTC,KAAM,SACNC,MAAO,IAEX,CACIJ,SAAU,QACVC,YAAa,yBACbC,QAAS,UACTC,KAAM,SACNC,MAAO,oCAEX,CACIJ,SAAU,WACVC,YAAa,4BACbC,QAAS,QACTC,KAAM,UACNC,MAAO,gBAEX,CACIJ,SAAU,WACVC,YAAa,yBACbC,QAAS,QACTC,KAAM,UACNC,MAAO,gBAEX,CACIJ,SAAU,YACVC,YAAa,sCACbC,QAAS,GACTC,KAAM,SACNC,MAAO,KA+GAC,UAzDG,WAAO,IAAD,EACQC,mBAAS,IADjB,mBACbC,EADa,KACLC,EADK,OAEMF,mBAAST,EAAO,IAFtB,mBAEbY,EAFa,KAENC,EAFM,OAGgBJ,oBAAS,GAHzB,mBAGbK,EAHa,KAGDC,EAHC,OAIYN,oBAAS,GAJrB,mBAIbO,EAJa,KAIHC,EAJG,KAMpB,OACI,yBAAKC,UAAU,YACX,yBAAKA,UAAU,kBAAf,wBACA,kBAAC,IAAD,CAAMC,UAAQ,EAACC,MAAM,SACjB,kBAAC,IAAD,CACIlB,MAAOF,EACPqB,OAAQ,kBAAC,IAAD,CAAMC,KAAK,UACnBC,MAAO,IACPC,MAAM,qBACNZ,MAAM,UACNL,MAAOK,EACPa,SAAU,SAAAC,GAAC,OAAIb,EAASa,MAC5B,6BACA,kBAAC,IAAD,CACIC,MAAOX,EACPY,WAAW,WACXhB,MAAM,UACNM,UAAU,QACVO,SAAU,kBAAMR,GAAaD,MACjC,6BACA,kBAAC,IAAD,CACIW,MAAOb,EACPc,WAAW,WACXhB,MAAM,UACNM,UAAU,QACVO,SAAU,kBAAMV,GAAeD,MACnC,6BACA,kBAAC,IAAD,CACIP,MAAOG,EACPM,SAAUA,EACVM,KAAK,OACLV,MAAOA,EACPiB,SAAUf,EACVW,SAAU,SAAClB,GAAD,OAAWI,EAAUJ,IAC/BuB,QAAS/B,IACb,kBAAC,IAAD,CAAUgC,KAAK,OAAOC,SAAU,GAAIC,QAAQ,QACxC,kBAAC,IAAD,CAAmBC,SAAS,MAAMC,MAAOC,KA5FlD,kqDAiGC,mCACA,kBAAC,IAAD,CACIC,UAAQ,EACRC,QAAS,CAAC,WAAY,cAAe,UAAW,OAAQ,SACxDpC,MAAOA,EACPqC,OAAO,EACPC,WAAYvC","file":"js/29.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { RadioGroup, Table, Card, Collapse, Switch, Select, Icon } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst citiesUS = ['Washington, D.C.', 'New York City', 'Chicago', 'Boston', 'San Francisco', 'Los Angeles'];\nconst colors = ['primary', 'info', 'success', 'error'];\n\nconst keys = ['property', 'description', 'default', 'type', 'value'];\nconst items = [\n    { \n        property: 'onChange', \n        description: 'Handle radio change', \n        default: '', \n        type: 'function',\n        value: 'return a radio value'\n    },\n    { \n        property: 'name', \n        description: 'Set radio group name', \n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'value', \n        description: 'Chosen value', \n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'color', \n        description: 'Set radio button color', \n        default: 'primary', \n        type: 'string',\n        value: 'primary | info | success | error'\n    },\n    { \n        property: 'disabled',\n        description: 'Make radio group disabled', \n        default: 'false',\n        type: 'boolean', \n        value: 'true | false'\n    },\n    { \n        property: 'vertical',\n        description: 'Make position vertical', \n        default: 'false',\n        type: 'boolean', \n        value: 'true | false'\n    },\n    { \n        property: 'className',\n        description: 'Set a custom css class to component', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n]\n\nconst usage =\n`// Usage examples\nimport React, { useState } from 'react';\nimport { RadioGroup, Switch, Select, Icon } from '@assenti/rui-components';\nconst citiesUS = ['Washington, D.C.', 'New York City', 'Chicago', 'Boston', 'San Francisco', 'Los Angeles'];\nconst colors = ['primary', 'info', 'success', 'error'];\n\nfunction Example() {\n    const [cityUS, setCityUS] = useState('');\n    const [isDisabled, setIsDisabled] = useState(false);\n    const [vertical, setVertical] = useState(true);\n    const [color, setColor] = useState(colors[0]);\n\n    return (\n        <div>\n            <Select\n                items={colors}\n                prefix={<Icon name=\"brush\"/>}\n                width={200}\n                label=\"Radio button color\"\n                color=\"primary\"\n                value={color}\n                onChange={v => setColor(v)}/>\n            <br/>\n            <Switch\n                check={vertical}\n                rightLabel=\"Vertical\"\n                color=\"primary\"\n                className=\"my-10\"\n                onChange={() => setVertical(!vertical)}/>\n            <br/>\n            <Switch\n                check={isDisabled}\n                rightLabel=\"Disabled\"\n                color=\"primary\"\n                className=\"my-10\"\n                onChange={() => setIsDisabled(!isDisabled)}/>\n            <br/>\n            <RadioGroup \n                value={cityUS} \n                vertical={vertical}\n                name=\"city\"\n                color={color}\n                disabled={isDisabled}\n                onChange={(value) => setCityUS(value)}\n                options={citiesUS}/>\n        </div>\n    )\n}`\n\nconst RadioPage = () => {\n    const [cityUS, setCityUS] = useState('');\n    const [color, setColor] = useState(colors[0]);\n    const [isDisabled, setIsDisabled] = useState(false);\n    const [vertical, setVertical] = useState(true);\n\n    return (\n        <div className=\"rui-page\">\n            <div className=\"rui-page-title\">RadioGroup Component</div>\n            <Card outlined title=\"Usage\">\n                <Select\n                    items={colors}\n                    prefix={<Icon name=\"brush\"/>}\n                    width={200}\n                    label=\"Radio button color\"\n                    color=\"primary\"\n                    value={color}\n                    onChange={v => setColor(v)}/>\n                <br/>\n                <Switch\n                    check={vertical}\n                    rightLabel=\"Vertical\"\n                    color=\"primary\"\n                    className=\"my-10\"\n                    onChange={() => setVertical(!vertical)}/>\n                <br/>\n                <Switch\n                    check={isDisabled}\n                    rightLabel=\"Disabled\"\n                    color=\"primary\"\n                    className=\"my-10\"\n                    onChange={() => setIsDisabled(!isDisabled)}/>\n                <br/>\n                <RadioGroup \n                    value={cityUS} \n                    vertical={vertical}\n                    name=\"city\"\n                    color={color}\n                    disabled={isDisabled}\n                    onChange={(value) => setCityUS(value)}\n                    options={citiesUS}/>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usage}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <h2>API</h2>\n            <Table\n                bordered\n                headers={['Property', 'Description', 'Default', 'Type', 'Value']}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\nexport default RadioPage;"],"sourceRoot":""}