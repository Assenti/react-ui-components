{"version":3,"sources":["pages/TagPage.js"],"names":["keys","items","property","description","default","type","value","TagPage","parent","createRef","api","useState","visible","setVisible","className","ref","onClick","current","scrollIntoView","behavior","block","outlined","color","title","icon","iconSize","tooltip","language","style","prism","rounded","lifted","smooth","small","iconLeft","closable","onClose","name","setRef","dark","size","bordered","headers","index","itemTitles"],"mappings":"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","file":"js/29.chunk.js","sourcesContent":["import React, { createRef, useState } from 'react';\nimport { Tag, Card, Table, Collapse, BackTopBtn, Button } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst keys = ['property', 'description', 'default', 'type', 'value'];\nconst items = [\n    { \n        property: 'value', \n        description: 'Tag value', \n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'lifted', \n        description: 'Lift up the input field', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'color', \n        description: 'Set color of input field from list', \n        default: '', \n        type: 'string',\n        value: 'primary | info | success | error | black'\n    },\n    { \n        property: 'rounded', \n        description: 'Make border radius rounded',\n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'smooth',\n        description: 'Set input field borders more smooth', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'uppercase',\n        description: 'Transform text to upper case', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'small', \n        description: 'Set tag size',\n        default: '', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'iconLeft', \n        description: 'Set icon before the value',\n        default: '', \n        type: 'string',\n        value: 'home | search | etc. (see icon names list in docs)'\n    },\n    { \n        property: 'iconRight', \n        description: 'Set icon after the value',\n        default: '', \n        type: 'string',\n        value: 'home | search | etc. (see icon names list in docs)'\n    },\n    { \n        property: 'width',\n        description: 'Set a tag width', \n        default: '', \n        type: 'string | number',\n        value: ''\n    },\n    { \n        property: 'closable',\n        description: 'Enable close function', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'visible',\n        description: 'Set Tag visible state', \n        default: 'true', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'onClose',\n        description: 'Invokes on close icon click', \n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'className',\n        description: 'Set a custom css class to component', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n]\n\nconst tagColors =\n`// Usage examples\nimport React from 'react';\nimport { Tag } from '@assenti/react-ui-components';\n\nfunction Example() {\n    return (\n        <div>\n            <Tag value=\"Price: 1000\" />\n            <Tag value=\"Price: 1000\" color=\"yellow\"/>\n            <Tag value=\"Price: 1000\" color=\"primary\"/>\n            <Tag value=\"Price: 1000\" color=\"info\"/>\n            <Tag value=\"Price: 1000\" color=\"success\"/>\n            <Tag value=\"Price: 1000\" color=\"error\"/>\n        </div>\n    )\n}`\n\nconst tagTypes =\n`// Usage examples\nimport React from 'react';\nimport { Tag } from '@assenti/react-ui-components';\n\nfunction Example() {\n    return (\n        <div>\n            <Tag value=\"Price: 1000\" rounded color=\"yellow\"/>\n            <Tag value=\"Price: 1000\" rounded outlined color=\"primary\"/>\n            <Tag value=\"Price: 1000\" rounded lifted color=\"primary\"/>\n            <Tag value=\"Price: 1000\" outlined color=\"primary\"/>\n            <Tag value=\"Price: 1000\" smooth color=\"success\"/>\n            <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n        </div>\n    )\n}`\n\nconst tagSizes =\n`// Usage examples\nimport React from 'react';\nimport { Tag } from '@assenti/react-ui-components';\n\nfunction Example() {\n    return (\n        <div>\n            <Tag value=\"Defaul tag\" color=\"yellow\"/>\n            <Tag value=\"Small tag\" small color=\"yellow\"/>\n            <Tag value=\"Small tag\" small rounded color=\"yellow\"/>\n        </div>\n    )\n}`\n\nconst tagIcons =\n`// Usage examples\nimport React from 'react';\nimport { Tag } from '@assenti/react-ui-components';\n\nfunction Example() {\n    return (\n        <div>\n            <Tag iconLeft=\"smartphone\" value=\"777 777 77 77\" color=\"primary\"/>\n            <Tag iconLeft=\"star\" value=\"1020\" small color=\"yellow\"/>\n            <Tag iconLeft=\"account\" value=\"John Doe\" color=\"info\"/>\n            <Tag iconLeft=\"account\" value=\"John Doe\" />\n        </div>\n    )\n}`\n\nconst TagPage = () => {\n    const parent = createRef();\n    const api = createRef();\n    const [visible, setVisible] = useState(true);\n\n    const goToApi = () => {\n        if (api.current) api.current.scrollIntoView({ behavior: 'smooth', block: 'center'})\n    }\n\n    return (\n        <div className=\"rui-page\" ref={parent}>\n            <div className=\"row align-center space-between\">\n                <div className=\"rui-page-title\">Tags</div>\n                <div onClick={() => goToApi()} className=\"rui-link fz-13 fw-bold mr-10\">API</div>\n            </div>\n            <Card outlined color=\"primary\" title=\"Tag colors\">\n                <Tag value=\"Price: 1000\" />\n                <Tag value=\"Price: 1000\" color=\"yellow\"/>\n                <Tag value=\"Price: 1000\" color=\"primary\"/>\n                <Tag value=\"Price: 1000\" color=\"info\"/>\n                <Tag value=\"Price: 1000\" color=\"success\"/>\n                <Tag value=\"Price: 1000\" color=\"error\"/>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {tagColors}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <br/>\n            <Card outlined color=\"primary\" title=\"Tag types\">\n                <Tag value=\"Price: 1000\" rounded color=\"yellow\"/>\n                <Tag value=\"Price: 1000\" rounded outlined color=\"primary\"/>\n                <Tag value=\"Price: 1000\" rounded lifted color=\"primary\"/>\n                <Tag value=\"Price: 1000\" outlined color=\"primary\"/>\n                <Tag value=\"Price: 1000\" smooth color=\"success\"/>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {tagTypes}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <br/>\n            <Card outlined color=\"primary\" title=\"Tag sizes\">\n                <Tag value=\"Defaul tag\" color=\"yellow\"/>\n                <Tag value=\"Small tag\" small color=\"yellow\"/>\n                <Tag value=\"Small tag\" small rounded color=\"yellow\"/>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {tagSizes}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <br/>\n            <Card outlined color=\"primary\" title=\"Tag with icons\">\n                <div className=\"row align-center\">\n                    <Tag iconLeft=\"smartphone\" value=\"777 777 77 77\" color=\"primary\"/>\n                    <Tag iconLeft=\"star\" value=\"1020\" small color=\"yellow\"/>\n                    <Tag iconLeft=\"account\" value=\"John Doe\" color=\"info\"/>\n                    <Tag \n                        iconLeft=\"account\" \n                        value=\"John Doe\" \n                        closable\n                        visible={visible} \n                        onClose={() => setVisible(false)}/>\n                    <Button \n                        name=\"Return Tag\" \n                        color=\"info\" \n                        className=\"ml-20\" \n                        onClick={() => setVisible(true)}/>\n                </div>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {tagIcons}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <h2 ref={api}>API</h2>\n            <BackTopBtn setRef={parent} dark size=\"medium\"/>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n\nexport default TagPage;\n"],"sourceRoot":""}