{"version":3,"sources":["pages/CalendarPage.js"],"names":["keys","items","property","description","default","type","value","colors","sizes","locales","events","date","Date","title","event","color","holidays","usage","CalendarPage","useState","setColor","size","setSize","locale","setLocale","limit","setLimit","onlyPast","setOnlyPast","weekStartsSunday","setWeekStartsSunday","dark","setDark","full","setFull","hideWeekend","setHideWeekend","hideCurrentDay","setHideCurrentDay","className","outlined","prefix","name","width","label","onChange","v","e","target","check","rightLabel","shortWeekName","onDate","console","log","icon","iconSize","extra","defaultText","text","tooltip","language","style","prism","bordered","headers","index","itemTitles"],"mappings":"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","file":"js/14.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Calendar, Card, Table, Collapse, Select, Icon, Switch, InputField, CopyToClipboard } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst keys = ['property', 'description', 'default', 'type', 'value'];\nconst items = [\n    { \n        property: 'locale', \n        description: 'Set locale (English, Kazakh, Russian, French. i18n in process)', \n        default: 'en', \n        type: 'string',\n        value: 'en | kz | ru | fr'\n    },\n    { \n        property: 'events', \n        description: 'Set events', \n        default: '', \n        type: 'array[{ date, items: [{title?, event, color?}] }]',\n        value: ''\n    },\n    { \n        property: 'holidays', \n        description: 'Set holidays', \n        default: '', \n        type: 'array[{ date }]',\n        value: ''\n    },\n    { \n        property: 'onDate', \n        description: 'Invokes on date click (return Date object)', \n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'hideWeekend',\n        description: 'If flag is set, weekend highlighting disabled', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'hideCurrentDay',\n        description: 'If flag is set, today highlighting disabled', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'color', \n        description: 'Set Calendar color theme', \n        default: '', \n        type: 'string',\n        value: 'primary | info | success | error | dark'\n    },\n    { \n        property: 'size', \n        description: 'Set Calendar size',\n        default: '', \n        type: 'string',\n        value: 'medium | large'\n    },\n    { \n        property: 'limit',\n        description: 'Set years limit that should be enabled', \n        default: '15', \n        type: 'number',\n        value: ''\n    },\n    { \n        property: 'onlyPast',\n        description: 'If flag is set, only past years enabled', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'weekStartsSunday',\n        description: 'If flag is set, week starts from Sunday', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'shortWeekName',\n        description: 'Set short week name', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'dark',\n        description: 'Set dark mode', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'width',\n        description: 'Set width', \n        default: '100%', \n        type: 'number | string',\n        value: ''\n    },\n    { \n        property: 'popOverTrigger',\n        description: 'Set event popover invoking mode', \n        default: 'hover', \n        type: 'string',\n        value: 'hover | click'\n    },\n    { \n        property: 'className',\n        description: 'Set a custom css class to component', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n]\n\nconst colors = ['primary', 'info', 'success', 'error', 'black'];\nconst sizes = ['default', 'medium', 'large'];\nconst locales = ['en', 'kz', 'ru', 'fr'];\n\nconst events = [\n    { \n        date: new Date(2020,2,8), \n        items: [\n            { title: 'Event', event: 'International Women Day', color: '#9C27B0' },\n            { title: 'Event', event: 'Congratulate my women', color: '#9C27B0' }\n\n        ]\n    },\n    { \n        date: new Date(2020,2,22), \n        items: [\n            { title: 'Event', event: 'Nauryz Meiramy Holiday', color: '#9C27B0' }\n        ]\n    },\n]\n\nconst holidays = [\n    { date: new Date(2020,2,8) },\n    { date: new Date(2020,2,9) },\n    { date: new Date(2020,2,22) },\n    { date: new Date(2020,2,23) }\n]\n\nconst usage =\n`// Usage example\nimport React, { useState } from 'react';\nimport { Calendar, Select, Icon, Switch, InputField } from '../components';\n\nconst colors = ['primary', 'info', 'success', 'error', 'black'];\nconst sizes = ['default', 'medium', 'large'];\nconst locales = ['en', 'kz', 'ru', 'fr'];\n\nconst events = [\n    { \n        date: new Date(2020,2,8), \n        items: [\n            { title: 'Event', event: 'International Women Day', color: '#9C27B0' },\n            { title: 'Event', event: 'Congratulate my women', color: '#9C27B0' }\n\n        ]\n    },\n    { \n        date: new Date(2020,2,22), \n        items: [\n            { title: 'Event', event: 'Nauryz Meiramy Holiday', color: '#9C27B0' }\n        ]\n    }\n]\n\nconst holidays = [\n    { date: new Date(2020,2,8) },\n    { date: new Date(2020,2,9) },\n    { date: new Date(2020,2,22) },\n    { date: new Date(2020,2,23) }\n]\n\nfunction Example() {\n    const [color, setColor] = useState(colors[0]);\n    const [size, setSize] = useState(sizes[0]);\n    const [locale, setLocale] = useState(locales[0]);\n    const [limit, setLimit] = useState(15);\n    const [onlyPast, setOnlyPast] = useState(true);\n    const [weekStartsSunday, setWeekStartsSunday] = useState(false);\n    const [dark, setDark] = useState(false);\n    const [full, setFull] = useState(false);\n    const [hideWeekend, setHideWeekend] = useState(false);\n    const [hideCurrentDay, setHideCurrentDay] = useState(false);\n\n    return (\n        <div>\n            <Select\n                items={colors}\n                prefix={<Icon name=\"brush\"/>}\n                width={200}\n                label=\"Calendar color\"\n                color=\"primary\"\n                value={color}\n                onChange={v => setColor(v)}/>\n            <Select\n                items={sizes}\n                prefix={<Icon name=\"format-size\"/>}\n                width={200}\n                label=\"Calendar size\"\n                color=\"primary\"\n                className=\"ml-10\"\n                value={size}\n                onChange={v => setSize(v)}/>\n            <br/>\n            <Select\n                items={locales}\n                prefix={<Icon name=\"translate\"/>}\n                width={200}\n                label=\"Locale\"\n                color=\"primary\"\n                value={locale}\n                onChange={v => setLocale(v)}/>\n            <InputField\n                width={200}\n                className=\"ml-10 my-0\"\n                value={limit}\n                label=\"Years limit\"\n                onChange={e => setLimit(e.target.value)}\n                prefix={<Icon name=\"calendar-month\"/>}\n                />\n            <br/>\n            <Switch \n                color=\"primary\" \n                check={onlyPast}\n                rightLabel=\"Show only past years\"\n                className=\"my-10\"\n                onChange={() => setOnlyPast(!onlyPast)}/>\n            <Switch \n                color=\"primary\" \n                check={weekStartsSunday}\n                rightLabel=\"Week starts from Sunday\"\n                className=\"my-10\"\n                onChange={() => setWeekStartsSunday(!weekStartsSunday)}/>\n            <br/>\n            <Switch \n                color=\"primary\" \n                check={dark}\n                rightLabel=\"Dark\"\n                className=\"my-10\"\n                onChange={() => setDark(!dark)}/>\n            <Switch \n                color=\"primary\" \n                check={full}\n                rightLabel=\"Full width\"\n                className=\"my-10\"\n                onChange={() => setFull(!full)}/>\n            <br/>\n            <Switch \n                color=\"primary\" \n                check={hideCurrentDay}\n                rightLabel=\"Hide current day highlight\"\n                className=\"my-10\"\n                onChange={() => setHideCurrentDay(!hideCurrentDay)}/>\n            <Switch \n                color=\"primary\" \n                check={hideWeekend}\n                rightLabel=\"Hide weekend highlight\"\n                className=\"my-10\"\n                onChange={() => setHideWeekend(!hideWeekend)}/>\n            <br/>\n            <Calendar\n                width={full ? null : 400}\n                className=\"my-10\"\n                shortWeekName\n                hideWeekend={hideWeekend}\n                hideCurrentDay={hideCurrentDay}\n                onDate={(date) => console.log(date)}\n                events={events}\n                holidays={holidays}\n                weekStartsSunday={weekStartsSunday}\n                size={size}\n                dark={dark}\n                limit={limit} \n                onlyPast={onlyPast}\n                locale={locale}\n                color={color}/>\n        </div>\n    )\n}`\n\nconst CalendarPage = () => {\n    const [color, setColor] = useState(colors[0]);\n    const [size, setSize] = useState(sizes[0]);\n    const [locale, setLocale] = useState(locales[0]);\n    const [limit, setLimit] = useState(15);\n    const [onlyPast, setOnlyPast] = useState(true);\n    const [weekStartsSunday, setWeekStartsSunday] = useState(false);\n    const [dark, setDark] = useState(false);\n    const [full, setFull] = useState(false);\n    const [hideWeekend, setHideWeekend] = useState(false);\n    const [hideCurrentDay, setHideCurrentDay] = useState(false);\n\n    return (\n        <div className=\"rui-page\">\n            <div className=\"rui-page-title\">Calendar Component</div>\n            <Card outlined title=\"Calendar usage\">\n                <Select\n                    items={colors}\n                    prefix={<Icon name=\"brush\"/>}\n                    width={200}\n                    label=\"Calendar color\"\n                    color=\"primary\"\n                    value={color}\n                    onChange={v => setColor(v)}/>\n                <Select\n                    items={sizes}\n                    prefix={<Icon name=\"format-size\"/>}\n                    width={200}\n                    label=\"Calendar size\"\n                    color=\"primary\"\n                    className=\"ml-10\"\n                    value={size}\n                    onChange={v => setSize(v)}/>\n                <br/>\n                <Select\n                    items={locales}\n                    prefix={<Icon name=\"translate\"/>}\n                    width={200}\n                    label=\"Locale\"\n                    color=\"primary\"\n                    value={locale}\n                    onChange={v => setLocale(v)}/>\n                <InputField\n                    width={200}\n                    className=\"ml-10 my-0\"\n                    value={limit}\n                    label=\"Years limit\"\n                    onChange={e => setLimit(e.target.value)}\n                    prefix={<Icon name=\"calendar-month\"/>}\n                    />\n                <br/>\n                <Switch \n                    color=\"primary\" \n                    check={onlyPast}\n                    rightLabel=\"Show only past years\"\n                    className=\"my-10\"\n                    onChange={() => setOnlyPast(!onlyPast)}/>\n                <Switch \n                    color=\"primary\" \n                    check={weekStartsSunday}\n                    rightLabel=\"Week starts from Sunday\"\n                    className=\"my-10\"\n                    onChange={() => setWeekStartsSunday(!weekStartsSunday)}/>\n                <br/>\n                <Switch \n                    color=\"primary\" \n                    check={dark}\n                    rightLabel=\"Dark\"\n                    className=\"my-10\"\n                    onChange={() => setDark(!dark)}/>\n                <Switch \n                    color=\"primary\" \n                    check={full}\n                    rightLabel=\"Full width\"\n                    className=\"my-10\"\n                    onChange={() => setFull(!full)}/>\n                <br/>\n                <Switch \n                    color=\"primary\" \n                    check={hideCurrentDay}\n                    rightLabel=\"Hide current day highlight\"\n                    className=\"my-10\"\n                    onChange={() => setHideCurrentDay(!hideCurrentDay)}/>\n                <Switch \n                    color=\"primary\" \n                    check={hideWeekend}\n                    rightLabel=\"Hide weekend highlight\"\n                    className=\"my-10\"\n                    onChange={() => setHideWeekend(!hideWeekend)}/>\n                <br/>\n                <Calendar\n                    width={full ? null : 400}\n                    className=\"my-10\"\n                    shortWeekName\n                    hideWeekend={hideWeekend}\n                    hideCurrentDay={hideCurrentDay}\n                    onDate={(date) => console.log(date)}\n                    events={events}\n                    holidays={holidays}\n                    weekStartsSunday={weekStartsSunday}\n                    size={size}\n                    dark={dark}\n                    limit={limit} \n                    onlyPast={onlyPast}\n                    locale={locale}\n                    color={color}/>\n                <Collapse \n                    icon=\"code\" \n                    iconSize={18}\n                    extra={<CopyToClipboard defaultText=\"Copy code\" text={usage} className=\"mr-10\"/>} \n                    tooltip=\"Show/Hide Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usage}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <h2>API</h2>\n            <Table\n                bordered\n                headers={['Property', 'Description', 'Default', 'Type', 'Value']}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\nexport default CalendarPage;"],"sourceRoot":""}