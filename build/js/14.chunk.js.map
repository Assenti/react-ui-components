{"version":3,"sources":["pages/DrawerPage.js"],"names":["positions","keys","items","property","description","default","type","value","stack","name","icon","DrawerPage","parent","useRef","api","useState","drawer","setDrawer","drawerMin","setDrawerMin","page","setPage","position","setPosition","visible","setVisible","className","ref","onClick","current","scrollIntoView","behavior","block","outlined","title","style","minHeight","min","onClose","header","collapsable","headerCentered","onResize","size","map","index","key","isActiveItem","noDivider","hover","item","tooltip","tooltipPosition","leftControl","onLeftControl","iconSize","contentStyles","padding","language","prism","width","prefix","color","onChange","v","absolute","setRef","dark","bordered","headers","itemTitles"],"mappings":"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","file":"js/14.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Drawer, List, ListItem, Button, Tooltip, Table, Card, Header, Collapse, Icon, Select, Tag, BackTopBtn } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst usage =\n`// Usage examples\nimport React, { useState } from 'react';\nimport { Drawer, List, ListItem, Header, Icon } from '@assenti/react-ui-components';\n\nfunction Example() {\n    const [drawer, setDrawer] = useState(true);\n    const [drawerMin, setDrawerMin] = useState(false);\n    const [page, setPage] = useState(stack[0].name)\n\n    return (\n        <div className=\"app\" style={{ minHeight: 260 }}>\n            <Drawer\n                drawer={drawer}\n                min={drawerMin}\n                onClose={() => setDrawer(false)}\n                header={drawerMin ? <Icon name=\"react\" /> : 'Drawer'}\n                collapsable\n                headerCentered\n                onResize={() => setDrawerMin(!drawerMin)}>\n                <List size=\"medium\">\n                    {stack.map(({name, icon}, index) => \n                        <ListItem\n                            key={index}\n                            isActiveItem={name === page}\n                            noDivider\n                            item={drawerMin ? '' : name}\n                            icon={icon}\n                            tooltip={name}\n                            tooltipPosition=\"right\"/>\n                    )}\n                </List>\n            </Drawer>\n            <div className=\"page\">\n                <Header \n                    title=\"Header\" \n                    leftControl\n                    onLeftControl={() => setDrawer(!drawer)}/>\n                <div className=\"pa-20 fz-12\">\n                    {page} Page\n                </div>\n            </div>\n        </div>\n    )\n)`\n\nconst usagePositions =\n`// Usage examples\nimport React, { useState } from 'react';\nimport { Drawer, List, ListItem, Header, Icon } from '@assenti/react-ui-components';\nconst positions = ['default', 'top', 'bottom', 'right'];\nconst stack = [\n    { name: 'JavaScript', icon: 'code' }, \n    { name: 'TypeScript', icon: 'code' },\n    { name: 'React', icon: 'code' },\n    { name: 'React Router', icon: 'code' },\n    { name: 'React Redux', icon: 'code' }\n]\n\nfunction Example() {\n    const [drawer, setDrawer] = useState(true);\n    const [drawerMin, setDrawerMin] = useState(false);\n    const [page, setPage] = useState(stack[0].name);\n    const [position, setPosition] = useState(positions[0]);\n    const [visible, setVisible] = useState(false);\n\n    return (\n        <div className=\"rui-app relative overflow-y pa-0\" style={{ minHeight: 400 }}>\n            <div className=\"pa-10\" style={{ width: 200 }}>\n                <Select\n                    items={positions}\n                    prefix={<Icon name=\"book-open\"/>}\n                    color=\"primary\"\n                    className=\"my-0\"\n                    value={position}\n                    onChange={v => setPosition(v)}/>\n                <Button \n                    name=\"Toggle drawer\"\n                    color=\"primary\"\n                    block\n                    className=\"my-10 mx-0\"\n                    onClick={() => setVisible(!visible)}/>\n            </div>\n            <Drawer\n                drawer={visible}\n                absolute\n                position={position}\n                onClose={() => setVisible(false)}\n                header={<div className=\"row align-center\"><Icon name=\"react\" className=\"mr-5\"/> Drawer Header</div>}>\n                <List size=\"medium\">\n                    {stack.map((item, index) => \n                    <ListItem \n                        key={index}\n                        noDivider\n                        icon={item.icon} \n                        isActiveItem={item.name === page}\n                        onClick={() => setPage(item.name)}   \n                        item={item.name}\n                        hover/>\n                    )}\n                </List>\n            </Drawer>\n        </div>\n    )\n)`\n\nconst positions = ['default', 'top', 'bottom', 'right'];\nconst keys = ['property', 'description', 'default', 'type', 'value'];\nconst items = [\n    { \n        property: 'drawer', \n        description: 'Drawer visibility state', \n        default: '', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'collapsable', \n        description: 'Make drawer collapsable', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'min', \n        description: 'Set drawer width to minimum size', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'onResize', \n        description: 'Handle drawer min prop toggling', \n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'onClose', \n        description: 'Handle drawer state', \n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'fullHeight', \n        description: 'Set drawer height to full screen height', \n        default: '', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'position', \n        description: 'Set drawer position', \n        default: 'left', \n        type: 'string',\n        value: 'right | top | bottom'\n    },\n    { \n        property: 'header', \n        description: 'Set drawer header', \n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'headerCentered', \n        description: 'Set drawer header content position to center', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'dark', \n        description: 'Set dark mode', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'absolute', \n        description: 'Set drawer position to absolute', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n]\n\nconst stack = [\n    { name: 'JavaScript', icon: 'language-js' }, \n    { name: 'TypeScript', icon: 'language-ts' },\n    { name: 'React', icon: 'react' },\n    { name: 'React Router', icon: 'react' },\n    { name: 'React Redux', icon: 'react' }\n]\n\nconst DrawerPage = () => {\n    const parent = useRef();\n    const api = useRef();\n    const [drawer, setDrawer] = useState(true);\n    const [drawerMin, setDrawerMin] = useState(false);\n    const [page, setPage] = useState(stack[0].name);\n    const [position, setPosition] = useState(positions[0]);\n    const [visible, setVisible] = useState(false);\n\n    const goToApi = () => {\n        if (api.current) api.current.scrollIntoView({ behavior: 'smooth', block: 'start' })\n    }\n\n    return (\n        <div className=\"rui-page\" ref={parent}>\n            <div className=\"row align-center space-between\">\n                <div className=\"rui-page-title\">Drawer Component</div>\n                <div onClick={goToApi} className=\"rui-link fz-13 fw-bold\">API</div>\n            </div>\n            <Card outlined title=\"Drawer usage\">\n                <div className=\"rui-app relative pa-0\" style={{ minHeight: 260 }}>\n                    <Drawer\n                        drawer={drawer}\n                        min={drawerMin}\n                        onClose={() => setDrawer(false)}\n                        header={drawerMin ? <Icon name=\"react\" /> : 'Drawer'}\n                        collapsable\n                        headerCentered\n                        onResize={() => setDrawerMin(!drawerMin)}>\n                        <List size=\"medium\">\n                            {stack.map(({name, icon}, index) => \n                                <ListItem\n                                    key={index}\n                                    isActiveItem={name === page}\n                                    noDivider\n                                    hover\n                                    item={drawerMin ? '' : name}\n                                    icon={icon}\n                                    tooltip={name}\n                                    tooltipPosition=\"right\"/>\n                            )}\n                        </List>\n                    </Drawer>\n                    <div className=\"rui-page\">\n                        <Header \n                            title=\"Header\" \n                            leftControl\n                            onLeftControl={() => setDrawer(!drawer)}/>\n                        <div className=\"pa-20 fz-12\">\n                            {page} Page\n                        </div>\n                    </div>\n                </div>\n                <Collapse \n                    icon=\"code\"\n                    className=\"mx-10\" \n                    iconSize={18}\n                    contentStyles={{ padding: 0 }}\n                    tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usage}\n                    </SyntaxHighlighter> \n                </Collapse>\n            </Card>\n            <br/>\n            <Card outlined title=\"Drawer positions\">\n                <div className=\"rui-app relative overflow-y pa-0\" style={{ minHeight: 400 }}>\n                    <div className=\"pa-10\" style={{ width: 200 }}>\n                        <Select\n                            items={positions}\n                            prefix={<Icon name=\"book-open\"/>}\n                            color=\"primary\"\n                            className=\"my-0\"\n                            value={position}\n                            onChange={v => setPosition(v)}/>\n                        <Button \n                            name=\"Toggle drawer\"\n                            color=\"primary\"\n                            block\n                            className=\"my-10 mx-0\"\n                            onClick={() => setVisible(!visible)}/>\n                    </div>\n                    <Drawer\n                        drawer={visible}\n                        absolute\n                        position={position}\n                        onClose={() => setVisible(false)}\n                        header={<div className=\"row align-center\"><Icon name=\"react\" className=\"mr-5\"/> Drawer Header</div>}>\n                        <List size=\"medium\">\n                            {stack.map((item, index) => \n                            <ListItem \n                                key={index}\n                                noDivider\n                                icon={item.icon} \n                                isActiveItem={item.name === page}\n                                onClick={() => setPage(item.name)}   \n                                item={item.name}\n                                hover/>\n                            )}\n                        </List>\n                    </Drawer>\n                </div>\n                <Collapse \n                    icon=\"code\"\n                    iconSize={18}\n                    contentStyles={{ padding: 0 }}\n                    tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usagePositions}\n                    </SyntaxHighlighter> \n                </Collapse>\n            </Card>\n            <h2 ref={api}>API</h2>\n            <BackTopBtn setRef={parent} size=\"medium\" dark/>\n            <Table\n                bordered\n                headers={['Property', 'Description', 'Default', 'Type', 'Value']}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n\nexport default DrawerPage;\n"],"sourceRoot":""}