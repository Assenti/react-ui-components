{"version":3,"sources":["pages/BackTopBtnPage.js"],"names":["keys","items","property","description","default","type","value","countries","country","cities","BackTopBtnPage","blockref","createRef","api","rows","i","push","className","ref","onClick","current","scrollIntoView","behavior","block","name","size","outlined","title","header","map","item","index","key","hover","noDivider","icon","subTitle","iconSize","tooltip","language","style","prism","dark","setRef","bordered","headers","itemTitles"],"mappings":"2IAAA,oDAKMA,EAAO,CAAC,WAAY,cAAe,UAAW,OAAQ,SACtDC,EAAQ,CACV,CACIC,SAAU,SACVC,YAAa,oDACbC,QAAS,GACTC,KAAM,GACNC,MAAO,IAEX,CACIJ,SAAU,aACVC,YAAa,mDACbC,QAAS,OACTC,KAAM,SACNC,MAAO,IAEX,CACIJ,SAAU,OACVC,YAAa,kBACbC,QAAS,GACTC,KAAM,SACNC,MAAO,kBAEX,CACIJ,SAAU,UACVC,YAAa,qBACbC,QAAS,GACTC,KAAM,SACNC,MAAO,IAEX,CACIJ,SAAU,UACVC,YAAa,wBACbC,QAAS,OACTC,KAAM,kBACNC,MAAO,IAEX,CACIJ,SAAU,UACVC,YAAa,yBACbC,QAAS,OACTC,KAAM,kBACNC,MAAO,IAEX,CACIJ,SAAU,OACVC,YAAa,gBACbC,QAAS,QACTC,KAAM,UACNC,MAAO,gBAEX,CACIJ,SAAU,YACVC,YAAa,sCACbC,QAAS,GACTC,KAAM,SACNC,MAAO,KA+CTC,EAAY,CACd,CAAEC,QAAS,aAAcC,OAAQ,CAAE,aAAc,SAAU,aAC3D,CAAED,QAAS,SAAUC,OAAQ,CAAC,SAAU,iBAAkB,cAC1D,CAAED,QAAS,MAAOC,OAAQ,CAAC,mBAAoB,gBAAiB,kBAChE,CAAED,QAAS,iBAAkBC,OAAQ,CAAC,SAAU,OAAQ,eACxD,CAAED,QAAS,SAAUC,OAAQ,CAAC,SAAU,UAAW,cACnD,CAAED,QAAS,UAAWC,OAAQ,CAAC,SAAU,SAAU,YACnD,CAAED,QAAS,SAAUC,OAAQ,CAAC,QAAS,OAAQ,aAC/C,CAAED,QAAS,QAASC,OAAQ,CAAC,UAAW,WAAY,aACpD,CAAED,QAAS,QAASC,OAAQ,CAAC,QAAS,QAAS,UAC/C,CAAED,QAAS,cAAeC,OAAQ,CAAC,QAAS,QAAS,WAoD1CC,UAjDQ,WAInB,IAHA,IAAMC,EAAWC,sBACXC,EAAMD,sBACNE,EAAO,GACJC,EAAI,EAAGA,EAAI,GAAIA,IACpBD,EAAKE,KAAKD,GAOd,OACI,yBAAKE,UAAU,WAAWC,IAAKP,GAC3B,yBAAKM,UAAU,kCACX,yBAAKA,UAAU,kBAAf,wBACA,yBAAKA,UAAU,yBAAyBE,QARpC,WACRN,EAAIO,SAASP,EAAIO,QAAQC,eAAe,CAAEC,SAAU,SAAUC,MAAO,YAOjE,QAEJ,yBAAKN,UAAU,oBAAf,eAA8C,kBAAC,IAAD,CAAMA,UAAU,OAAOO,KAAK,kBAAkBC,KAAM,MAClG,kBAAC,IAAD,CAAMC,UAAQ,EAACC,MAAM,aAAaV,UAAU,SACxC,kBAAC,IAAD,CAAMW,OAAO,aACRrB,EAAUsB,KAAI,SAACC,EAAMC,GAAP,OACX,kBAAC,IAAD,CACIC,IAAKD,EACLE,OAAK,EACLC,WAAS,EACTC,KAAK,OACLL,KAAMA,EAAKtB,QACX4B,SAAUN,EAAKrB,OAAO,SAGlC,kBAAC,IAAD,CAAU0B,KAAK,OAAOE,SAAU,GAAIC,QAAQ,QACxC,kBAAC,IAAD,CAAmBC,SAAS,MAAMC,MAAOC,KAxF7C,6rDA6FJ,kBAAC,IAAD,CAAYC,MAAI,EAACC,OAAQhC,EAAUc,KAAK,SAASa,QAAQ,OACzD,wBAAIpB,IAAKL,GAAT,OACA,kBAAC,IAAD,CACI+B,UAAQ,EACRC,QAAS,CAAC,WAAY,cAAe,UAAW,OAAQ,SACxD5C,MAAOA,EACP8B,OAAO,EACPe,WAAY9C","file":"js/10.chunk.js","sourcesContent":["import React, { createRef } from 'react';\nimport { BackTopBtn, Card, Table, Collapse, Icon, List, ListItem } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst keys = ['property', 'description', 'default', 'type', 'value'];\nconst items = [\n    { \n        property: 'setRef', \n        description: 'Pass the reference of parent element to component',\n        default: '', \n        type: '',\n        value: ''\n    },\n    { \n        property: 'breakpoint', \n        description: 'Set scrollY breakpoint when button should appear',\n        default: '60px', \n        type: 'number',\n        value: ''\n    },\n    { \n        property: 'size', \n        description: 'Set button size',\n        default: '', \n        type: 'string',\n        value: 'medium | large'\n    },\n    { \n        property: 'tooltip', \n        description: 'Set button tooltip',\n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'offsetX', \n        description: 'Set offset from right',\n        default: '25px', \n        type: 'number | string',\n        value: ''\n    },\n    { \n        property: 'offsetY', \n        description: 'Set offset from bottom',\n        default: '25px', \n        type: 'number | string',\n        value: ''\n    },\n    { \n        property: 'dark',\n        description: 'Set dark mode', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'className',\n        description: 'Set a custom css class to component', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n]\n\nconst simpleList =\n`// Usage examples\nimport React, { useRef } from 'react';\nimport { BackTopBtn, List, ListItem, Icon } from '@assenti/rui-components';\n\nconst countries = [\n    { country: 'Kazakhstan', cities: [ 'Nur-Sultan', 'Almaty', 'Shymkent' ] }, \n    { country: 'Russia', cities: ['Moscow', 'St. Petersburg', 'Krasnodar'] }, \n    { country: 'USA', cities: ['Washington, D.C.', 'New York City', 'San Francisco'] }, \n    { country: 'United Kingdom', cities: ['London', 'York', 'Manchester'] }, \n    { country: 'Canada', cities: ['Ottawa', 'Toronto', 'Vancouver'] }, \n    { country: 'Germany', cities: ['Berlin', 'Munich', 'Hamburg'] }, \n    { country: 'France', cities: ['Paris', 'Nice', 'Marselle'] }, \n    { country: 'China', cities: ['Beijing', 'Shanghai', 'Shenzhen'] },\n    { country: 'Japan', cities: ['Tokyo', 'Osaka', 'Kyoto'] },\n    { country: 'South Korea', cities: ['Seoul', 'Busan', 'Daegu'] }\n]\n\nfunction Example() {\n    const parentRef = useRef();\n\n    return (\n        <div ref={parentRef}>\n            <List size=\"large\" header=\"Countries\">\n                {countries.map((item, index) => \n                    <ListItem\n                        key={index}\n                        hover\n                        icon=\"flag\" \n                        item={item.country}\n                        subTitle={\n                            <div className=\"row align-center\">\n                                <Icon name=\"star-outline\" className=\"mr-10\"/>\n                                {item.cities[0]}\n                            </div>\n                        }/>\n                )}\n            </List>\n            <BackTopBtn setRef={parentRef} dark/>\n        </div>\n    )\n}`\n\nconst countries = [\n    { country: 'Kazakhstan', cities: [ 'Nur-Sultan', 'Almaty', 'Shymkent' ] }, \n    { country: 'Russia', cities: ['Moscow', 'St. Petersburg', 'Krasnodar'] }, \n    { country: 'USA', cities: ['Washington, D.C.', 'New York City', 'San Francisco'] }, \n    { country: 'United Kingdom', cities: ['London', 'York', 'Manchester'] }, \n    { country: 'Canada', cities: ['Ottawa', 'Toronto', 'Vancouver'] }, \n    { country: 'Germany', cities: ['Berlin', 'Munich', 'Hamburg'] }, \n    { country: 'France', cities: ['Paris', 'Nice', 'Marselle'] }, \n    { country: 'China', cities: ['Beijing', 'Shanghai', 'Shenzhen'] },\n    { country: 'Japan', cities: ['Tokyo', 'Osaka', 'Kyoto'] },\n    { country: 'South Korea', cities: ['Seoul', 'Busan', 'Daegu'] }\n]\n\nconst BackTopBtnPage = () => {\n    const blockref = createRef();\n    const api = createRef();\n    const rows = []\n    for (let i = 0; i < 20; i++) {\n        rows.push(i)\n    }\n\n    const goToApi = () => {\n        if (api.current) api.current.scrollIntoView({ behavior: 'smooth', block: 'start' })\n    }\n\n    return (\n        <div className=\"rui-page\" ref={blockref}>\n            <div className=\"row align-center space-between\">\n                <div className=\"rui-page-title\">BackTopBtn Component</div>\n                <div className=\"rui-link fz-13 fw-bold\" onClick={goToApi}>API</div>\n            </div>\n            <div className=\"row align-center\">Scroll down <Icon className=\"ml-5\" name=\"arrow-down-bold\" size={18}/></div>\n            <Card outlined title=\"BackTopBtn\" className=\"mt-20\">\n                <List header=\"Countries\">\n                    {countries.map((item, index) => \n                        <ListItem\n                            key={index}\n                            hover\n                            noDivider\n                            icon=\"flag\" \n                            item={item.country}\n                            subTitle={item.cities[0]}/>\n                    )}\n                </List>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {simpleList}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <BackTopBtn dark setRef={blockref} size=\"medium\" tooltip=\"Up\"/>\n            <h2 ref={api}>API</h2>\n            <Table\n                bordered\n                headers={['Property', 'Description', 'Default', 'Type', 'Value']}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n\nexport default BackTopBtnPage;\n\n\n"],"sourceRoot":""}