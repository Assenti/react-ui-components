(this["webpackJsonp@assenti/rui-components"]=this["webpackJsonp@assenti/rui-components"]||[]).push([[13],{277:function(e,t,n){"use strict";n.r(t);var a=n(1),o=n(0),l=n.n(o),r=n(3),c=n(313),s=n(271),i=["property","description","default","type","value"],p=[{property:"onClick",description:"Handle button click",default:"",type:"function",value:"return a button click event object"},{property:"name",description:"Set button name (can be set with icon)",default:"",type:"string",value:""},{property:"type",description:"Set button type",default:"button",type:"string",value:"button | submit | reset"},{property:"lifted",description:"Lift up the button",default:"false",type:"boolean",value:"true | false"},{property:"color",description:"Set background and border color of button from list",default:"",type:"string",value:"primary | info | success | error | black | secondary"},{property:"disabled",description:"Make Button disabled",default:"false",type:"boolean",value:"true | false"},{property:"loading",description:"Activate loading and make Button disabled",default:"false",type:"boolean",value:"true | false"},{property:"borderType",description:"Set Button border type",default:"false",type:"boolean",value:"smooth | rounded | tile"},{property:"outlined",description:"Make button background transparent and outline borders",default:"false",type:"boolean",value:"true | false"},{property:"uppercase",description:"Transform text to upper case",default:"false",type:"boolean",value:"true | false"},{property:"block",description:"Fills the parent component width",default:"false",type:"boolean",value:"true | false"},{property:"size",description:"Set button size",default:"",type:"string",value:"medium | large"},{property:"icon",description:"Set icon in a button and give circle shape to it (can be set with name)",default:"",type:"string",value:"home | search | etc."},{property:"iconSize",description:"Set icon size",default:"24px",type:"number",value:""},{property:"iconLeft",description:"Change icon position to the left from name",default:"false",type:"boolean",value:"true | false"},{property:"iconAllotted",description:"Allot an icon (has effect with outlined prop)",default:"false",type:"boolean",value:"true | false"},{property:"dark",description:"Set dark mode (can not be used with light prop)",default:"false",type:"boolean",value:"true | false"},{property:"light",description:"Set light mode (can not be used with dark prop)",default:"false",type:"boolean",value:"true | false"},{property:"setRef",description:"Set ref",default:"",type:"React.RefObject",value:""},{property:"className",description:"Set a custom css class to component",default:"",type:"string",value:""}],u='// Usage examples\nimport React, { useState } from \'react\';\nimport { Button, Switch, Select, Icon, RadioGroup } from \'@assenti/react-ui-components\';\nconst sizes = [\'default\', \'medium\', \'large\'];\nconst colors = [\'primary\', \'info\', \'success\', \'error\', \'secondary\', \'black\'];\nconst borders = [\'default\', \'rounded\', \'smooth\', \'tile\'];\nconst types = [\'dark\', \'light\', \'none\'];\n\nfunction Example() {\n    const [loading, setLoading] = useState(false);\n    const [outlined, setOutlined] = useState(false);\n    const [uppercase, setUppercase] = useState(false);\n    const [block, setBlock] = useState(false);\n    const [disabled, setDisabled] = useState(false);\n    const [icon, setIcon] = useState(false);\n    const [iconLeft, setIconLeft] = useState(false);\n    const [lifted, setLifted] = useState(false);\n    const [iconAllotted, setIconAllotted] = useState(false);\n    const [iconOnly, setIconOnly] = useState(false);\n    const [size, setSize] = useState(sizes[0]);\n    const [border, setBorder] = useState(borders[0]);\n    const [color, setColor] = useState(colors[0]);\n    const [type, setType] = useState(\'\');\n\n    return (\n        <div>\n            <Select\n                items={sizes}\n                prefix={<Icon name="format-size"/>}\n                width={200}\n                label="Button size"\n                color="primary"\n                className="pl-10"\n                value={size}\n                onChange={v => setSize(v)}/>\n            <br/>\n            <Select\n                items={borders}\n                prefix={<Icon name="shape"/>}\n                width={200}\n                label="Button border type"\n                color="primary"\n                className="pl-10"\n                value={border}\n                onChange={v => setBorder(v)}/>\n            <br/>\n            <Select\n                items={colors}\n                prefix={<Icon name="brush"/>}\n                width={200}\n                label="Button color"\n                color="primary"\n                className="pl-10"\n                value={color}\n                onChange={v => setColor(v)}/>\n            <br/>\n            <Switch \n                color="primary" \n                check={outlined}\n                rightLabel="Outlined"\n                className="pl-10 my-10"\n                onChange={() => setOutlined(!outlined)}/>\n            \n            <Switch \n                check={uppercase} \n                color="primary"\n                rightLabel="Uppercase" \n                className="pl-10 my-10"\n                onChange={() => setUppercase(!uppercase)}/>\n            <br/>\n            <Switch \n                check={loading} \n                color="primary"\n                rightLabel="Loading" \n                className="pl-10 my-10"\n                onChange={() => setLoading(!loading)}/>\n            <Switch \n                check={disabled} \n                color="primary"\n                rightLabel="Disabled" \n                className="pl-10 my-10"\n                onChange={() => setDisabled(!disabled)}/>\n            <br/>\n            <Switch \n                check={block} \n                color="primary"\n                rightLabel="Block" \n                className="pl-10 my-10"\n                onChange={() => setBlock(!block)}/>\n            <Switch \n                check={lifted} \n                color="primary"\n                rightLabel="Lifted" \n                className="pl-10 my-10"\n                onChange={() => setLifted(!lifted)}/>\n            <br/>\n            <Switch \n                check={icon} \n                color="primary"\n                rightLabel="With icon" \n                className="pl-10 my-10"\n                onChange={() => setIcon(!icon)}/>\n            <Switch \n                check={iconLeft} \n                color="primary"\n                rightLabel="Left icon" \n                className="pl-10 my-10"\n                onChange={() => setIconLeft(!iconLeft)}/>\n            <Switch \n                check={iconAllotted} \n                color="primary"\n                rightLabel="Allotted icon" \n                className="pl-10 my-10"\n                onChange={() => setIconAllotted(!iconAllotted)}/>\n            <br/>\n            <Switch \n                check={iconOnly} \n                color="primary"\n                rightLabel="Icon button" \n                className="pl-10 my-10"\n                onChange={() => setIconOnly(!iconOnly)}/>\n            <br/>\n            <RadioGroup\n                options={types} \n                value={type}\n                name="type"\n                className="pl-10 mt-10" \n                onChange={(value) => setType(value)}/>\n            <br/>\n            <div className="pa-10">\n                <Button\n                    color={color}\n                    size={size}\n                    icon={icon || iconOnly ? \'search\' : \'\'}\n                    iconAllotted={iconAllotted}\n                    iconLeft={iconLeft}\n                    outlined={outlined}\n                    borderType={border}\n                    loading={loading}\n                    disabled={disabled}\n                    block={block}\n                    lifted={lifted}\n                    dark={type === \'dark\' ? true : false}\n                    light={type === \'light\' ? true : false}\n                    uppercase={uppercase}\n                    name={iconOnly ? null : \'Button\'}\n                    />\n            </div>\n        </div>\n    )\n}',d=["default","medium","large"],m=["primary","info","success","error","secondary","black"],b=["default","rounded","smooth","tile"],f=["dark","light","none"];t.default=function(){var e=Object(o.useRef)(),t=Object(o.useRef)(),n=Object(o.useState)(!1),h=Object(a.a)(n,2),y=h[0],g=h[1],S=Object(o.useState)(!1),k=Object(a.a)(S,2),v=k[0],O=k[1],E=Object(o.useState)(!1),L=Object(a.a)(E,2),C=L[0],N=L[1],j=Object(o.useState)(!1),w=Object(a.a)(j,2),z=w[0],B=w[1],I=Object(o.useState)(!1),A=Object(a.a)(I,2),D=A[0],x=A[1],R=Object(o.useState)(!1),T=Object(a.a)(R,2),U=T[0],q=T[1],P=Object(o.useState)(!1),G=Object(a.a)(P,2),H=G[0],J=G[1],M=Object(o.useState)(!1),V=Object(a.a)(M,2),W=V[0],F=V[1],K=Object(o.useState)(!1),Q=Object(a.a)(K,2),X=Q[0],Y=Q[1],Z=Object(o.useState)(!1),$=Object(a.a)(Z,2),_=$[0],ee=$[1],te=Object(o.useState)(d[0]),ne=Object(a.a)(te,2),ae=ne[0],oe=ne[1],le=Object(o.useState)(b[0]),re=Object(a.a)(le,2),ce=re[0],se=re[1],ie=Object(o.useState)(m[0]),pe=Object(a.a)(ie,2),ue=pe[0],de=pe[1],me=Object(o.useState)(""),be=Object(a.a)(me,2),fe=be[0],he=be[1];return l.a.createElement("div",{className:"rui-page",ref:e},l.a.createElement("div",{className:"row align-center space-between"},l.a.createElement("div",{className:"rui-page-title"},"Button Component"),l.a.createElement("div",{onClick:function(){t.current&&t.current.scrollIntoView({behavior:"smooth",block:"start"})},className:"rui-link fz-13 fw-bold"},"API")),l.a.createElement(r.h,{outlined:!0,title:"Button usage"},l.a.createElement(r.C,{items:d,prefix:l.a.createElement(r.q,{name:"format-size"}),width:200,label:"Button size",color:"primary",className:"pl-10",value:ae,onChange:function(e){return oe(e)}}),l.a.createElement("br",null),l.a.createElement(r.C,{items:b,prefix:l.a.createElement(r.q,{name:"shape"}),width:200,label:"Button border type",color:"primary",className:"pl-10",value:ce,onChange:function(e){return se(e)}}),l.a.createElement("br",null),l.a.createElement(r.C,{items:m,prefix:l.a.createElement(r.q,{name:"brush"}),width:200,label:"Button color",color:"primary",className:"pl-10",value:ue,onChange:function(e){return de(e)}}),l.a.createElement("br",null),l.a.createElement(r.D,{color:"primary",check:v,rightLabel:"Outlined",className:"pl-10 my-10",onChange:function(){return O(!v)}}),l.a.createElement(r.D,{check:C,color:"primary",rightLabel:"Uppercase",className:"pl-10 my-10",onChange:function(){return N(!C)}}),l.a.createElement("br",null),l.a.createElement(r.D,{check:y,color:"primary",rightLabel:"Loading",className:"pl-10 my-10",onChange:function(){return g(!y)}}),l.a.createElement(r.D,{check:D,color:"primary",rightLabel:"Disabled",className:"pl-10 my-10",onChange:function(){return x(!D)}}),l.a.createElement("br",null),l.a.createElement(r.D,{check:z,color:"primary",rightLabel:"Block",className:"pl-10 my-10",onChange:function(){return B(!z)}}),l.a.createElement(r.D,{check:W,color:"primary",rightLabel:"Lifted",className:"pl-10 my-10",onChange:function(){return F(!W)}}),l.a.createElement("br",null),l.a.createElement(r.D,{check:U,color:"primary",rightLabel:"With icon",className:"pl-10 my-10",onChange:function(){return q(!U)}}),l.a.createElement(r.D,{check:H,color:"primary",rightLabel:"Left icon",className:"pl-10 my-10",onChange:function(){return J(!H)}}),l.a.createElement(r.D,{check:X,color:"primary",rightLabel:"Allotted icon",className:"pl-10 my-10",onChange:function(){return Y(!X)}}),l.a.createElement("br",null),l.a.createElement(r.D,{check:_,color:"primary",rightLabel:"Icon button",className:"pl-10 my-10",onChange:function(){return ee(!_)}}),l.a.createElement("br",null),l.a.createElement(r.A,{options:f,value:fe,name:"type",className:"pl-10 mt-10",onChange:function(e){return he(e)}}),l.a.createElement("br",null),l.a.createElement("div",{className:"pa-10"},l.a.createElement(r.e,{color:ue,size:ae,icon:U||_?"search":"",iconAllotted:X,iconLeft:H,outlined:v,borderType:ce,loading:y,disabled:D,block:z,lifted:W,dark:"dark"===fe,light:"light"===fe,uppercase:C,name:_?null:"Button"})),l.a.createElement(r.j,{icon:"code",iconSize:18,extra:l.a.createElement(r.k,{defaultText:"Copy code",text:u,className:"mr-10"}),tooltip:"Show/Hide Code"},l.a.createElement(c.a,{language:"jsx",style:s.a},u))),l.a.createElement(r.b,{tooltip:"Up",setRef:e,dark:!0,size:"medium"}),l.a.createElement("h2",{ref:t},"API"),l.a.createElement(r.E,{bordered:!0,headers:["Property","Description","Default","Type","Value"],items:p,index:!0,itemTitles:i}))}}}]);
//# sourceMappingURL=13.chunk.js.map