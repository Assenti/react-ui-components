{"version":3,"sources":["pages/RatingPage.js"],"names":["keys","rows","property","description","default","type","value","colors","RatingPage","parent","useRef","useState","disabled","setDisabled","count","setCount","rate","setRate","color","setColor","hide","setHide","className","ref","outlined","title","width","min","label","placeholder","onChange","e","target","style","items","prefix","name","v","check","rightLabel","text","hideRate","rated","console","log","icon","iconSize","tooltip","language","prism","size","dark","setRef","bordered","headers","index","itemTitles"],"mappings":"sMAKMA,EAAO,CAAC,WAAY,cAAe,UAAW,OAAQ,SACtDC,EAAO,CACT,CACIC,SAAU,OACVC,YAAa,oBACbC,QAAS,GACTC,KAAM,SACNC,MAAO,IAEX,CACIJ,SAAU,QACVC,YAAa,iBACbC,QAAS,IACTC,KAAM,SACNC,MAAO,IAEX,CACIJ,SAAU,WACVC,YAAa,iCACbC,QAAS,QACTC,KAAM,UACNC,MAAO,gBAEX,CACIJ,SAAU,WACVC,YAAa,+CACbC,QAAS,GACTC,KAAM,WACNC,MAAO,IAEX,CACIJ,SAAU,OACVC,YAAa,iBACbC,QAAS,OACTC,KAAM,SACNC,MAAO,IAEX,CACIJ,SAAU,QACVC,YAAa,kBACbC,QAAS,GACTC,KAAM,SACNC,MAAO,6CAEX,CACIJ,SAAU,WACVC,YAAa,mBACbC,QAAS,QACTC,KAAM,UACNC,MAAO,gBAEX,CACIJ,SAAU,OACVC,YAAa,WACbC,QAAS,GACTC,KAAM,SACNC,MAAO,IAEX,CACIJ,SAAU,YACVC,YAAa,sCACbC,QAAS,GACTC,KAAM,SACNC,MAAO,KAGTC,EAAS,CAAC,SAAU,UAAW,OAAQ,UAAW,SA6JzCC,UAnFI,WACf,IAAMC,EAASC,mBADM,EAEWC,oBAAS,GAFpB,mBAEdC,EAFc,KAEJC,EAFI,OAGKF,mBAAS,GAHd,mBAGdG,EAHc,KAGPC,EAHO,OAIGJ,mBAAS,KAJZ,mBAIdK,EAJc,KAIRC,EAJQ,OAKKN,mBAASJ,EAAO,IALrB,mBAKdW,EALc,KAKPC,EALO,OAMGR,oBAAS,GANZ,mBAMdS,EANc,KAMRC,EANQ,KAQrB,OACI,yBAAKC,UAAU,WAAWC,IAAKd,GAC3B,yBAAKa,UAAU,kBAAf,oBACA,kBAAC,IAAD,CAAME,UAAQ,EAACC,MAAM,gBACjB,yBAAKH,UAAU,cACX,kBAAC,IAAD,CACII,MAAO,IACPpB,MAAOQ,EACPT,KAAK,SACLsB,IAAK,EACLC,MAAM,eACNC,YAAY,qBACZC,SAAU,SAAAC,GAAC,OAAIhB,EAASgB,EAAEC,OAAO1B,UACrC,kBAAC,IAAD,CACIoB,MAAO,IACPpB,MAAOU,EACPX,KAAK,SACLsB,IAAK,EACLC,MAAM,eACNC,YAAY,cACZC,SAAU,SAAAC,GAAC,OAAId,EAAQc,EAAEC,OAAO1B,UACpC,yBAAK2B,MAAO,CAAEP,MAAO,MACjB,kBAAC,IAAD,CACIQ,MAAO3B,EACP4B,OAAQ,kBAAC,IAAD,CAAMC,KAAK,UACnBV,MAAO,IACPJ,UAAU,OACVM,MAAM,cACNV,MAAM,UACNZ,MAAOY,EACPY,SAAU,SAAAO,GAAC,OAAIlB,EAASkB,OAEhC,kBAAC,IAAD,CACInB,MAAM,UACNoB,MAAO1B,EACPU,UAAU,QACViB,WAAW,WACXT,SAAU,kBAAMjB,GAAaD,MACjC,kBAAC,IAAD,CACIM,MAAM,UACNoB,MAAOlB,EACPE,UAAU,QACViB,WAAW,YACXT,SAAU,kBAAMT,GAASD,OAEjC,kBAAC,IAAD,CACIE,UAAU,QACVkB,KAAK,YACLC,SAAUrB,EACVJ,KAAMA,EACNE,MAAOA,EACPY,SAAU,SAACY,GACPC,QAAQC,IAAIF,GACZzB,EAAQyB,IAEZ9B,SAAUA,EACVE,MAAOA,IACX,kBAAC,IAAD,CAAU+B,KAAK,OAAOC,SAAU,GAAIC,QAAQ,QACxC,kBAAC,IAAD,CAAmBC,SAAS,MAAMf,MAAOgB,KA1IlD,uhFA+IC,mCACA,kBAAC,IAAD,CAAYC,KAAK,SAASC,MAAI,EAACC,OAAQ3C,IACvC,kBAAC,IAAD,CACI4C,UAAQ,EACRC,QAAS,CAAC,WAAY,cAAe,UAAW,OAAQ,SACxDpB,MAAOjC,EACPsD,OAAO,EACPC,WAAYxD","file":"js/28.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Card, Rating, Switch, InputField, Select, Icon, Table, Collapse, BackTopBtn } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst keys = ['property', 'description', 'default', 'type', 'value'];\nconst rows = [\n    { \n        property: 'rate', \n        description: 'Pass current rate',\n        default: '', \n        type: 'number',\n        value: ''\n    },\n    { \n        property: 'count', \n        description: 'Set rate scale',\n        default: '5', \n        type: 'number',\n        value: ''\n    },\n    { \n        property: 'disabled', \n        description: 'Make rating component disabled',\n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'onChange', \n        description: 'Invokes on rate changes (return rated value)',\n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'size', \n        description: 'Set stars size',\n        default: '24px', \n        type: 'number',\n        value: ''\n    },\n    { \n        property: 'color',\n        description: 'Set stars color', \n        default: '', \n        type: 'string',\n        value: 'yellow | primary | info | success | error'\n    },\n    { \n        property: 'hideRate', \n        description: 'Hide rate digits',\n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'text',\n        description: 'Set text', \n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'className',\n        description: 'Set a custom css class to component', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n]\nconst colors = ['yellow', 'primary', 'info', 'success', 'error'];\n\nconst usage =\n`// Usage examples\nimport React, { useState } from 'react';\nimport { Card, Rating, Switch, InputField, Select, Icon } from '@assenti/rui-components';\nconst colors = ['yellow', 'primary', 'info', 'success', 'error'];\n\nfunction Example() {\n    const [disabled, setDisabled] = useState(false);\n    const [count, setCount] = useState(5);\n    const [rate, setRate] = useState(3.5);\n    const [color, setColor] = useState(colors[0]);\n    const [hide, setHide] = useState(false);\n\n    return (\n        <div>\n            <div className=\"row column\">\n                <InputField\n                    width={100} \n                    value={count}\n                    type=\"number\"\n                    min={0}\n                    label=\"Rating scale\"\n                    placeholder=\"Define stars count\" \n                    onChange={e => setCount(e.target.value)}/>\n                <InputField\n                    width={100} \n                    value={rate}\n                    type=\"number\"\n                    min={0}\n                    label=\"Current rate\"\n                    placeholder=\"Define rate\" \n                    onChange={e => setRate(e.target.value)}/>\n                <div style={{ width: 100 }}>\n                    <Select\n                        items={colors}\n                        prefix={<Icon name=\"brush\"/>}\n                        width={100}\n                        className=\"mx-5\"\n                        label=\"Color theme\"\n                        color=\"primary\"\n                        value={color}\n                        onChange={v => setColor(v)}/>\n                </div>\n                <Switch \n                    color=\"primary\" \n                    check={disabled}\n                    className=\"my-10\"\n                    rightLabel=\"Disabled\"\n                    onChange={() => setDisabled(!disabled)}/>\n                <Switch \n                    color=\"primary\" \n                    check={hide}\n                    className=\"my-10\"\n                    rightLabel=\"Hide rate\"\n                    onChange={() => setHide(!hide)}/>\n            </div>\n            <Rating\n                className=\"pa-10\"\n                text=\"Your Rate\"\n                hideRate={hide}\n                rate={rate}\n                color={color}\n                onChange={(rated) => {\n                    console.log(rated)\n                    setRate(rated)\n                }}\n                disabled={disabled} \n                count={count}/>\n        </div>\n    )\n}`\n\nconst RatingPage = () => {\n    const parent = useRef();\n    const [disabled, setDisabled] = useState(false);\n    const [count, setCount] = useState(5);\n    const [rate, setRate] = useState(3.5);\n    const [color, setColor] = useState(colors[0]);\n    const [hide, setHide] = useState(false);\n\n    return (\n        <div className=\"rui-page\" ref={parent}>\n            <div className=\"rui-page-title\">Rating Component</div>\n            <Card outlined title=\"Rating usage\">\n                <div className=\"row column\">\n                    <InputField\n                        width={100} \n                        value={count}\n                        type=\"number\"\n                        min={0}\n                        label=\"Rating scale\"\n                        placeholder=\"Define stars count\" \n                        onChange={e => setCount(e.target.value)}/>\n                    <InputField\n                        width={100} \n                        value={rate}\n                        type=\"number\"\n                        min={0}\n                        label=\"Current rate\"\n                        placeholder=\"Define rate\" \n                        onChange={e => setRate(e.target.value)}/>\n                    <div style={{ width: 100 }}>\n                        <Select\n                            items={colors}\n                            prefix={<Icon name=\"brush\"/>}\n                            width={100}\n                            className=\"mx-5\"\n                            label=\"Color theme\"\n                            color=\"primary\"\n                            value={color}\n                            onChange={v => setColor(v)}/>\n                    </div>\n                    <Switch \n                        color=\"primary\" \n                        check={disabled}\n                        className=\"my-10\"\n                        rightLabel=\"Disabled\"\n                        onChange={() => setDisabled(!disabled)}/>\n                    <Switch \n                        color=\"primary\" \n                        check={hide}\n                        className=\"my-10\"\n                        rightLabel=\"Hide rate\"\n                        onChange={() => setHide(!hide)}/>\n                </div>\n                <Rating\n                    className=\"pa-10\"\n                    text=\"Your Rate\"\n                    hideRate={hide}\n                    rate={rate}\n                    color={color}\n                    onChange={(rated) => {\n                        console.log(rated)\n                        setRate(rated)\n                    }}\n                    disabled={disabled} \n                    count={count}/>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usage}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <h2>API</h2>\n            <BackTopBtn size=\"medium\" dark setRef={parent}/>\n            <Table\n                bordered\n                headers={['Property', 'Description', 'Default', 'Type', 'Value']}\n                items={rows}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n\nexport default RatingPage;\n"],"sourceRoot":""}