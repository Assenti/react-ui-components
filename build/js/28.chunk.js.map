{"version":3,"sources":["pages/PaginationPage.js"],"names":["keys","items","property","description","default","type","value","usage","colors","sizes","positions","PaginationPage","useState","itemsCount","perPage","setPerPage","currentPage","setCurrentPage","color","setColor","size","setSize","rounded","setRounded","parent","useRef","className","ref","outlined","title","prefix","name","width","label","onChange","v","check","rightLabel","current","page","onPerPageSelect","icon","iconSize","extra","defaultText","text","tooltip","language","style","prism","dark","setRef","bordered","headers","index","itemTitles"],"mappings":"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","file":"js/28.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Pagination, Table, Card, Collapse, BackTopBtn, CopyToClipboard, Select, Icon, Switch } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst keys = ['property', 'description', 'default', 'type', 'value'];\nconst items = [\n    { \n        property: 'itemsCount', \n        description: 'Pass items total count', \n        default: '', \n        type: 'number',\n        value: ''\n    },\n    { \n        property: 'perPageVariants', \n        description: 'Set per page preset variants', \n        default: '[10, 20, 50, 100]', \n        type: 'number[]',\n        value: ''\n    },\n    { \n        property: 'perPage', \n        description: 'Set per page value', \n        default: '10', \n        type: 'number',\n        value: ''\n    },\n    { \n        property: 'onPerPageSelect', \n        description: 'Invokes on per page selection (return perPage value)', \n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'perPageText', \n        description: 'Set \"10 / page\" text', \n        default: 'page', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'current', \n        description: 'Set pagination default current page', \n        default: '1', \n        type: 'number',\n        value: ''\n    },\n    { \n        property: 'onChange', \n        description: 'Invokes on page selection (return page value)', \n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'color', \n        description: 'Set color of pagination from list', \n        default: 'primary', \n        type: 'string',\n        value: 'primary | info | success | error'\n    },\n    { \n        property: 'rounded', \n        description: 'Make border radius rounded',\n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'size', \n        description: 'Set pagination size',\n        default: '', \n        type: 'string',\n        value: 'medium | large'\n    },\n    { \n        property: 'className',\n        description: 'Set a custom css class to component', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n]\n\nconst usage =\n`// Usage examples\nimport React, { useState } from 'react';\nimport { Pagination, InputField } from '@assenti/rui-components';\n\nfunction Example() {\n    const [itemsCount, setItemsCount] = useState(100);\n    const [perPage, setPerPage] = useState(10);\n    const [currentPage, setCurrentPage] = useState(1);\n\n    return (\n        <div>\n            <Pagination\n                itemsCount={itemsCount}\n                color=\"primary\"\n                perPage={perPage}\n                current={currentPage}\n                onChange={page => setCurrentPage(page)}\n                onPerPageSelect={value => setPerPage(value)}\n                className=\"pa-5\"\n                pageText=\"module\"/>\n            <Pagination\n                itemsCount={itemsCount}\n                color=\"info\"\n                current={currentPage}\n                onChange={page => setCurrentPage(page)}\n                className=\"pa-5\"\n                perPage={perPage}\n                onPerPageSelect={value => setPerPage(value)}/>\n            <Pagination\n                itemsCount={itemsCount}\n                color=\"success\"\n                className=\"pa-5\"\n                current={currentPage}\n                onChange={page => setCurrentPage(page)}\n                perPage={perPage}\n                onPerPageSelect={value => setPerPage(value)}/>\n            <Pagination\n                itemsCount={itemsCount}\n                color=\"error\"\n                perPage={perPage}\n                onPerPageSelect={value => setPerPage(value)}\n                className=\"pa-5\"\n                current={currentPage}\n                onChange={page => setCurrentPage(page)}/>\n        </div>\n    )\n}\n`\n\nconst mediumSize =\n`// Usage examples\nimport React, { useState } from 'react';\nimport { Pagination } from '@assenti/rui-components';\n\nfunction Example() {\n    const [itemsCount, setItemsCount] = useState(100);\n    const [perPage, setPerPage] = useState(10);\n    const [currentPage, setCurrentPage] = useState(1);\n\n    return (\n        <div>\n            <Pagination\n                itemsCount={itemsCount}\n                color=\"info\"\n                perPage={perPage}\n                onPerPageSelect={value => setPerPage(value)}\n                className=\"pa-5\"\n                current={currentPage}\n                onChange={page => setCurrentPage(page)}\n                size=\"medium\"\n                rounded/>\n        </div>\n    )\n}\n`\n\nconst largeSize =\n`// Usage examples\nimport React, { useState } from 'react';\nimport { Pagination } from '@assenti/rui-components';\n\nfunction Example() {\n    const [itemsCount, setItemsCount] = useState(100);\n    const [perPage, setPerPage] = useState(10);\n    const [currentPage, setCurrentPage] = useState(1);\n\n    return (\n        <div>\n            <Pagination\n                itemsCount={itemsCount}\n                color=\"info\"\n                perPage={perPage}\n                current={currentPage}\n                onChange={page => setCurrentPage(page)}\n                onPerPageSelect={value => setPerPage(value)}\n                className=\"pa-5\"\n                size=\"large\"/>\n        </div>\n    )\n}`\n\nconst colors = ['primary', 'info', 'success', 'error'];\nconst sizes = ['default', 'medium', 'large'];\nconst positions = ['deafult', 'center', 'right'];\n\nconst PaginationPage = () => {\n    const [itemsCount] = useState(100);\n    const [perPage, setPerPage] = useState(10);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [color, setColor] = useState(colors[0]);\n    const [size, setSize] = useState(sizes[0]);\n    const [position, setPosition] = useState(positions[0]);\n    const [rounded, setRounded] = useState(false);\n    const parent = useRef();\n\n\n    return (\n        <div className=\"rui-page\" ref={parent}>\n            <div className=\"row align-center space-between\">\n                <div className=\"rui-page-title\">Pagination Component</div>\n            </div>\n            <Card outlined title=\"Pagination usage\">\n                <Select\n                    items={colors}\n                    prefix={<Icon name=\"brush\"/>}\n                    width={200}\n                    label=\"Pagination color\"\n                    color=\"primary\"\n                    className=\"my-10\"\n                    value={color}\n                    onChange={v => setColor(v)}/>\n                <br/>\n                <Select\n                    items={sizes}\n                    prefix={<Icon name=\"format-size\"/>}\n                    width={200}\n                    label=\"Pagination size\"\n                    color=\"primary\"\n                    className=\"my-10\"\n                    value={size}\n                    onChange={v => setSize(v)}/>\n                <br/>\n                <Switch \n                    check={rounded} \n                    color=\"primary\"\n                    rightLabel=\"Rounded\" \n                    className=\"my-10\"\n                    onChange={() => setRounded(!rounded)}/>\n                <br/>\n                <Pagination\n                    itemsCount={itemsCount}\n                    color={color}\n                    size={size}\n                    perPage={perPage}\n                    current={currentPage}\n                    onChange={page => setCurrentPage(page)}\n                    onPerPageSelect={value => setPerPage(value)}\n                    className=\"pa-5\"\n                    rounded={rounded}/>\n                <Collapse \n                    icon=\"code\" \n                    iconSize={18}\n                    extra={<CopyToClipboard defaultText=\"Copy code\" text={usage} className=\"mr-10\"/>}  \n                    tooltip=\"Show/Hide Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usage}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <BackTopBtn size=\"medium\" dark setRef={parent}/>\n            <h2>API</h2>\n            <Table\n                bordered\n                headers={['Property', 'Description', 'Default', 'Type', 'Value']}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\nexport default PaginationPage;"],"sourceRoot":""}