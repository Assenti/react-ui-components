{"version":3,"sources":["pages/SelectPage.js"],"names":["keys","rows","property","description","default","type","value","countries","country","cities","SelectPage","useState","city","setCity","setCountry","country_","setCountry_","parent","createRef","api","className","ref","onClick","current","scrollIntoView","behavior","block","outlined","title","items","prefix","name","itemTitle","label","width","color","placeholder","onChange","v","childrenKey","icon","iconSize","contentStyles","padding","tooltip","language","style","prism","size","searchable","borderType","multiple","whiteBackground","onSelect","selectedList","console","log","setRef","dark","bordered","headers","index","itemTitles"],"mappings":"sMAKMA,EAAO,CAAC,WAAY,cAAe,UAAW,OAAQ,SACtDC,EAAO,CACT,CACIC,SAAU,QACVC,YAAa,iBACbC,QAAS,GACTC,KAAM,sBACNC,MAAO,IAEX,CACIJ,SAAU,WACVC,YAAa,4CACbC,QAAS,GACTC,KAAM,SACNC,MAAO,IAEX,CACIJ,SAAU,WACVC,YAAa,sDACbC,QAAS,GACTC,KAAM,WACNC,MAAO,IAEX,CACIJ,SAAU,cACVC,YAAa,2FACbC,QAAS,GACTC,KAAM,SACNC,MAAO,IAEX,CACIJ,SAAU,aACVC,YAAa,8EACbC,QAAS,QACTC,KAAM,UACNC,MAAO,gBAEX,CACIJ,SAAU,OACVC,YAAa,kBACbC,QAAS,GACTC,KAAM,SACNC,MAAO,kBAEX,CACIJ,SAAU,QACVC,YAAa,mBACbC,QAAS,OACTC,KAAM,kBACNC,MAAO,sBAEX,CACIJ,SAAU,QACVC,YAAa,mBACbC,QAAS,GACTC,KAAM,SACNC,MAAO,IAEX,CACIJ,SAAU,cACVC,YAAa,kBACbC,QAAS,GACTC,KAAM,SACNC,MAAO,IAEX,CACIJ,SAAU,QACVC,YAAa,mBACbC,QAAS,GACTC,KAAM,SACNC,MAAO,oCAEX,CACIJ,SAAU,aACVC,YAAa,mBACbC,QAAS,GACTC,KAAM,SACNC,MAAO,2BAEX,CACIJ,SAAU,WACVC,YAAa,uFACbC,QAAS,QACTC,KAAM,UACNC,MAAO,gBAEX,CACIJ,SAAU,WACVC,YAAa,wEACbC,QAAS,GACTC,KAAM,WACNC,MAAO,IAEX,CACIJ,SAAU,WACVC,YAAa,qDACbC,QAAS,GACTC,KAAM,SACNC,MAAO,4CAEX,CACIJ,SAAU,SACVC,YAAa,aACbC,QAAS,GACTC,KAAM,MACNC,MAAO,IAEX,CACIJ,SAAU,kBACVC,YAAa,sCACbC,QAAS,QACTC,KAAM,UACNC,MAAO,gBAEX,CACIJ,SAAU,YACVC,YAAa,sCACbC,QAAS,GACTC,KAAM,SACNC,MAAO,KAITC,EAAY,CACd,CAAEC,QAAS,aAAcC,OAAQ,CAAE,aAAc,SAAU,aAC3D,CAAED,QAAS,SAAUC,OAAQ,CAAC,SAAU,iBAAkB,cAC1D,CAAED,QAAS,MAAOC,OAAQ,CAAC,mBAAoB,gBAAiB,kBAChE,CAAED,QAAS,iBAAkBC,OAAQ,CAAC,SAAU,OAAQ,eACxD,CAAED,QAAS,SAAUC,OAAQ,CAAC,SAAU,UAAW,cACnD,CAAED,QAAS,UAAWC,OAAQ,CAAC,SAAU,SAAU,YACnD,CAAED,QAAS,SAAUC,OAAQ,CAAC,QAAS,OAAQ,aAC/C,CAAED,QAAS,QAASC,OAAQ,CAAC,UAAW,WAAY,cAoQzCC,UA7HI,WAAO,IAAD,EACGC,mBAAS,IADZ,mBACdC,EADc,KACRC,EADQ,OAESF,mBAAS,IAFlB,mBAEdH,EAFc,KAELM,EAFK,OAGWH,mBAAS,IAHpB,mBAGdI,EAHc,KAGJC,EAHI,KAIfC,EAASC,sBACTC,EAAMD,sBAMZ,OACI,yBAAKE,UAAU,WAAWC,IAAKJ,GAC3B,yBAAKG,UAAU,kCACX,yBAAKA,UAAU,kBAAf,oBAGA,yBAAKA,UAAU,+BAA+BE,QAAS,WAT3DH,EAAII,SAASJ,EAAII,QAAQC,eAAe,CAAEC,SAAU,SAAUC,MAAO,aASjE,QAEJ,kBAAC,IAAD,CAAMC,UAAQ,EAACC,MAAM,kBACjB,kBAAC,IAAD,CACIC,MAAOtB,EACPuB,OAAQ,kBAAC,IAAD,CAAMC,KAAK,UACnBC,UAAU,UACVC,MAAM,gCACNC,MAAO,IACPC,MAAM,OACNC,YAAY,YACZ9B,MAAOE,EACP6B,SAAU,SAAAC,GAAC,OAAIxB,EAAWwB,MAC9B,kBAAC,IAAD,CACIlB,UAAU,QACVa,MAAM,6BACNJ,MAAOtB,EACPyB,UAAU,UACVO,YAAY,SACZJ,MAAM,UACND,MAAO,IACPE,YAAY,SACZ9B,MAAOM,EACPyB,SAAU,SAAAC,GAAC,OAAIzB,EAAQyB,MAC3B,kBAAC,IAAD,CACIE,KAAK,OACLC,SAAU,GACVC,cAAe,CAAEC,QAAS,GAC1BC,QAAQ,QACR,kBAAC,IAAD,CAAmBC,SAAS,MAAMC,MAAOC,KAlL5C,gtDAuLL,6BACA,kBAAC,IAAD,CAAMpB,UAAQ,EAACC,MAAM,gCACjB,kBAAC,IAAD,CACIC,MAAOtB,EACPuB,OAAQ,kBAAC,IAAD,CAAMC,KAAK,UACnBC,UAAU,UACVC,MAAM,gCACNC,MAAO,IACPc,KAAK,SACLC,YAAU,EACVd,MAAM,OACNC,YAAY,YACZ9B,MAAOS,EACPsB,SAAU,SAAA/B,GAAK,OAAIU,EAAYV,MACnC,kBAAC,IAAD,CACIuB,MAAOtB,EACPuB,OAAQ,kBAAC,IAAD,CAAMC,KAAK,UACnBC,UAAU,UACVC,MAAM,gCACNC,MAAO,IACPe,YAAU,EACVC,WAAW,UACX9B,UAAU,QACVe,MAAM,OACNC,YAAY,YACZ9B,MAAOS,EACPsB,SAAU,SAAA/B,GAAK,OAAIU,EAAYV,MACnC,kBAAC,IAAD,CACIkC,KAAK,OACLC,SAAU,GACVC,cAAe,CAAEC,QAAS,GAC1BC,QAAQ,QACR,kBAAC,IAAD,CAAmBC,SAAS,MAAMC,MAAOC,KAzK5C,g3DA8KL,6BACA,kBAAC,IAAD,CAAMpB,UAAQ,EAACC,MAAM,sBACjB,kBAAC,IAAD,CACIC,MAAOtB,EACPuB,OAAQ,kBAAC,IAAD,CAAMC,KAAK,UACnBC,UAAU,UACVC,MAAM,kCACNC,MAAO,IACPK,YAAY,SACZY,UAAQ,EACRC,iBAAe,EACfjB,MAAM,OACNC,YAAY,YACZiB,SAAU,SAAC/C,EAAOgD,GAAR,OAAyBC,QAAQC,IAAIlD,EAAOgD,MAC1D,kBAAC,IAAD,CACId,KAAK,OACLC,SAAU,GACVC,cAAe,CAAEC,QAAS,GAC1BC,QAAQ,QACR,kBAAC,IAAD,CAAmBC,SAAS,MAAMC,MAAOC,KA9I1C,uyCAmJP,kBAAC,IAAD,CAAYU,OAAQxC,EAAQyC,MAAI,EAACV,KAAK,WACtC,wBAAI3B,IAAKF,GAAT,OACA,kBAAC,IAAD,CACIwC,UAAQ,EACRC,QAAS,CAAC,WAAY,cAAe,UAAW,OAAQ,SACxD/B,MAAO5B,EACP4D,OAAO,EACPC,WAAY9D","file":"js/28.chunk.js","sourcesContent":["import React, { useState, createRef } from 'react';\nimport { Select, Table, Card, Collapse, Icon, BackTopBtn, Tag } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst keys = ['property', 'description', 'default', 'type', 'value'];\nconst rows = [\n    { \n        property: 'items', \n        description: 'Select options', \n        default: '', \n        type: 'string[] | object[]',\n        value: ''\n    },\n    { \n        property: 'itemName', \n        description: 'Set if you pass items as array of objects', \n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'onChange', \n        description: 'Invokes in select option select (return item value)', \n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'childrenKey', \n        description: 'Set if you pass items with children array (pass the key of item that has children array)', \n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'searchable', \n        description: 'Enable searching field in select menu (has effect only with one level list)', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'size', \n        description: 'Set select size', \n        default: '', \n        type: 'string',\n        value: 'medium | large'\n    },\n    { \n        property: 'width', \n        description: 'Set select width', \n        default: 'auto', \n        type: 'string | number',\n        value: '100px | 100% | 100'\n    },\n    { \n        property: 'label', \n        description: 'Set select label', \n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'placeholder', \n        description: 'Set placeholder', \n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'color', \n        description: 'Set select color', \n        default: '', \n        type: 'string',\n        value: 'primary | info | success | error'\n    },\n    { \n        property: 'borderType', \n        description: 'Set borders type', \n        default: '', \n        type: 'string',\n        value: 'tile | smooth | rounded'\n    },\n    { \n        property: 'multiple', \n        description: 'Enable multiple selection (Warning: if multiple prop set, childrenKey has no effect)',\n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'onSelect', \n        description: 'Invokes on multiple selection (return selected value & selected list)',\n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'tagColor', \n        description: 'Set Tag color (Has effect only with multiple prop)',\n        default: '', \n        type: 'string',\n        value: 'primary | info | success | error | black'\n    },\n    { \n        property: 'prefix', \n        description: 'Set prefix',\n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'whiteBackground',\n        description: 'Set input background color to white', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'className',\n        description: 'Set a custom css class to component', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n]\n\nconst countries = [\n    { country: 'Kazakhstan', cities: [ 'Nur-Sultan', 'Almaty', 'Shymkent' ] }, \n    { country: 'Russia', cities: ['Moscow', 'St. Petersburg', 'Krasnodar'] }, \n    { country: 'USA', cities: ['Washington, D.C.', 'New York City', 'San Francisco'] }, \n    { country: 'United Kingdom', cities: ['London', 'York', 'Manchester'] }, \n    { country: 'Canada', cities: ['Ottawa', 'Toronto', 'Vancouver'] }, \n    { country: 'Germany', cities: ['Berlin', 'Munich', 'Hamburg'] }, \n    { country: 'France', cities: ['Paris', 'Nice', 'Marselle'] }, \n    { country: 'China', cities: ['Beijing', 'Shanghai', 'Shenzhen'] }\n]\n\nconst simpleUsage = \n`// Usage examples\nimport React, { useState } from 'react';\nimport { Select } from '@assenti/react-ui-components';\n\nconst countries = [\n    { country: 'Kazakhstan', cities: [ 'Nur-Sultan', 'Almaty', 'Shymkent' ] }, \n    { country: 'Russia', cities: ['Moscow', 'St. Petersburg', 'Krasnodar'] }, \n    { country: 'USA', cities: ['Washington, D.C.', 'New York City', 'San Francisco'] }, \n    { country: 'United Kingdom', cities: ['London', 'York', 'Manchester'] }, \n    { country: 'Canada', cities: ['Ottawa', 'Toronto', 'Vancouver'] }, \n    { country: 'Germany', cities: ['Berlin', 'Munich', 'Hamburg'] }, \n    { country: 'France', cities: ['Paris', 'Nice', 'Marselle'] }, \n    { country: 'China', cities: ['Beijing', 'Shanghai', 'Shenzhen'] }\n]\nfunction Example() {\n    const [city, setCity] = useState('');\n    const [country, setCountry] = useState('');\n\n    return (\n        <div className=\"pa-20\">\n            <Select\n                items={countries}\n                prefix={<Icon name=\"earth\"/>}\n                itemTitle=\"country\"\n                label=\"Select your favourite country\"\n                width={250}\n                color=\"info\"\n                placeholder=\"Countries\"\n                value={country}\n                onChange={v => setCountry(v)}/>\n            <Select\n                className=\"ml-20\"\n                label=\"Select your favourite city\"\n                items={countries}\n                itemTitle=\"country\"\n                childrenKey=\"cities\"\n                color=\"primary\"\n                width={250}\n                placeholder=\"Cities\"\n                value={city}\n                onChange={v => setCity(v)}/>\n        </div>\n    )\n}`\n\nconst searchUsage = \n`// Usage examples\nimport React, { useState } from 'react';\nimport { Select } from '@assenti/react-ui-components';\n\nconst countries = [\n    { country: 'Kazakhstan', cities: [ 'Nur-Sultan', 'Almaty', 'Shymkent' ] }, \n    { country: 'Russia', cities: ['Moscow', 'St. Petersburg', 'Krasnodar'] }, \n    { country: 'USA', cities: ['Washington, D.C.', 'New York City', 'San Francisco'] }, \n    { country: 'United Kingdom', cities: ['London', 'York', 'Manchester'] }, \n    { country: 'Canada', cities: ['Ottawa', 'Toronto', 'Vancouver'] }, \n    { country: 'Germany', cities: ['Berlin', 'Munich', 'Hamburg'] }, \n    { country: 'France', cities: ['Paris', 'Nice', 'Marselle'] }, \n    { country: 'China', cities: ['Beijing', 'Shanghai', 'Shenzhen'] }\n]\n\nfunction Example() {\n    const [country_, setCountry_] = useState('');\n    const [search, setSearch] = useState('');\n\n    return (\n        <div className=\"pa-20\">\n            <Select\n                items={countries}\n                prefix={<Icon name=\"earth\"/>}\n                itemTitle=\"country\"\n                label=\"Select your favourite country\"\n                width={250}\n                size=\"medium\"\n                searchable\n                color=\"info\"\n                placeholder=\"Countries\"\n                value={country_}\n                onChange={value => setCountry_(value)}/>\n            <Select\n                items={countries}\n                prefix={<Icon name=\"earth\"/>}\n                itemTitle=\"country\"\n                label=\"Select your favourite country\"\n                width={250}\n                searchable\n                rounded\n                className=\"ml-20\"\n                color=\"info\"\n                placeholder=\"Countries\"\n                value={country_}\n                onChange={value => setCountry_(value)}/>\n        </div>\n    )\n}`\n\nconst multipleUsage = \n`// Usage examples\nimport React from 'react';\nimport { Select } from '@assenti/react-ui-components';\n\nconst countries = [\n    { country: 'Kazakhstan', cities: [ 'Nur-Sultan', 'Almaty', 'Shymkent' ] }, \n    { country: 'Russia', cities: ['Moscow', 'St. Petersburg', 'Krasnodar'] }, \n    { country: 'USA', cities: ['Washington, D.C.', 'New York City', 'San Francisco'] }, \n    { country: 'United Kingdom', cities: ['London', 'York', 'Manchester'] }, \n    { country: 'Canada', cities: ['Ottawa', 'Toronto', 'Vancouver'] }, \n    { country: 'Germany', cities: ['Berlin', 'Munich', 'Hamburg'] }, \n    { country: 'France', cities: ['Paris', 'Nice', 'Marselle'] }, \n    { country: 'China', cities: ['Beijing', 'Shanghai', 'Shenzhen'] }\n]\n\nfunction Example() {\n    return (\n        <div>\n            <Select\n                items={countries}\n                prefix={<Icon name=\"earth\"/>}\n                itemTitle=\"country\"\n                label=\"Select your favourite countries\"\n                width={250}\n                childrenKey=\"cities\"\n                multiple\n                whiteBackground\n                color=\"info\"\n                placeholder=\"Countries\"\n                onSelect={(value, selectedList) => console.log(value, selectedList)}/>\n        </div>\n    )\n}`\n\nconst SelectPage = () => {\n    const [city, setCity] = useState('');\n    const [country, setCountry] = useState('');\n    const [country_, setCountry_] = useState('');\n    const parent = createRef();\n    const api = createRef();\n\n    const goToApi = () => {\n        if (api.current) api.current.scrollIntoView({ behavior: 'smooth', block: 'center' })\n    }\n\n    return (\n        <div className=\"rui-page\" ref={parent}>\n            <div className=\"row align-center space-between\">\n                <div className=\"rui-page-title\">\n                    Select Component\n                </div>\n                <div className=\"rui-link fz-13 fw-bold mr-10\" onClick={() => goToApi()}>API</div>\n            </div>\n            <Card outlined title=\"Simple Selects\">\n                <Select\n                    items={countries}\n                    prefix={<Icon name=\"earth\"/>}\n                    itemTitle=\"country\"\n                    label=\"Select your favourite country\"\n                    width={250}\n                    color=\"info\"\n                    placeholder=\"Countries\"\n                    value={country}\n                    onChange={v => setCountry(v)}/>\n                <Select\n                    className=\"ml-20\"\n                    label=\"Select your favourite city\"\n                    items={countries}\n                    itemTitle=\"country\"\n                    childrenKey=\"cities\"\n                    color=\"primary\"\n                    width={250}\n                    placeholder=\"Cities\"\n                    value={city}\n                    onChange={v => setCity(v)}/>\n                <Collapse \n                    icon=\"code\" \n                    iconSize={18}\n                    contentStyles={{ padding: 0 }}\n                    tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {simpleUsage}\n                    </SyntaxHighlighter> \n                </Collapse>\n            </Card>\n            <br/>\n            <Card outlined title=\"Simple Select with searching\">\n                <Select\n                    items={countries}\n                    prefix={<Icon name=\"earth\"/>}\n                    itemTitle=\"country\"\n                    label=\"Select your favourite country\"\n                    width={250}\n                    size=\"medium\"\n                    searchable\n                    color=\"info\"\n                    placeholder=\"Countries\"\n                    value={country_}\n                    onChange={value => setCountry_(value)}/>\n                <Select\n                    items={countries}\n                    prefix={<Icon name=\"earth\"/>}\n                    itemTitle=\"country\"\n                    label=\"Select your favourite country\"\n                    width={250}\n                    searchable\n                    borderType=\"rounded\"\n                    className=\"ml-20\"\n                    color=\"info\"\n                    placeholder=\"Countries\"\n                    value={country_}\n                    onChange={value => setCountry_(value)}/>\n                <Collapse \n                    icon=\"code\" \n                    iconSize={18}\n                    contentStyles={{ padding: 0 }}\n                    tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {searchUsage}\n                    </SyntaxHighlighter> \n                </Collapse>\n            </Card>\n            <br/>\n            <Card outlined title=\"Multiple selection\">\n                <Select\n                    items={countries}\n                    prefix={<Icon name=\"earth\"/>}\n                    itemTitle=\"country\"\n                    label=\"Select your favourite countries\"\n                    width={250}\n                    childrenKey=\"cities\"\n                    multiple\n                    whiteBackground\n                    color=\"info\"\n                    placeholder=\"Countries\"\n                    onSelect={(value, selectedList) => console.log(value, selectedList)}/>\n                <Collapse \n                    icon=\"code\" \n                    iconSize={18}\n                    contentStyles={{ padding: 0 }}\n                    tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {multipleUsage}\n                    </SyntaxHighlighter> \n                </Collapse>\n            </Card>\n            <BackTopBtn setRef={parent} dark size=\"medium\"/>\n            <h2 ref={api}>API</h2>\n            <Table\n                bordered\n                headers={['Property', 'Description', 'Default', 'Type', 'Value']}\n                items={rows}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n        \n    )\n}\n\nexport default SelectPage;"],"sourceRoot":""}