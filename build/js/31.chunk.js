(this["webpackJsonp@assenti/rui-components"]=this["webpackJsonp@assenti/rui-components"]||[]).push([[31],{311:function(e,t,r){"use strict";r.r(t);var a=r(1),o=r(0),n=r.n(o),c=r(3),l=r(313),s=r(271),i=["property","description","default","type","value"],p=[{property:"complete",description:"Set progress completion percent",default:"0",type:"number",value:"0 - 100"},{property:"hideState",description:"Hide progress state",default:"false",type:"boolean",value:"true | false"},{property:"circle",description:"Enable circular progress",default:"false",type:"boolean",value:"true | false"},{property:"stroke",description:"Set circular progress custom stroke width",default:"Depends on progress size",type:"number",value:""},{property:"radius",description:"Set circular progress custom radius",default:"Depends on progress size",type:"number",value:""},{property:"active",description:"Revive the progress bar",default:"false",type:"boolean",value:"true | false"},{property:"disabled",description:"Disable progress",default:"false",type:"boolean",value:"true | false"},{property:"icon",description:"Set icon on progress state instead",default:"",type:"string",value:""},{property:"iconColor",description:"Set icon color",default:"Progress color",type:"string",value:""},{property:"color",description:"Set progress color",default:"primary",type:"string",value:"primary | info | success | error | dark"},{property:"size",description:"Set progress size",default:"",type:"string",value:"medium | large"},{property:"className",description:"Set a custom css class to component",default:"",type:"string",value:""}],m=["primary","info","success","error","dark"],u=["default","medium","large"],d='// Usage examples\nimport React, { useState } from \'react\';\nimport { Progress, Switch, Select, Icon, Button, Tooltip } from \'@assenti/rui-components\';\nconst colors = [\'primary\', \'info\', \'success\', \'error\', \'dark\'];\nconst sizes = [\'default\', \'medium\', \'large\'];\n\nfunction Example() {\n    const [color, setColor] = useState(colors[0]);\n    const [size, setSize] = useState(sizes[0]);\n    const [complete, setComplete] = useState(20);\n    const [hideState, setHideState] = useState(false);\n    const [disabled, setDisabled] = useState(false);\n    const [active, setActive] = useState(false);\n\n    return (\n        <div>\n            <Select\n                items={colors}\n                prefix={<Icon name="brush"/>}\n                width={200}\n                label="Radio button color"\n                color="primary"\n                value={color}\n                onChange={v => setColor(v)}/>\n            <br/>\n            <Select\n                items={sizes}\n                prefix={<Icon name="format-size"/>}\n                width={200}\n                label="Radio button size"\n                color="primary"\n                value={size}\n                onChange={v => setSize(v)}/>\n            <br/>\n            <Switch\n                check={hideState}\n                rightLabel="Hide state"\n                color="primary"\n                className="my-10"\n                onChange={() => setHideState(!hideState)}/>\n            <Switch\n                check={disabled}\n                rightLabel="Disabled"\n                color="primary"\n                className="my-10"\n                onChange={() => setDisabled(!disabled)}/>\n            <Switch\n                check={active}\n                rightLabel="Active"\n                color="primary"\n                className="my-10"\n                onChange={() => setActive(!active)}/>\n            <br/>\n            <div className="row align-center my-10">\n                <Tooltip \n                    tooltip="Reduce progress" \n                    color="error"\n                    className="mr-20">\n                    <Button \n                        icon="minus" \n                        color="error"\n                        disabled={complete === 0}\n                        onClick={() => {\n                            if (complete > 0) setComplete(complete - 10)\n                        }}/>\n                </Tooltip>\n                <Progress\n                    color={color}\n                    size={size}\n                    active={active}\n                    icon={complete === 100 ? \'check-circle\' : null}\n                    iconColor="#1aaa55" \n                    hideState={hideState}\n                    disabled={disabled}\n                    complete={complete}/>\n                <Tooltip \n                    tooltip="Add progress" \n                    color="primary"\n                    className="ml-20">\n                    <Button \n                        icon="plus" \n                        color="primary"\n                        disabled={complete === 100}\n                        onClick={() => {\n                            if (complete < 100) setComplete(complete + 10)\n                        }}/>\n                </Tooltip>\n            </div>\n            <Progress\n                circle\n                className="my-10"\n                color={color}\n                size={size}\n                active={active}\n                icon={complete === 100 ? \'check-circle\' : null}\n                iconColor="#1aaa55"\n                hideState={hideState}\n                disabled={disabled}\n                complete={complete}/>\n        </div>\n    )\n}';t.default=function(){var e=Object(o.useState)(m[0]),t=Object(a.a)(e,2),r=t[0],b=t[1],y=Object(o.useState)(u[0]),h=Object(a.a)(y,2),g=h[0],f=h[1],v=Object(o.useState)(20),S=Object(a.a)(v,2),C=S[0],E=S[1],z=Object(o.useState)(!1),k=Object(a.a)(z,2),N=k[0],j=k[1],w=Object(o.useState)(!1),D=Object(a.a)(w,2),O=D[0],x=D[1],P=Object(o.useState)(!1),R=Object(a.a)(P,2),T=R[0],A=R[1];return n.a.createElement("div",{className:"rui-page"},n.a.createElement("div",{className:"rui-page-title"},"Progress Component"),n.a.createElement(c.h,{outlined:!0,title:"Progress usage"},n.a.createElement(c.C,{items:m,prefix:n.a.createElement(c.q,{name:"brush"}),width:200,label:"Radio button color",color:"primary",value:r,onChange:function(e){return b(e)}}),n.a.createElement("br",null),n.a.createElement(c.C,{items:u,prefix:n.a.createElement(c.q,{name:"format-size"}),width:200,label:"Radio button size",color:"primary",value:g,onChange:function(e){return f(e)}}),n.a.createElement("br",null),n.a.createElement(c.D,{check:N,rightLabel:"Hide state",color:"primary",className:"my-10",onChange:function(){return j(!N)}}),n.a.createElement(c.D,{check:O,rightLabel:"Disabled",color:"primary",className:"my-10",onChange:function(){return x(!O)}}),n.a.createElement(c.D,{check:T,rightLabel:"Active",color:"primary",className:"my-10",onChange:function(){return A(!T)}}),n.a.createElement("br",null),n.a.createElement("div",{className:"row align-center my-10"},n.a.createElement(c.J,{tooltip:"Reduce progress",color:"error",className:"mr-20"},n.a.createElement(c.e,{icon:"minus",color:"error",disabled:0===C,onClick:function(){C>0&&E(C-10)}})),n.a.createElement(c.z,{color:r,size:g,active:T,icon:100===C?"check-circle":null,iconColor:"#1aaa55",hideState:N,disabled:O,complete:C}),n.a.createElement(c.J,{tooltip:"Add progress",color:"primary",className:"ml-20"},n.a.createElement(c.e,{icon:"plus",color:"primary",disabled:100===C,onClick:function(){C<100&&E(C+10)}}))),n.a.createElement(c.z,{circle:!0,className:"my-10",color:r,size:g,active:T,icon:100===C?"check-circle":null,iconColor:"#1aaa55",hideState:N,disabled:O,complete:C}),n.a.createElement(c.j,{icon:"code",iconSize:18,extra:n.a.createElement(c.k,{defaultText:"Copy code",text:d,className:"mr-10"}),tooltip:"Show/Hide Code"},n.a.createElement(l.a,{language:"jsx",style:s.a},d))),n.a.createElement("h2",null,"API"),n.a.createElement(c.E,{bordered:!0,headers:["Property","Description","Default","Type","Value"],items:p,index:!0,itemTitles:i}))}}}]);