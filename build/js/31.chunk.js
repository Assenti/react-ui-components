(this["webpackJsonp@assenti/rui-components"]=this["webpackJsonp@assenti/rui-components"]||[]).push([[31],{277:function(e,t,n){"use strict";n.r(t);for(var o=n(1),a=n(0),r=n.n(a),i=n(3),l=n(302),c=n(268),s=[{country:"Kazakhstan",capital:"Nur-Sultan",population:1029556},{country:"Russia",capital:"Moscow",population:12476e3},{country:"USA",capital:"Washington, D.C.",population:711571},{country:"United Kingdom",capital:"London",population:8787892},{country:"China",capital:"Beijing",population:21542e3},{country:"Germany",capital:"Berlin",population:3748e3}],p=["property","description","default","type","value"],d=[{property:"items",description:"Pass the items",default:"",type:"string[] | number[] | object[]",value:""},{property:"itemTitles",description:"Set items keys that should be rendered",default:"",type:"string[]",value:""},{property:"headers",description:"Set table headers title",default:"",type:"string[]",value:""},{property:"alignment",description:"Set table data alignment",default:"left",type:"string",value:"left | center | right"},{property:"tableTitle",description:"Set table title",default:"",type:"string",value:""},{property:"searchable",description:"Enable table data searching",default:"false",type:"boolean",value:"true | false"},{property:"searchKey",description:"Set searching column key",default:"",type:"string",value:""},{property:"pagination",description:"Add pagination to table",default:"false",type:"boolean",value:"true | false"},{property:"paginationPosition",description:"Set pagination block position",default:"left",type:"string",value:"left | right"},{property:"perPageOptions",description:"Set per page options",default:"[10, 20, 50, 100]",type:"number[]",value:""},{property:"onPerPageSelect",description:"Invokes on per page selection (return perPage value)",default:"",type:"function",value:""},{property:"paginationColor",description:"Set pagination color",default:"primary",type:"string",value:"primary | info | success | error"},{property:"itemsTotal",description:"Required if you use pagination prop",default:"0",type:"number",value:""},{property:"checkbox",description:"Set checkboxes",default:"false",type:"boolean",value:"true | false"},{property:"selectKey",description:"Set select key for activate row selection with checkbox",default:"",type:"string",value:""},{property:"onSelect",description:"Invokes on table row select (has effect with checkbox prop, returns selected rows array)",default:"",type:"function",value:""},{property:"sortable",description:"Set sorting filters on table header (sort asc | desc)",default:"false",type:"boolean",value:"true | false"},{property:"size",description:"Set table rows size",default:"",type:"string",value:"medium | large"},{property:"indexSign",description:"Set order index sign in table header",default:"#",type:"string",value:""},{property:"stripped",description:"Highlight every even row in table",default:"false",type:"boolean",value:"true | false"},{property:"color",description:"Set table color set",default:"",type:"string",value:"primary | info | success | error"},{property:"footer",description:"Set table footer (auto set on checkbox prop)",default:"",type:"any",value:""},{property:"className",description:"Set a custom css class to component",default:"",type:"string",value:""}],u=[],m=0;m<100;m++)u.push({name:"Product ".concat(m+1),price:"$ ".concat(Math.ceil(1e3*Math.random())),count:Math.ceil(500*Math.random())});var g=["default","primary","info","success","error","dark"],h=["left","center","right"],y=["format-align-left","format-align-center","format-align-right"];t.default=function(){var e=Object(a.createRef)(),t=Object(a.createRef)(),n=Object(a.useState)(g[0]),m=Object(o.a)(n,2),f=m[0],b=m[1],v=Object(a.useState)(!1),x=Object(o.a)(v,2),S=x[0],C=x[1],E=Object(a.useState)(!1),k=Object(o.a)(E,2),T=k[0],w=k[1],N=Object(a.useState)(!0),j=Object(o.a)(N,2),O=j[0],P=j[1],B=Object(a.useState)(!1),z=Object(o.a)(B,2),A=z[0],I=z[1],L=Object(a.useState)(!0),K=Object(o.a)(L,2),M=K[0],R=K[1],G=Object(a.useState)(h[0]),D=Object(o.a)(G,2),H=D[0],U=D[1];return r.a.createElement("div",{className:"rui-page",ref:t},r.a.createElement("div",{className:"row align-center space-between"},r.a.createElement("div",{className:"rui-page-title"},"Table Component"),r.a.createElement("div",{onClick:function(){e.current&&e.current.scrollIntoView({behavior:"smooth",block:"start"})},className:"rui-link fz-13 fw-bold"},"API")),r.a.createElement(i.e,{outlined:!0,title:"Table with order index, no hover, stripped and footer"},r.a.createElement(i.z,{bordered:!0,stripped:!0,noHover:!0,tableTitle:"Capitals population",headers:["Country","Capital","Capital population"],items:s,index:!0,searchable:!0,searchKey:"capital",indexSign:"\u2116",footer:r.a.createElement("div",null,"I am a footer"),itemTitles:["country","capital","population"]}),r.a.createElement(i.g,{icon:"code",iconSize:18,tooltip:"Code"},r.a.createElement(l.a,{language:"jsx",style:c.a},"// Usage examples\nimport React from 'react';\nimport { Table } from '@assenti/rui-components';\n\nfunction Example() {\n    return (\n        <div>\n            <Table\n                bordered\n                stripped\n                noHover\n                tableTitle=\"Capitals population\" \n                headers={['Country', 'Capital', 'Capital population']}\n                items={items}\n                index\n                searchable\n                searchKey=\"capital\"\n                indexSign=\"\u2116\"\n                footer={<div>I am a footer</div>}\n                itemTitles={['country', 'capital', 'population']}/> \n        </div>\n    )\n}"))),r.a.createElement("br",null),r.a.createElement(i.e,{outlined:!0,title:"Table with controls"},r.a.createElement(i.z,{bordered:!0,index:!0,onSelect:function(e){return console.log(e)},selectKey:"country",headers:["Country","Capital","Capital population"],items:s,itemTitles:["country","capital","population"],controls:function(e){return r.a.createElement("div",{className:"row justify-center align-center"},r.a.createElement(i.E,{tooltip:"Edit"},r.a.createElement(i.c,{small:!0,color:"light",className:"mr-10",icon:"edit",onClick:function(){return console.log(e,"edited")}})),r.a.createElement(i.E,{tooltip:"Delete"},r.a.createElement(i.c,{small:!0,color:"light",icon:"delete",onClick:function(){return console.log(e,"deleted")}})))}}),r.a.createElement(i.g,{icon:"code",iconSize:18,tooltip:"Code"},r.a.createElement(l.a,{language:"jsx",style:c.a},"// Usage examples\nimport React from 'react';\nimport { Table, Button, Tooltip } from '@assenti/rui-components';\n\nfunction Example() {\n    return (\n        <div>\n            <Table\n                bordered\n                checkbox \n                onSelect={(selected) => console.log(selected)}\n                selectKey=\"country\"\n                headers={['Country', 'Capital', 'Capital population']}\n                items={items}\n                itemTitles={['country', 'capital', 'population']}\n                controls={(item) =>\n                    <div className=\"row justify-center align-center\">\n                        <Tooltip tooltip=\"Edit\">\n                            <Button\n                                small\n                                className=\"mr-10\"\n                                color=\"light\"\n                                icon=\"edit\"\n                                onClick={() => console.log(item, 'edited')}>\n                            </Button>\n                        </Tooltip>\n                        <Tooltip tooltip=\"Delete\">\n                            <Button\n                                small\n                                color=\"light\"\n                                icon=\"delete\"\n                                onClick={() => console.log(item, 'deleted')}>\n                            </Button> \n                        </Tooltip>\n                    </div>\n                }/>\n        </div>\n    )\n}"))),r.a.createElement("br",null),r.a.createElement(i.e,{outlined:!0,title:"Sortable table with pagination, checkbox and grid prop"},r.a.createElement("div",{className:"py-10"},r.a.createElement(i.x,{items:g,prefix:r.a.createElement(i.m,{name:"brush"}),width:200,label:"Table color theme",color:"primary",value:f,onChange:function(e){return b(e)}})),r.a.createElement("div",{className:"row column"},r.a.createElement(i.y,{color:"primary",check:S,className:"my-10",rightLabel:"Grid",onChange:function(){return C(!S)}}),r.a.createElement(i.y,{color:"primary",check:T,className:"my-10",rightLabel:"Checkbox",onChange:function(){return w(!T)}}),r.a.createElement(i.y,{color:"primary",check:O,className:"my-10",rightLabel:"Footer",onChange:function(){return P(!O)}}),r.a.createElement(i.y,{color:"primary",check:A,className:"my-10",rightLabel:"Bordered",onChange:function(){return I(!A)}}),r.a.createElement(i.y,{color:"primary",check:M,className:"my-10",rightLabel:"Set index",onChange:function(){return R(!M)}}),r.a.createElement(i.d,{default:0,icon:!0,onChange:function(e,t){return U(h[t])},className:"my-10",options:y,color:"secondary",outlined:!0})),r.a.createElement(i.z,{noHover:!0,pagination:!0,paginationPosition:"right",itemsTotal:u.length,stripped:!0,grid:S,index:M,sortable:!0,alignment:H,checkbox:T,selectKey:"name",onSelect:function(e){return console.log(e)},color:f,bordered:A,headers:["Name","Price","Count"],items:u,footer:O?r.a.createElement("div",null,"Total count: ",r.a.createElement("strong",null,u.length)):null,itemTitles:["name","price","count"]}),r.a.createElement(i.g,{icon:"code",iconSize:18,tooltip:"Code"},r.a.createElement(l.a,{language:"jsx",style:c.a},'// Usage examples\nimport React, { useState } from \'react\';\nimport { Table, Switch, Icon, Select, ButtonGroup } from \'@assenti/rui-components\';\n\nlet goods = []\nfor (let i = 0; i < 100; i++) {\n    goods.push({\n        name: Product ${i+1},\n        price: $ ${Math.ceil(Math.random() * 1000)},\n        count: Math.ceil(Math.random() * 500)\n    })\n}\n\nconst colors = [\'default\', \'primary\', \'info\', \'success\', \'error\', \'dark\'];\nconst textAligns = [\'left\', \'center\', \'right\'];\nconst icons = [\'format-align-left\', \'format-align-center\', \'format-align-right\'];\n\nfunction Example() {\n    const [color, setColor] = useState(colors[0]);\n    const [grid, setGrid] = useState(false);\n    const [checkbox, setCheckbox] = useState(false);\n    const [footer, setFooter] = useState(true);\n    const [bordered, setBordered] = useState(false);\n    const [indexed, setIndexed] = useState(true);\n    const [textAlign, setTextAlign] = useState(textAligns[0]);\n\n    return (\n        <div>\n            <div className="py-10">\n                <Select\n                        items={colors}\n                        prefix={<Icon name="brush"/>}\n                        width={200}\n                        label="Table color theme"\n                        color="primary"\n                        value={color}\n                        onChange={v => setColor(v)}/>\n                </div>\n                <div className="row column">\n                    <Switch \n                        color="primary" \n                        check={grid}\n                        className="my-10"\n                        rightLabel="Grid"\n                        onChange={() => setGrid(!grid)}/>\n                    <Switch \n                        color="primary" \n                        check={checkbox}\n                        className="my-10"\n                        rightLabel="Checkbox"\n                        onChange={() => setCheckbox(!checkbox)}/>\n                    <Switch \n                        color="primary" \n                        check={footer}\n                        className="my-10"\n                        rightLabel="Footer"\n                        onChange={() => setFooter(!footer)}/>\n                    <Switch \n                        color="primary" \n                        check={bordered}\n                        className="my-10"\n                        rightLabel="Bordered"\n                        onChange={() => setBordered(!bordered)}/>\n                    <Switch \n                        color="primary" \n                        check={indexed}\n                        className="my-10"\n                        rightLabel="Set index"\n                        onChange={() => setIndexed(!indexed)}/>\n                    <ButtonGroup \n                        default={0} \n                        icon\n                        onChange={(item, index) => setTextAlign(textAligns[index])}\n                        className="my-10"\n                        options={icons} \n                        color="secondary" \n                        outlined/>\n                </div>\n                <Table\n                    noHover\n                    pagination\n                    paginationPosition="right"\n                    itemsTotal={goods.length}\n                    stripped\n                    grid={grid}\n                    index={indexed}\n                    sortable\n                    alignment={textAlign}\n                    checkbox={checkbox}\n                    selectKey="name"\n                    onSelect={(selected) => console.log(selected)}\n                    color={color}\n                    bordered={bordered}\n                    headers={[\'Name\', \'Price\', \'Count\']}\n                    items={goods}\n                    footer={footer ? <div>Total count: <strong>{goods.length}</strong></div> : null}\n                    itemTitles={[\'name\', \'price\', \'count\']}/>\n        </div>\n    )\n}'))),r.a.createElement("h2",{ref:e},"API"),r.a.createElement(i.a,{size:"medium",dark:!0,setRef:t}),r.a.createElement(i.z,{bordered:!0,headers:["Property","Description","Default","Type","Value"],items:d,index:!0,itemTitles:p}))}}}]);
//# sourceMappingURL=31.chunk.js.map