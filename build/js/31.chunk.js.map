{"version":3,"sources":["pages/TablePage.js"],"names":["items","country","capital","population","keys","rows","property","description","default","type","value","goods","i","push","name","price","Math","ceil","random","count","colors","textAligns","icons","TablePage","api","createRef","parent","useState","color","setColor","grid","setGrid","checkbox","setCheckbox","footer","setFooter","bordered","setBordered","indexed","setIndexed","textAlign","setTextAlign","className","ref","onClick","current","scrollIntoView","behavior","block","outlined","title","stripped","noHover","tableTitle","headers","index","searchable","searchKey","indexSign","itemTitles","icon","iconSize","tooltip","language","style","prism","onSelect","selected","console","log","selectKey","controls","item","small","prefix","width","label","onChange","v","check","rightLabel","options","pagination","paginationPosition","itemsTotal","length","sortable","alignment","size","dark","setRef"],"mappings":"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","file":"js/31.chunk.js","sourcesContent":["import React, { createRef, useState } from 'react';\nimport { Table, Button, Tooltip, Card, BackTopBtn, Collapse, Select, Icon, Switch, ButtonGroup } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst items = [\n    { country: 'Kazakhstan', capital: 'Nur-Sultan', population: 1029556 }, \n    { country: 'Russia', capital: 'Moscow', population: 12476000 }, \n    { country: 'USA', capital: 'Washington, D.C.', population: 711571 }, \n    { country: 'United Kingdom', capital: 'London', population: 8787892 }, \n    { country: 'China', capital: 'Beijing', population: 21542000 },\n    { country: 'Germany', capital: 'Berlin', population: 3748000 }\n];\n\nconst keys = ['property', 'description', 'default', 'type', 'value'];\nconst rows = [\n    { \n        property: 'items', \n        description: 'Pass the items',\n        default: '', \n        type: 'string[] | number[] | object[]',\n        value: ''\n    },\n    { \n        property: 'itemTitles', \n        description: 'Set items keys that should be rendered',\n        default: '', \n        type: 'string[]',\n        value: ''\n    },\n    { \n        property: 'headers', \n        description: 'Set table headers title',\n        default: '', \n        type: 'string[]',\n        value: ''\n    },\n    { \n        property: 'alignment', \n        description: 'Set table data alignment',\n        default: 'left', \n        type: 'string',\n        value: 'left | center | right'\n    },\n    { \n        property: 'tableTitle', \n        description: 'Set table title',\n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'searchable', \n        description: 'Enable table data searching',\n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'searchKey', \n        description: 'Set searching column key',\n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'pagination', \n        description: 'Add pagination to table',\n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'paginationPosition', \n        description: 'Set pagination block position',\n        default: 'left', \n        type: 'string',\n        value: 'left | right'\n    },\n    { \n        property: 'perPageOptions', \n        description: 'Set per page options',\n        default: '[10, 20, 50, 100]', \n        type: 'number[]',\n        value: ''\n    },\n    { \n        property: 'onPerPageSelect', \n        description: 'Invokes on per page selection (return perPage value)', \n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'paginationColor', \n        description: 'Set pagination color',\n        default: 'primary', \n        type: 'string',\n        value: 'primary | info | success | error'\n    },\n    { \n        property: 'itemsTotal', \n        description: 'Required if you use pagination prop',\n        default: '0', \n        type: 'number',\n        value: ''\n    },\n    { \n        property: 'checkbox', \n        description: 'Set checkboxes',\n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'selectKey', \n        description: 'Set select key for activate row selection with checkbox',\n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'onSelect', \n        description: 'Invokes on table row select (has effect with checkbox prop, returns selected rows array)',\n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'sortable', \n        description: 'Set sorting filters on table header (sort asc | desc)',\n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'size', \n        description: 'Set table rows size',\n        default: '', \n        type: 'string',\n        value: 'medium | large'\n    },\n    { \n        property: 'indexSign', \n        description: 'Set order index sign in table header',\n        default: '#', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'stripped',\n        description: 'Highlight every even row in table', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'color',\n        description: 'Set table color set', \n        default: '', \n        type: 'string',\n        value: 'primary | info | success | error'\n    },\n    { \n        property: 'footer',\n        description: 'Set table footer (auto set on checkbox prop)', \n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'className',\n        description: 'Set a custom css class to component', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n]\n\nconst simpleUsage =\n`// Usage examples\nimport React from 'react';\nimport { Table } from '@assenti/rui-components';\n\nfunction Example() {\n    return (\n        <div>\n            <Table\n                bordered\n                stripped\n                noHover\n                tableTitle=\"Capitals population\" \n                headers={['Country', 'Capital', 'Capital population']}\n                items={items}\n                index\n                searchable\n                searchKey=\"capital\"\n                indexSign=\"№\"\n                footer={<div>I am a footer</div>}\n                itemTitles={['country', 'capital', 'population']}/> \n        </div>\n    )\n}`\n\nconst controlsUsage =\n`// Usage examples\nimport React from 'react';\nimport { Table, Button, Tooltip } from '@assenti/rui-components';\n\nfunction Example() {\n    return (\n        <div>\n            <Table\n                bordered\n                checkbox \n                onSelect={(selected) => console.log(selected)}\n                selectKey=\"country\"\n                headers={['Country', 'Capital', 'Capital population']}\n                items={items}\n                itemTitles={['country', 'capital', 'population']}\n                controls={(item) =>\n                    <div className=\"row justify-center align-center\">\n                        <Tooltip tooltip=\"Edit\">\n                            <Button\n                                small\n                                className=\"mr-10\"\n                                color=\"light\"\n                                icon=\"edit\"\n                                onClick={() => console.log(item, 'edited')}>\n                            </Button>\n                        </Tooltip>\n                        <Tooltip tooltip=\"Delete\">\n                            <Button\n                                small\n                                color=\"light\"\n                                icon=\"delete\"\n                                onClick={() => console.log(item, 'deleted')}>\n                            </Button> \n                        </Tooltip>\n                    </div>\n                }/>\n        </div>\n    )\n}`\n\nconst complexUsage =\n`// Usage examples\nimport React, { useState } from 'react';\nimport { Table, Switch, Icon, Select, ButtonGroup } from '@assenti/rui-components';\n\nlet goods = []\nfor (let i = 0; i < 100; i++) {\n    goods.push({\n        name: Product \\${i+1},\n        price: $ \\${Math.ceil(Math.random() * 1000)},\n        count: Math.ceil(Math.random() * 500)\n    })\n}\n\nconst colors = ['default', 'primary', 'info', 'success', 'error', 'dark'];\nconst textAligns = ['left', 'center', 'right'];\nconst icons = ['format-align-left', 'format-align-center', 'format-align-right'];\n\nfunction Example() {\n    const [color, setColor] = useState(colors[0]);\n    const [grid, setGrid] = useState(false);\n    const [checkbox, setCheckbox] = useState(false);\n    const [footer, setFooter] = useState(true);\n    const [bordered, setBordered] = useState(false);\n    const [indexed, setIndexed] = useState(true);\n    const [textAlign, setTextAlign] = useState(textAligns[0]);\n\n    return (\n        <div>\n            <div className=\"py-10\">\n                <Select\n                        items={colors}\n                        prefix={<Icon name=\"brush\"/>}\n                        width={200}\n                        label=\"Table color theme\"\n                        color=\"primary\"\n                        value={color}\n                        onChange={v => setColor(v)}/>\n                </div>\n                <div className=\"row column\">\n                    <Switch \n                        color=\"primary\" \n                        check={grid}\n                        className=\"my-10\"\n                        rightLabel=\"Grid\"\n                        onChange={() => setGrid(!grid)}/>\n                    <Switch \n                        color=\"primary\" \n                        check={checkbox}\n                        className=\"my-10\"\n                        rightLabel=\"Checkbox\"\n                        onChange={() => setCheckbox(!checkbox)}/>\n                    <Switch \n                        color=\"primary\" \n                        check={footer}\n                        className=\"my-10\"\n                        rightLabel=\"Footer\"\n                        onChange={() => setFooter(!footer)}/>\n                    <Switch \n                        color=\"primary\" \n                        check={bordered}\n                        className=\"my-10\"\n                        rightLabel=\"Bordered\"\n                        onChange={() => setBordered(!bordered)}/>\n                    <Switch \n                        color=\"primary\" \n                        check={indexed}\n                        className=\"my-10\"\n                        rightLabel=\"Set index\"\n                        onChange={() => setIndexed(!indexed)}/>\n                    <ButtonGroup \n                        default={0} \n                        icon\n                        onChange={(item, index) => setTextAlign(textAligns[index])}\n                        className=\"my-10\"\n                        options={icons} \n                        color=\"secondary\" \n                        outlined/>\n                </div>\n                <Table\n                    noHover\n                    pagination\n                    paginationPosition=\"right\"\n                    itemsTotal={goods.length}\n                    stripped\n                    grid={grid}\n                    index={indexed}\n                    sortable\n                    alignment={textAlign}\n                    checkbox={checkbox}\n                    selectKey=\"name\"\n                    onSelect={(selected) => console.log(selected)}\n                    color={color}\n                    bordered={bordered}\n                    headers={['Name', 'Price', 'Count']}\n                    items={goods}\n                    footer={footer ? <div>Total count: <strong>{goods.length}</strong></div> : null}\n                    itemTitles={['name', 'price', 'count']}/>\n        </div>\n    )\n}`\n\nlet goods = []\nfor (let i = 0; i < 100; i++) {\n    goods.push({\n        name: `Product ${i+1}`,\n        price: `$ ${Math.ceil(Math.random() * 1000)}`,\n        count: Math.ceil(Math.random() * 500)\n    })\n}\n\nconst colors = ['default', 'primary', 'info', 'success', 'error', 'dark'];\nconst textAligns = ['left', 'center', 'right'];\nconst icons = ['format-align-left', 'format-align-center', 'format-align-right'];\n\nconst TablePage = () => {\n    const api = createRef();\n    const parent = createRef();\n    const [color, setColor] = useState(colors[0]);\n    const [grid, setGrid] = useState(false);\n    const [checkbox, setCheckbox] = useState(false);\n    const [footer, setFooter] = useState(true);\n    const [bordered, setBordered] = useState(false);\n    const [indexed, setIndexed] = useState(true);\n    const [textAlign, setTextAlign] = useState(textAligns[0]);\n\n    const goToApi = () => {\n        if (api.current) api.current.scrollIntoView({ behavior: 'smooth', block: 'start' })\n    }\n\n    return (\n        <div className=\"rui-page\" ref={parent}>\n            <div className=\"row align-center space-between\">\n                <div className=\"rui-page-title\">Table Component</div>\n                <div onClick={goToApi} className=\"rui-link fz-13 fw-bold\">API</div>\n            </div>\n            <Card outlined title=\"Table with order index, no hover, stripped and footer\">\n                <Table\n                    bordered\n                    stripped\n                    noHover\n                    tableTitle=\"Capitals population\" \n                    headers={['Country', 'Capital', 'Capital population']}\n                    items={items}\n                    index\n                    searchable\n                    searchKey=\"capital\"\n                    indexSign=\"№\"\n                    footer={<div>I am a footer</div>}\n                    itemTitles={['country', 'capital', 'population']}/>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {simpleUsage}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <br/>\n            <Card outlined title=\"Table with controls\">\n                <Table\n                    bordered\n                    index \n                    onSelect={(selected) => console.log(selected)}\n                    selectKey=\"country\"\n                    headers={['Country', 'Capital', 'Capital population']}\n                    items={items}\n                    itemTitles={['country', 'capital', 'population']}\n                    controls={(item) =>\n                        <div className=\"row justify-center align-center\">\n                            <Tooltip tooltip=\"Edit\">\n                                <Button\n                                    small\n                                    color=\"light\"\n                                    className=\"mr-10\"\n                                    icon=\"edit\"\n                                    onClick={() => console.log(item, 'edited')}>\n                                </Button>\n                            </Tooltip>\n                            <Tooltip tooltip=\"Delete\">\n                                <Button\n                                    small\n                                    color=\"light\"\n                                    icon=\"delete\"\n                                    onClick={() => console.log(item, 'deleted')}>\n                                </Button> \n                            </Tooltip>\n                        </div>\n                    }/>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {controlsUsage}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <br/>\n            <Card outlined title=\"Sortable table with pagination, checkbox and grid prop\">\n                <div className=\"py-10\">\n                    <Select\n                        items={colors}\n                        prefix={<Icon name=\"brush\"/>}\n                        width={200}\n                        label=\"Table color theme\"\n                        color=\"primary\"\n                        value={color}\n                        onChange={v => setColor(v)}/>\n                </div>\n                <div className=\"row column\">\n                    <Switch \n                        color=\"primary\" \n                        check={grid}\n                        className=\"my-10\"\n                        rightLabel=\"Grid\"\n                        onChange={() => setGrid(!grid)}/>\n                    <Switch \n                        color=\"primary\" \n                        check={checkbox}\n                        className=\"my-10\"\n                        rightLabel=\"Checkbox\"\n                        onChange={() => setCheckbox(!checkbox)}/>\n                    <Switch \n                        color=\"primary\" \n                        check={footer}\n                        className=\"my-10\"\n                        rightLabel=\"Footer\"\n                        onChange={() => setFooter(!footer)}/>\n                    <Switch \n                        color=\"primary\" \n                        check={bordered}\n                        className=\"my-10\"\n                        rightLabel=\"Bordered\"\n                        onChange={() => setBordered(!bordered)}/>\n                    <Switch \n                        color=\"primary\" \n                        check={indexed}\n                        className=\"my-10\"\n                        rightLabel=\"Set index\"\n                        onChange={() => setIndexed(!indexed)}/>\n                    <ButtonGroup \n                        default={0} \n                        icon\n                        onChange={(item, index) => setTextAlign(textAligns[index])}\n                        className=\"my-10\"\n                        options={icons} \n                        color=\"secondary\" \n                        outlined/>\n                </div>\n                <Table\n                    noHover\n                    pagination\n                    paginationPosition=\"right\"\n                    itemsTotal={goods.length}\n                    stripped\n                    grid={grid}\n                    index={indexed}\n                    sortable\n                    alignment={textAlign}\n                    checkbox={checkbox}\n                    selectKey=\"name\"\n                    onSelect={(selected) => console.log(selected)}\n                    color={color}\n                    bordered={bordered}\n                    headers={['Name', 'Price', 'Count']}\n                    items={goods}\n                    footer={footer ? <div>Total count: <strong>{goods.length}</strong></div> : null}\n                    itemTitles={['name', 'price', 'count']}/>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {complexUsage}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <h2 ref={api}>API</h2>\n            <BackTopBtn size=\"medium\" dark setRef={parent}/>\n            <Table\n                bordered\n                headers={['Property', 'Description', 'Default', 'Type', 'Value']}\n                items={rows}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n\nexport default TablePage;\n"],"sourceRoot":""}