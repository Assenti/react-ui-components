{"version":3,"sources":["pages/TimelinePage.js"],"names":["keys","rows","property","description","default","type","value","items","date","title","subtitle","colors","TimelinePage","api","useRef","parent","useState","icon","setIcon","tagOutlined","setTagOutlined","color","setColor","tagColor","setTagColor","className","ref","onClick","current","scrollIntoView","behavior","block","outlined","check","rightLabel","onChange","prefix","name","width","label","v","centered","flatCard","iconSize","tooltip","language","style","prism","setRef","dark","size","bordered","headers","index","itemTitles"],"mappings":"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","file":"js/36.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { Timeline, Table, BackTopBtn, Card, Collapse, Switch, Select, Icon } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst keys = ['property', 'description', 'default', 'type', 'value'];\nconst rows = [\n    { \n        property: 'items', \n        description: 'Timeline data array', \n        default: '', \n        type: 'object[]',\n        value: ''\n    },\n    { \n        property: 'date', \n        description: 'Set timeline date key', \n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'title', \n        description: 'Set timeline title key', \n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'subtitle', \n        description: 'Set timeline subtitle key', \n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'data', \n        description: 'Set timeline custom data', \n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'centered', \n        description: 'Set timeline position to center', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'flatCard', \n        description: 'Set timeline data card flat', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'color', \n        description: 'Set timeline color', \n        default: '', \n        type: 'string',\n        value: 'primary | info | success | error | yellow | dark'\n    },\n    { \n        property: 'tagColor', \n        description: 'Set date Tag color', \n        default: '', \n        type: 'string',\n        value: 'primary | info | success | error | yellow | dark'\n    },\n    { \n        property: 'tagOutlined', \n        description: 'Set timeline date Tag outlined', \n        default: '', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'icon', \n        description: 'Set icon',\n        default: '', \n        type: 'string',\n        value: 'home | search | etc. (see icon names list in docs)'\n    },\n    { \n        property: 'className',\n        description: 'Set a custom css class to component', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n]\n\nconst items = [\n    { date: '2020-02-29', title: 'Some event on Feb 29th', subtitle: 'Some subtitle' },\n    { date: '2020-02-29', title: 'Some event on Feb 29th', subtitle: 'Some subtitle' },\n    { date: '2020-02-29', title: 'Some event on Feb 29th', subtitle: 'Some subtitle' },\n    { date: '2020-02-29', title: 'Some event on Feb 29th', subtitle: 'Some subtitle' },\n    { date: '2020-02-29', title: 'Some event on Feb 29th', subtitle: 'Some subtitle' },\n    { date: '2020-02-29', title: 'Some event on Feb 29th', subtitle: 'Some subtitle' },\n    { date: '2020-02-29', title: 'Some event on Feb 29th', subtitle: 'Some subtitle' },\n    { date: '2020-02-29', title: 'Some event on Feb 29th', subtitle: 'Some subtitle' },\n    { date: '2020-02-29', title: 'Some event on Feb 29th', subtitle: 'Some subtitle' },\n    { date: '2020-02-29', title: 'Some event on Feb 29th', subtitle: 'Some subtitle' }\n]\n\nconst usage =\n`// Usage examples\nimport React, { useState } from 'react';\nimport { Timeline, Switch, Select, Icon } from '@assenti/react-ui-components';\nconst colors = ['primary', 'info', 'success', 'error', 'dark', 'yellow'];\nconst items = [\n    { date: '2020-02-29', title: 'Some event on Feb 29th', subtitle: 'Some subtitle' },\n    { date: '2020-02-29', title: 'Some event on Feb 29th', subtitle: 'Some subtitle' },\n    { date: '2020-02-29', title: 'Some event on Feb 29th', subtitle: 'Some subtitle' },\n    { date: '2020-02-29', title: 'Some event on Feb 29th', subtitle: 'Some subtitle' },\n    { date: '2020-02-29', title: 'Some event on Feb 29th', subtitle: 'Some subtitle' },\n    { date: '2020-02-29', title: 'Some event on Feb 29th', subtitle: 'Some subtitle' },\n    { date: '2020-02-29', title: 'Some event on Feb 29th', subtitle: 'Some subtitle' },\n    { date: '2020-02-29', title: 'Some event on Feb 29th', subtitle: 'Some subtitle' },\n    { date: '2020-02-29', title: 'Some event on Feb 29th', subtitle: 'Some subtitle' },\n    { date: '2020-02-29', title: 'Some event on Feb 29th', subtitle: 'Some subtitle' }\n]\n\nfunction Example() {\n    const [icon, setIcon] = useState(false);\n    const [tagOutlined, setTagOutlined] = useState(false);\n    const [color, setColor] = useState(colors[0]);\n    const [tagColor, setTagColor] = useState(colors[1]);\n\n    return (\n        <div>\n            <div className=\"row column py-10\">\n                <Switch \n                    color=\"primary\" \n                    check={icon}\n                    rightLabel=\"Icon\"\n                    className=\"my-10\" \n                    onChange={() => setIcon(!icon)}/>\n                <Switch \n                    color=\"primary\" \n                    check={tagOutlined}\n                    className=\"my-10\"\n                    rightLabel=\"Tag outlined\" \n                    onChange={() => setTagOutlined(!tagOutlined)}/>\n            </div>\n            <div className=\"pb-20\">\n                <Select\n                    items={colors}\n                    prefix={<Icon name=\"brush\"/>}\n                    width={200}\n                    label=\"Timeline color\"\n                    color=\"primary\"\n                    className=\"mr-10\"\n                    value={color}\n                    onChange={v => setColor(v)}/>\n                <Select\n                    items={colors}\n                    prefix={<Icon name=\"brush\"/>}\n                    width={200}\n                    color=\"primary\"\n                    label=\"Tag color\"\n                    value={tagColor}\n                    onChange={v => setTagColor(v)}/>\n            </div>\n            <Timeline \n                items={items} \n                date=\"date\"\n                centered\n                color={color}\n                tagOutlined={tagOutlined}\n                tagColor={tagColor}\n                flatCard\n                icon={icon ? 'star' : ''}\n                title=\"title\"\n                subtitle=\"subtitle\"/>\n        </div>\n    )\n}`\n\nconst colors = ['primary', 'info', 'success', 'error', 'dark', 'yellow'];\n\nconst TimelinePage = () => {\n    const api = useRef();\n    const parent = useRef();\n    const [icon, setIcon] = useState(false);\n    const [tagOutlined, setTagOutlined] = useState(false);\n    const [color, setColor] = useState(colors[0]);\n    const [tagColor, setTagColor] = useState(colors[1]);\n\n    const goToApi = () => {\n        if (api.current) api.current.scrollIntoView({ behavior: 'smooth', block: 'center'})\n    }\n\n    return (\n        <div className=\"rui-page\" ref={parent}>\n            <div className=\"row align-center space-between\">\n                <div className=\"rui-page-title\">Timeline Component</div>\n                <div onClick={() => goToApi()} className=\"rui-link fz-13 fw-bold mr-10\">API</div>\n            </div>\n            <Card outlined title=\"Timeline component usage\">\n                <div className=\"row column py-10\">\n                    <Switch \n                        color=\"primary\" \n                        check={icon}\n                        rightLabel=\"Icon\"\n                        className=\"my-10\" \n                        onChange={() => setIcon(!icon)}/>\n                    <Switch \n                        color=\"primary\" \n                        check={tagOutlined}\n                        className=\"my-10\"\n                        rightLabel=\"Tag outlined\" \n                        onChange={() => setTagOutlined(!tagOutlined)}/>\n                </div>\n                <div className=\"pb-20\">\n                    <Select\n                        items={colors}\n                        prefix={<Icon name=\"brush\"/>}\n                        width={200}\n                        label=\"Timeline color\"\n                        color=\"primary\"\n                        className=\"mr-10\"\n                        value={color}\n                        onChange={v => setColor(v)}/>\n                    <Select\n                        items={colors}\n                        prefix={<Icon name=\"brush\"/>}\n                        width={200}\n                        color=\"primary\"\n                        label=\"Tag color\"\n                        value={tagColor}\n                        onChange={v => setTagColor(v)}/>\n                </div>\n                <Timeline \n                    items={items} \n                    date=\"date\"\n                    centered\n                    color={color}\n                    tagOutlined={tagOutlined}\n                    tagColor={tagColor}\n                    flatCard\n                    icon={icon ? 'star' : ''}\n                    title=\"title\"\n                    subtitle=\"subtitle\"/>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usage}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <h2 ref={api}>API</h2>\n            <BackTopBtn setRef={parent} dark size=\"medium\"/>\n            <Table\n                bordered\n                headers={['Property', 'Description', 'Default', 'Type', 'Value']}\n                items={rows}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n\nexport default TimelinePage;\n"],"sourceRoot":""}