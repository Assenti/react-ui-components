{"version":3,"sources":["pages/TablePage.js"],"names":["keys","rows","property","description","default","type","value","usage","goods","i","push","name","price","Math","ceil","random","count","colors","textAligns","icons","TablePage","api","createRef","parent","useState","color","setColor","grid","setGrid","checkbox","setCheckbox","footer","setFooter","bordered","setBordered","indexed","setIndexed","searchable","setSearchable","sortable","setSortable","loading","setLoading","controls","setControls","title","setTitle","stripped","setStripped","hover","setHover","pagination","setPagination","textAlign","setTextAlign","className","ref","onClick","current","scrollIntoView","behavior","block","outlined","items","prefix","width","label","onChange","v","icon","item","index","options","check","rightLabel","noHover","paginationPosition","itemsTotal","length","tableTitle","alignment","searchKey","selectKey","onSelect","selected","console","log","headers","itemTitles","tooltip","small","iconSize","extra","defaultText","text","language","style","prism","size","dark","setRef"],"mappings":"kJAyWA,I,oDApWMA,EAAO,CAAC,WAAY,cAAe,UAAW,OAAQ,SACtDC,EAAO,CACT,CACIC,SAAU,QACVC,YAAa,iBACbC,QAAS,GACTC,KAAM,iCACNC,MAAO,IAEX,CACIJ,SAAU,aACVC,YAAa,yCACbC,QAAS,GACTC,KAAM,WACNC,MAAO,IAEX,CACIJ,SAAU,UACVC,YAAa,0BACbC,QAAS,GACTC,KAAM,WACNC,MAAO,IAEX,CACIJ,SAAU,YACVC,YAAa,2BACbC,QAAS,OACTC,KAAM,SACNC,MAAO,yBAEX,CACIJ,SAAU,aACVC,YAAa,kBACbC,QAAS,GACTC,KAAM,SACNC,MAAO,IAEX,CACIJ,SAAU,aACVC,YAAa,8BACbC,QAAS,QACTC,KAAM,UACNC,MAAO,gBAEX,CACIJ,SAAU,YACVC,YAAa,2BACbC,QAAS,GACTC,KAAM,SACNC,MAAO,IAEX,CACIJ,SAAU,aACVC,YAAa,0BACbC,QAAS,QACTC,KAAM,UACNC,MAAO,gBAEX,CACIJ,SAAU,qBACVC,YAAa,gCACbC,QAAS,OACTC,KAAM,SACNC,MAAO,gBAEX,CACIJ,SAAU,iBACVC,YAAa,uBACbC,QAAS,oBACTC,KAAM,WACNC,MAAO,IAEX,CACIJ,SAAU,kBACVC,YAAa,uDACbC,QAAS,GACTC,KAAM,WACNC,MAAO,IAEX,CACIJ,SAAU,kBACVC,YAAa,uBACbC,QAAS,UACTC,KAAM,SACNC,MAAO,oCAEX,CACIJ,SAAU,aACVC,YAAa,sCACbC,QAAS,IACTC,KAAM,SACNC,MAAO,IAEX,CACIJ,SAAU,WACVC,YAAa,iBACbC,QAAS,QACTC,KAAM,UACNC,MAAO,gBAEX,CACIJ,SAAU,YACVC,YAAa,0DACbC,QAAS,GACTC,KAAM,SACNC,MAAO,IAEX,CACIJ,SAAU,WACVC,YAAa,2FACbC,QAAS,GACTC,KAAM,WACNC,MAAO,IAEX,CACIJ,SAAU,WACVC,YAAa,wDACbC,QAAS,QACTC,KAAM,UACNC,MAAO,gBAEX,CACIJ,SAAU,OACVC,YAAa,sBACbC,QAAS,GACTC,KAAM,SACNC,MAAO,kBAEX,CACIJ,SAAU,YACVC,YAAa,uCACbC,QAAS,IACTC,KAAM,SACNC,MAAO,IAEX,CACIJ,SAAU,WACVC,YAAa,oCACbC,QAAS,QACTC,KAAM,UACNC,MAAO,gBAEX,CACIJ,SAAU,QACVC,YAAa,sBACbC,QAAS,GACTC,KAAM,SACNC,MAAO,oCAEX,CACIJ,SAAU,SACVC,YAAa,+CACbC,QAAS,GACTC,KAAM,MACNC,MAAO,IAEX,CACIJ,SAAU,YACVC,YAAa,sCACbC,QAAS,GACTC,KAAM,SACNC,MAAO,KAITC,EAAK,kiOA8LPC,EAAQ,GACHC,EAAI,EAAGA,EAAI,IAAKA,IACrBD,EAAME,KAAK,CACPC,KAAK,WAAD,OAAaF,EAAE,GACnBG,MAAM,KAAD,OAAOC,KAAKC,KAAqB,IAAhBD,KAAKE,WAC3BC,MAAOH,KAAKC,KAAqB,IAAhBD,KAAKE,YAI9B,IAAME,EAAS,CAAC,UAAW,UAAW,OAAQ,UAAW,QAAS,QAC5DC,EAAa,CAAC,OAAQ,SAAU,SAChCC,EAAQ,CAAC,oBAAqB,sBAAuB,sBA0M5CC,UAxMG,WACd,IAAMC,EAAMC,sBACNC,EAASD,sBAFK,EAGME,mBAASP,EAAO,IAHtB,mBAGbQ,EAHa,KAGNC,EAHM,OAIIF,oBAAS,GAJb,mBAIbG,EAJa,KAIPC,EAJO,OAKYJ,oBAAS,GALrB,mBAKbK,EALa,KAKHC,EALG,OAMQN,oBAAS,GANjB,mBAMbO,EANa,KAMLC,EANK,OAOYR,oBAAS,GAPrB,mBAObS,EAPa,KAOHC,EAPG,OAQUV,oBAAS,GARnB,mBAQbW,EARa,KAQJC,EARI,OASgBZ,oBAAS,GATzB,mBASba,EATa,KASDC,EATC,OAUYd,oBAAS,GAVrB,mBAUbe,EAVa,KAUHC,EAVG,OAWUhB,oBAAS,GAXnB,mBAWbiB,EAXa,KAWJC,EAXI,OAYYlB,oBAAS,GAZrB,mBAYbmB,EAZa,KAYHC,GAZG,QAaMpB,oBAAS,GAbf,qBAabqB,GAba,MAaNC,GAbM,SAcYtB,oBAAS,GAdrB,qBAcbuB,GAda,MAcHC,GAdG,SAeMxB,oBAAS,GAff,qBAebyB,GAfa,MAeNC,GAfM,SAgBgB1B,oBAAS,GAhBzB,qBAgBb2B,GAhBa,MAgBDC,GAhBC,SAiBc5B,mBAASN,EAAW,IAjBlC,qBAiBbmC,GAjBa,MAiBFC,GAjBE,MAuBpB,OACI,yBAAKC,UAAU,WAAWC,IAAKjC,GAC3B,yBAAKgC,UAAU,kCACX,yBAAKA,UAAU,kBAAf,mBACA,yBAAKE,QARD,WACRpC,EAAIqC,SAASrC,EAAIqC,QAAQC,eAAe,CAAEC,SAAU,SAAUC,MAAO,WAO1CN,UAAU,0BAAjC,QAEJ,kBAAC,IAAD,CAAMO,UAAQ,EAACjB,MAAM,eACjB,yBAAKU,UAAU,0BACX,kBAAC,IAAD,CACIQ,MAAO9C,EACP+C,OAAQ,kBAAC,IAAD,CAAMrD,KAAK,UACnBsD,MAAO,IACPC,MAAM,oBACNzC,MAAM,UACN8B,UAAU,OACVjD,MAAOmB,EACP0C,SAAU,SAAAC,GAAC,OAAI1C,EAAS0C,MAC5B,kBAAC,IAAD,CACIhE,QAAS,EACTiE,MAAI,EACJF,SAAU,SAACG,EAAMC,GAAP,OAAiBjB,GAAapC,EAAWqD,KACnDhB,UAAU,QACViB,QAASrD,EACTM,MAAM,YACNqC,UAAQ,KAEhB,6BACA,kBAAC,IAAD,CACIrC,MAAM,UACNgD,MAAO9C,EACP4B,UAAU,QACVmB,WAAW,OACXP,SAAU,kBAAMvC,GAASD,MAC7B,kBAAC,IAAD,CACIF,MAAM,UACNgD,MAAO5C,EACP0B,UAAU,QACVmB,WAAW,WACXP,SAAU,kBAAMrC,GAAaD,MACjC,kBAAC,IAAD,CACIJ,MAAM,UACNgD,MAAO1B,GACPQ,UAAU,QACVmB,WAAW,WACXP,SAAU,kBAAMnB,IAAaD,OACjC,6BACA,kBAAC,IAAD,CACItB,MAAM,UACNgD,MAAO5B,GACPU,UAAU,QACVmB,WAAW,cACXP,SAAU,kBAAMrB,IAAUD,OAC9B,kBAAC,IAAD,CACIpB,MAAM,UACNgD,MAAO1C,EACPwB,UAAU,QACVmB,WAAW,SACXP,SAAU,kBAAMnC,GAAWD,MAC/B,kBAAC,IAAD,CACIN,MAAM,UACNgD,MAAOxC,EACPsB,UAAU,QACVmB,WAAW,WACXP,SAAU,kBAAMjC,GAAaD,MACjC,6BACA,kBAAC,IAAD,CACIR,MAAM,UACNgD,MAAOtC,EACPoB,UAAU,QACVmB,WAAW,YACXP,SAAU,kBAAM/B,GAAYD,MAChC,kBAAC,IAAD,CACIV,MAAM,UACNgD,MAAOpC,EACPkB,UAAU,QACVmB,WAAW,aACXP,SAAU,kBAAM7B,GAAeD,MACnC,kBAAC,IAAD,CACIZ,MAAM,UACNgD,MAAO9B,EACPY,UAAU,QACVmB,WAAW,WACXP,SAAU,kBAAMvB,IAAaD,MACjC,6BACA,kBAAC,IAAD,CACIlB,MAAM,UACNgD,MAAOxB,GACPM,UAAU,QACVmB,WAAW,WACXP,SAAU,kBAAMjB,IAAUD,OAC9B,kBAAC,IAAD,CACIxB,MAAM,UACNgD,MAAOlC,EACPgB,UAAU,QACVmB,WAAW,WACXP,SAAU,kBAAM3B,GAAaD,MACjC,kBAAC,IAAD,CACId,MAAM,UACNgD,MAAOtB,GACPI,UAAU,QACVmB,WAAW,aACXP,SAAU,kBAAMf,IAAeD,OACnC,6BACA,kBAAC,IAAD,CACI1B,MAAM,UACNgD,MAAOhC,EACPc,UAAU,QACVmB,WAAW,UACXP,SAAU,kBAAMzB,GAAYD,MAChC,6BACA,kBAAC,IAAD,CACIkC,QAAS1B,GACTE,WAAYA,GACZyB,mBAAmB,QACnBC,WAAYrE,EAAMsE,OAClB/B,SAAUA,GACVpB,KAAMA,EACN4C,MAAOpC,EACPI,SAAUA,EACVwC,WAAYlC,GAAQ,cAAgB,GACpCmC,UAAW3B,GACXhB,WAAYA,EACZ4C,UAAU,OACVC,UAAU,OACVrD,SAAUA,EACVsD,SAAU,SAACC,GAAD,OAAcC,QAAQC,IAAIF,IACpC3D,MAAOA,EACPgB,QAASA,EACTR,SAAUA,EACVsD,QAAS,CAAC,OAAQ,QAAS,SAC3BxB,MAAOvD,EACPuB,OAAQA,EAAS,6CAAkB,gCAASvB,EAAMsE,SAAyB,KAC3EU,WAAY,CAAC,OAAQ,QAAS,SAC9B7C,SAAU,SAAC2B,GAAD,OACN3B,EACA,yBAAKY,UAAU,mCACX,kBAAC,IAAD,CAASkC,QAAQ,QACb,kBAAC,IAAD,CACIC,OAAK,EACLjE,MAAM,QACN8B,UAAU,QACVc,KAAK,OACLZ,QAAS,kBAAM4B,QAAQC,IAAIhB,EAAM,cAGzC,kBAAC,IAAD,CAASmB,QAAQ,UACb,kBAAC,IAAD,CACIC,OAAK,EACLjE,MAAM,QACN4C,KAAK,SACLZ,QAAS,kBAAM4B,QAAQC,IAAIhB,EAAM,gBAGpC,QAGjB,kBAAC,IAAD,CACID,KAAK,OACLsB,SAAU,GACVC,MAAO,kBAAC,IAAD,CAAiBC,YAAY,YAAYC,KAAMvF,EAAOgD,UAAU,UACvEkC,QAAQ,kBACR,kBAAC,IAAD,CAAmBM,SAAS,MAAMC,MAAOC,KACpC1F,KAIb,wBAAIiD,IAAKnC,GAAT,OACA,kBAAC,IAAD,CAAY6E,KAAK,SAASC,MAAI,EAACC,OAAQ7E,IACvC,kBAAC,IAAD,CACIU,UAAQ,EACRsD,QAAS,CAAC,WAAY,cAAe,UAAW,OAAQ,SACxDxB,MAAO9D,EACPsE,OAAO,EACPiB,WAAYxF","file":"js/36.chunk.js","sourcesContent":["import React, { createRef, useState } from 'react';\nimport { Table, Button, Tooltip, Card, BackTopBtn, Collapse, Select, Icon, Switch, ButtonGroup, CopyToClipboard } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst keys = ['property', 'description', 'default', 'type', 'value'];\nconst rows = [\n    { \n        property: 'items', \n        description: 'Pass the items',\n        default: '', \n        type: 'string[] | number[] | object[]',\n        value: ''\n    },\n    { \n        property: 'itemTitles', \n        description: 'Set items keys that should be rendered',\n        default: '', \n        type: 'string[]',\n        value: ''\n    },\n    { \n        property: 'headers', \n        description: 'Set table headers title',\n        default: '', \n        type: 'string[]',\n        value: ''\n    },\n    { \n        property: 'alignment', \n        description: 'Set table data alignment',\n        default: 'left', \n        type: 'string',\n        value: 'left | center | right'\n    },\n    { \n        property: 'tableTitle', \n        description: 'Set table title',\n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'searchable', \n        description: 'Enable table data searching',\n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'searchKey', \n        description: 'Set searching column key',\n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'pagination', \n        description: 'Add pagination to table',\n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'paginationPosition', \n        description: 'Set pagination block position',\n        default: 'left', \n        type: 'string',\n        value: 'left | right'\n    },\n    { \n        property: 'perPageOptions', \n        description: 'Set per page options',\n        default: '[10, 20, 50, 100]', \n        type: 'number[]',\n        value: ''\n    },\n    { \n        property: 'onPerPageSelect', \n        description: 'Invokes on per page selection (return perPage value)', \n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'paginationColor', \n        description: 'Set pagination color',\n        default: 'primary', \n        type: 'string',\n        value: 'primary | info | success | error'\n    },\n    { \n        property: 'itemsTotal', \n        description: 'Required if you use pagination prop',\n        default: '0', \n        type: 'number',\n        value: ''\n    },\n    { \n        property: 'checkbox', \n        description: 'Set checkboxes',\n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'selectKey', \n        description: 'Set select key for activate row selection with checkbox',\n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'onSelect', \n        description: 'Invokes on table row select (has effect with checkbox prop, returns selected rows array)',\n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'sortable', \n        description: 'Set sorting filters on table header (sort asc | desc)',\n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'size', \n        description: 'Set table rows size',\n        default: '', \n        type: 'string',\n        value: 'medium | large'\n    },\n    { \n        property: 'indexSign', \n        description: 'Set order index sign in table header',\n        default: '#', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'stripped',\n        description: 'Highlight every even row in table', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'color',\n        description: 'Set table color set', \n        default: '', \n        type: 'string',\n        value: 'primary | info | success | error'\n    },\n    { \n        property: 'footer',\n        description: 'Set table footer (auto set on checkbox prop)', \n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'className',\n        description: 'Set a custom css class to component', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n]\n\nconst usage =\n`// Usage examples\nimport React, { useState } from 'react';\nimport { Table, Switch, Icon, Select, ButtonGroup } from '@assenti/rui-components';\n\nlet goods = []\nfor (let i = 0; i < 100; i++) {\n    goods.push({\n        name: Product \\${i+1},\n        price: $ \\${Math.ceil(Math.random() * 1000)},\n        count: Math.ceil(Math.random() * 500)\n    })\n}\n\nconst colors = ['default', 'primary', 'info', 'success', 'error', 'dark'];\nconst textAligns = ['left', 'center', 'right'];\nconst icons = ['format-align-left', 'format-align-center', 'format-align-right'];\n\nfunction Example() {\n    const [color, setColor] = useState(colors[0]);\n    const [grid, setGrid] = useState(false);\n    const [checkbox, setCheckbox] = useState(false);\n    const [footer, setFooter] = useState(true);\n    const [bordered, setBordered] = useState(false);\n    const [indexed, setIndexed] = useState(true);\n    const [searchable, setSearchable] = useState(false);\n    const [sortable, setSortable] = useState(true);\n    const [loading, setLoading] = useState(false);\n    const [controls, setControls] = useState(false);\n    const [title, setTitle] = useState(false);\n    const [stripped, setStripped] = useState(true);\n    const [hover, setHover] = useState(true);\n    const [pagination, setPagination] = useState(true);\n    const [textAlign, setTextAlign] = useState(textAligns[0]);\n\n    return (\n        <div>\n            <div className=\"row align-bottom pt-10\">\n                <Select\n                    items={colors}\n                    prefix={<Icon name=\"brush\"/>}\n                    width={200}\n                    label=\"Table color theme\"\n                    color=\"primary\"\n                    className=\"my-0\"\n                    value={color}\n                    onChange={v => setColor(v)}/>\n                <ButtonGroup \n                    default={0} \n                    icon\n                    onChange={(item, index) => setTextAlign(textAligns[index])}\n                    className=\"ml-10\"\n                    options={icons} \n                    color=\"secondary\" \n                    outlined/>\n            </div>\n            <br/>\n            <Switch \n                color=\"primary\" \n                check={grid}\n                className=\"my-10\"\n                rightLabel=\"Grid\"\n                onChange={() => setGrid(!grid)}/>\n            <Switch \n                color=\"primary\" \n                check={checkbox}\n                className=\"my-10\"\n                rightLabel=\"Checkbox\"\n                onChange={() => setCheckbox(!checkbox)}/>\n            <Switch \n                color=\"primary\" \n                check={stripped}\n                className=\"my-10\"\n                rightLabel=\"Stripped\"\n                onChange={() => setStripped(!stripped)}/>\n            <br/>\n            <Switch \n                color=\"primary\" \n                check={title}\n                className=\"my-10\"\n                rightLabel=\"Table title\"\n                onChange={() => setTitle(!title)}/>\n            <Switch \n                color=\"primary\" \n                check={footer}\n                className=\"my-10\"\n                rightLabel=\"Footer\"\n                onChange={() => setFooter(!footer)}/>\n            <Switch \n                color=\"primary\" \n                check={bordered}\n                className=\"my-10\"\n                rightLabel=\"Bordered\"\n                onChange={() => setBordered(!bordered)}/>\n            <br/>\n            <Switch \n                color=\"primary\" \n                check={indexed}\n                className=\"my-10\"\n                rightLabel=\"Set index\"\n                onChange={() => setIndexed(!indexed)}/>\n            <Switch \n                color=\"primary\" \n                check={searchable}\n                className=\"my-10\"\n                rightLabel=\"Searchable\"\n                onChange={() => setSearchable(!searchable)}/>\n            <Switch \n                color=\"primary\" \n                check={controls}\n                className=\"my-10\"\n                rightLabel=\"Controls\"\n                onChange={() => setControls(!controls)}/>\n            <br/>\n            <Switch \n                color=\"primary\" \n                check={hover}\n                className=\"my-10\"\n                rightLabel=\"No Hover\"\n                onChange={() => setHover(!hover)}/>\n            <Switch \n                color=\"primary\" \n                check={sortable}\n                className=\"my-10\"\n                rightLabel=\"Sortable\"\n                onChange={() => setSortable(!sortable)}/>\n            <Switch \n                color=\"primary\" \n                check={pagination}\n                className=\"my-10\"\n                rightLabel=\"Pagination\"\n                onChange={() => setPagination(!pagination)}/>\n            <br/>\n            <Switch \n                color=\"primary\" \n                check={loading}\n                className=\"my-10\"\n                rightLabel=\"Loading\"\n                onChange={() => setLoading(!loading)}/>\n            <br/>\n            <Table\n                noHover={hover}\n                pagination={pagination}\n                paginationPosition=\"right\"\n                itemsTotal={goods.length}\n                stripped={stripped}\n                grid={grid}\n                index={indexed}\n                sortable={sortable}\n                tableTitle={title ? 'Table title' : ''}\n                alignment={textAlign}\n                searchable={searchable}\n                searchKey=\"name\"\n                selectKey=\"name\"\n                checkbox={checkbox}\n                onSelect={(selected) => console.log(selected)}\n                color={color}\n                loading={loading}\n                bordered={bordered}\n                headers={['Name', 'Price', 'Count']}\n                items={goods}\n                footer={footer ? <div>Total count: <strong>{goods.length}</strong></div> : null}\n                itemTitles={['name', 'price', 'count']}\n                controls={(item) =>\n                    controls ? \n                    <div className=\"row justify-center align-center\">\n                        <Tooltip tooltip=\"Edit\">\n                            <Button\n                                small\n                                color=\"light\"\n                                className=\"mr-10\"\n                                icon=\"edit\"\n                                onClick={() => console.log(item, 'edited')}>\n                            </Button>\n                        </Tooltip>\n                        <Tooltip tooltip=\"Delete\">\n                            <Button\n                                small\n                                color=\"light\"\n                                icon=\"delete\"\n                                onClick={() => console.log(item, 'deleted')}>\n                            </Button> \n                        </Tooltip>\n                    </div> : null\n                }\n                />\n        </div>\n    )\n}`\n\nlet goods = []\nfor (let i = 0; i < 100; i++) {\n    goods.push({\n        name: `Product ${i+1}`,\n        price: `$ ${Math.ceil(Math.random() * 1000)}`,\n        count: Math.ceil(Math.random() * 500)\n    })\n}\n\nconst colors = ['default', 'primary', 'info', 'success', 'error', 'dark'];\nconst textAligns = ['left', 'center', 'right'];\nconst icons = ['format-align-left', 'format-align-center', 'format-align-right'];\n\nconst TablePage = () => {\n    const api = createRef();\n    const parent = createRef();\n    const [color, setColor] = useState(colors[0]);\n    const [grid, setGrid] = useState(false);\n    const [checkbox, setCheckbox] = useState(false);\n    const [footer, setFooter] = useState(true);\n    const [bordered, setBordered] = useState(false);\n    const [indexed, setIndexed] = useState(true);\n    const [searchable, setSearchable] = useState(false);\n    const [sortable, setSortable] = useState(true);\n    const [loading, setLoading] = useState(false);\n    const [controls, setControls] = useState(false);\n    const [title, setTitle] = useState(false);\n    const [stripped, setStripped] = useState(true);\n    const [hover, setHover] = useState(true);\n    const [pagination, setPagination] = useState(true);\n    const [textAlign, setTextAlign] = useState(textAligns[0]);\n\n    const goToApi = () => {\n        if (api.current) api.current.scrollIntoView({ behavior: 'smooth', block: 'start' })\n    }\n\n    return (\n        <div className=\"rui-page\" ref={parent}>\n            <div className=\"row align-center space-between\">\n                <div className=\"rui-page-title\">Table Component</div>\n                <div onClick={goToApi} className=\"rui-link fz-13 fw-bold\">API</div>\n            </div>\n            <Card outlined title=\"Table usage\">\n                <div className=\"row align-bottom pt-10\">\n                    <Select\n                        items={colors}\n                        prefix={<Icon name=\"brush\"/>}\n                        width={200}\n                        label=\"Table color theme\"\n                        color=\"primary\"\n                        className=\"my-0\"\n                        value={color}\n                        onChange={v => setColor(v)}/>\n                    <ButtonGroup \n                        default={0} \n                        icon\n                        onChange={(item, index) => setTextAlign(textAligns[index])}\n                        className=\"ml-10\"\n                        options={icons} \n                        color=\"secondary\" \n                        outlined/>\n                </div>\n                <br/>\n                <Switch \n                    color=\"primary\" \n                    check={grid}\n                    className=\"my-10\"\n                    rightLabel=\"Grid\"\n                    onChange={() => setGrid(!grid)}/>\n                <Switch \n                    color=\"primary\" \n                    check={checkbox}\n                    className=\"my-10\"\n                    rightLabel=\"Checkbox\"\n                    onChange={() => setCheckbox(!checkbox)}/>\n                <Switch \n                    color=\"primary\" \n                    check={stripped}\n                    className=\"my-10\"\n                    rightLabel=\"Stripped\"\n                    onChange={() => setStripped(!stripped)}/>\n                <br/>\n                <Switch \n                    color=\"primary\" \n                    check={title}\n                    className=\"my-10\"\n                    rightLabel=\"Table title\"\n                    onChange={() => setTitle(!title)}/>\n                <Switch \n                    color=\"primary\" \n                    check={footer}\n                    className=\"my-10\"\n                    rightLabel=\"Footer\"\n                    onChange={() => setFooter(!footer)}/>\n                <Switch \n                    color=\"primary\" \n                    check={bordered}\n                    className=\"my-10\"\n                    rightLabel=\"Bordered\"\n                    onChange={() => setBordered(!bordered)}/>\n                <br/>\n                <Switch \n                    color=\"primary\" \n                    check={indexed}\n                    className=\"my-10\"\n                    rightLabel=\"Set index\"\n                    onChange={() => setIndexed(!indexed)}/>\n                <Switch \n                    color=\"primary\" \n                    check={searchable}\n                    className=\"my-10\"\n                    rightLabel=\"Searchable\"\n                    onChange={() => setSearchable(!searchable)}/>\n                <Switch \n                    color=\"primary\" \n                    check={controls}\n                    className=\"my-10\"\n                    rightLabel=\"Controls\"\n                    onChange={() => setControls(!controls)}/>\n                <br/>\n                <Switch \n                    color=\"primary\" \n                    check={hover}\n                    className=\"my-10\"\n                    rightLabel=\"No Hover\"\n                    onChange={() => setHover(!hover)}/>\n                <Switch \n                    color=\"primary\" \n                    check={sortable}\n                    className=\"my-10\"\n                    rightLabel=\"Sortable\"\n                    onChange={() => setSortable(!sortable)}/>\n                <Switch \n                    color=\"primary\" \n                    check={pagination}\n                    className=\"my-10\"\n                    rightLabel=\"Pagination\"\n                    onChange={() => setPagination(!pagination)}/>\n                <br/>\n                <Switch \n                    color=\"primary\" \n                    check={loading}\n                    className=\"my-10\"\n                    rightLabel=\"Loading\"\n                    onChange={() => setLoading(!loading)}/>\n                <br/>\n                <Table\n                    noHover={hover}\n                    pagination={pagination}\n                    paginationPosition=\"right\"\n                    itemsTotal={goods.length}\n                    stripped={stripped}\n                    grid={grid}\n                    index={indexed}\n                    sortable={sortable}\n                    tableTitle={title ? 'Table title' : ''}\n                    alignment={textAlign}\n                    searchable={searchable}\n                    searchKey=\"name\"\n                    selectKey=\"name\"\n                    checkbox={checkbox}\n                    onSelect={(selected) => console.log(selected)}\n                    color={color}\n                    loading={loading}\n                    bordered={bordered}\n                    headers={['Name', 'Price', 'Count']}\n                    items={goods}\n                    footer={footer ? <div>Total count: <strong>{goods.length}</strong></div> : null}\n                    itemTitles={['name', 'price', 'count']}\n                    controls={(item) =>\n                        controls ? \n                        <div className=\"row justify-center align-center\">\n                            <Tooltip tooltip=\"Edit\">\n                                <Button\n                                    small\n                                    color=\"light\"\n                                    className=\"mr-10\"\n                                    icon=\"edit\"\n                                    onClick={() => console.log(item, 'edited')}>\n                                </Button>\n                            </Tooltip>\n                            <Tooltip tooltip=\"Delete\">\n                                <Button\n                                    small\n                                    color=\"light\"\n                                    icon=\"delete\"\n                                    onClick={() => console.log(item, 'deleted')}>\n                                </Button> \n                            </Tooltip>\n                        </div> : null\n                    }\n                    />\n                <Collapse \n                    icon=\"code\" \n                    iconSize={18} \n                    extra={<CopyToClipboard defaultText=\"Copy code\" text={usage} className=\"mr-10\"/>} \n                    tooltip=\"Show/Hide Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usage}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <h2 ref={api}>API</h2>\n            <BackTopBtn size=\"medium\" dark setRef={parent}/>\n            <Table\n                bordered\n                headers={['Property', 'Description', 'Default', 'Type', 'Value']}\n                items={rows}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\nexport default TablePage;"],"sourceRoot":""}