{"version":3,"sources":["pages/DrawerPage.js"],"names":["keys","items","property","description","default","type","value","stack","name","icon","DrawerPage","useState","drawer","setDrawer","drawerMin","setDrawerMin","page","setPage","className","flat","style","minHeight","min","onClose","header","collapsable","headerCentered","onResize","map","index","key","noDivider","render","tooltip","light","onClick","size","item","isActiveItem","hover","title","leftControl","onLeftControl","iconSize","contentStyles","padding","language","prism","bordered","headers","itemTitles"],"mappings":"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","file":"js/13.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Drawer, List, ListItem, Button, Tooltip, Table, Card, Header, Collapse, Icon } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst usage =\n`// Usage examples\nimport React, { useState } from 'react';\nimport { Drawer, List, ListItem, Header, Icon } from '@assenti/react-ui-components';\n\nfunction Example() {\n    const [drawer, setDrawer] = useState(true);\n    const [drawerMin, setDrawerMin] = useState(false);\n    const [page, setPage] = useState(stack[0].name)\n\n    return (\n        <div className=\"app\" style={{ minHeight: 260 }}>\n            <Drawer\n                drawer={drawer}\n                min={drawerMin}\n                onClose={() => setDrawer(false)}\n                header={drawerMin ? <Icon name=\"react\" /> : 'Drawer'}\n                collapsable\n                headerCentered\n                onResize={() => setDrawerMin(!drawerMin)}>\n                {drawerMin ? \n                    <List>\n                        {stack.map(({name, icon}, index) => \n                            <ListItem\n                                key={index}\n                                noDivider\n                                render={\n                                    <Tooltip \n                                        tooltip={name}>\n                                        <Button\n                                            light \n                                            onClick={() => setPage(name)} \n                                            icon={icon}/>\n                                    </Tooltip>\n                                }\n                                />\n                        )}\n                    </List> : \n                    <List size=\"medium\">\n                        {stack.map((item, index) => \n                            <ListItem \n                                key={index}\n                                noDivider\n                                icon={item.icon} \n                                isActiveItem={item.name === page}\n                                onClick={() => setPage(item.name)}   \n                                item={item.name}\n                                hover/>\n                        )}\n                    </List>\n                }\n            </Drawer>\n            <div className=\"page\">\n                <Header \n                    title=\"Header\" \n                    leftControl\n                    onLeftControl={() => setDrawer(!drawer)}/>\n                <div className=\"pa-20 fz-12\">\n                    {page} Page\n                </div>\n            </div>\n        </div>\n    )\n)`\n\nconst keys = ['property', 'description', 'default', 'type', 'value'];\nconst items = [\n    { \n        property: 'drawer', \n        description: 'Drawer visibilty state', \n        default: '', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'collapsable', \n        description: 'Make drawer collapsable', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'min', \n        description: 'Set drawer width to minimum size', \n        default: '', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'onResize', \n        description: 'Handle drawer min prop toggling', \n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'onClose', \n        description: 'Handle drawer state', \n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'fullHeight', \n        description: 'Set drawer height to full screen height', \n        default: '', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'header', \n        description: 'Set drawer header', \n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'headerCentered', \n        description: 'Set drawer header content position to center', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'dark', \n        description: 'Set dark mode', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'absolute', \n        description: 'Set drawer position to absolute', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n]\n\nconst stack = [\n    { name: 'JavaScript', icon: 'code' }, \n    { name: 'TypeScript', icon: 'code' },\n    { name: 'React', icon: 'code' },\n    { name: 'React Router', icon: 'code' },\n    { name: 'React Redux', icon: 'code' }\n]\n\nconst DrawerPage = () => {\n    const [drawer, setDrawer] = useState(true);\n    const [drawerMin, setDrawerMin] = useState(false);\n    const [page, setPage] = useState(stack[0].name)\n\n    return (\n        <div className=\"rui-page\">\n            <div className=\"rui-page-title\">Drawer Component</div>\n            <Card flat className=\"overflow-y pa-0\">\n                <div className=\"rui-app\" style={{ minHeight: 260 }}>\n                    <Drawer\n                        drawer={drawer}\n                        min={drawerMin}\n                        onClose={() => setDrawer(false)}\n                        header={drawerMin ? <Icon name=\"react\" /> : 'Drawer'}\n                        collapsable\n                        headerCentered\n                        onResize={() => setDrawerMin(!drawerMin)}>\n                        {drawerMin ? \n                            <List>\n                                {stack.map(({name, icon}, index) => \n                                    <ListItem\n                                        key={index}\n                                        noDivider\n                                        render={\n                                            <Tooltip \n                                                tooltip={name}>\n                                                <Button\n                                                    light \n                                                    onClick={() => setPage(name)} \n                                                    icon={icon}/>\n                                            </Tooltip>\n                                        }\n                                        />\n                                )}\n                            </List> : \n                            <List size=\"medium\">\n                                {stack.map((item, index) => \n                                    <ListItem \n                                        key={index}\n                                        noDivider\n                                        icon={item.icon} \n                                        isActiveItem={item.name === page}\n                                        onClick={() => setPage(item.name)}   \n                                        item={item.name}\n                                        hover/>\n                                )}\n                            </List>\n                        }\n                    </Drawer>\n                    <div className=\"rui-page\">\n                        <Header \n                            title=\"Header\" \n                            leftControl\n                            onLeftControl={() => setDrawer(!drawer)}/>\n                        <div className=\"pa-20 fz-12\">\n                            {page} Page\n                        </div>\n                    </div>\n                </div>\n                <Collapse \n                    icon=\"code\"\n                    className=\"mx-10\" \n                    iconSize={18}\n                    contentStyles={{ padding: 0 }}\n                    tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usage}\n                    </SyntaxHighlighter> \n                </Collapse>\n            </Card>\n            <h2>API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n\nexport default DrawerPage;\n"],"sourceRoot":""}