(this["webpackJsonp@assenti/rui-components"]=this["webpackJsonp@assenti/rui-components"]||[]).push([[32],{310:function(e,n,t){"use strict";t.r(n);var r=t(1),o=t(0),a=t.n(o),l=t(3),c=t(329),i=t(47),s=t(48),u='// Usage examples\nimport React, { useState } from \'react\';\nimport { InputField, Icon, Select, Switch, Button } from \'@assenti/react-ui-components\';\nconst sizes = [\'default\', \'medium\', \'large\'];\nconst colors = [\'primary\', \'info\', \'success\', \'error\'];\nconst borders = [\'default\', \'rounded\', \'smooth\', \'tile\'];\n\nfunction Example() {\n    const [login, setLogin] = useState(\'\');\n    const [password, setPassword] = useState(\'\');\n    const [second, setSecond] = useState(\'\');\n    const [search, setSearch] = useState(\'\');\n    const [amount, setAmount] = useState(0);\n    const [size, setSize] = useState(sizes[0]);\n    const [color, setColor] = useState(colors[0]);\n    const [border, setBorder] = useState(borders[0]);\n    const [required, setRequired] = useState(false);\n    const [hint, setHint] = useState(false);\n    const [label, setLabel] = useState(false);\n    const [white, setWhite] = useState(false);\n    const [lifted, setLifted] = useState(false);\n    const [uppercase, setUppercase] = useState(false);\n\n    return (\n        <div>\n            <Select\n                items={sizes}\n                prefix={<Icon name="format-size"/>}\n                width={200}\n                label="InputField size"\n                color="primary"\n                className="ml-5"\n                value={size}\n                onChange={v => setSize(v)}/>\n            <br/>\n            <Select\n                items={colors}\n                prefix={<Icon name="brush"/>}\n                width={200}\n                label="InputField color"\n                color="primary"\n                className="ml-5"\n                value={color}\n                onChange={v => setColor(v)}/>\n            <br/>\n            <Select\n                items={borders}\n                prefix={<Icon name="shape"/>}\n                width={200}\n                label="InputField border type"\n                color="primary"\n                className="ml-5"\n                value={border}\n                onChange={v => setBorder(v)}/>\n            <br/>\n            <Switch \n                color="primary" \n                check={required}\n                rightLabel="Required"\n                className="my-10 ml-5"\n                onChange={() => setRequired(!required)}/>\n            <Switch \n                color="primary" \n                check={label}\n                rightLabel="Label"\n                className="my-10 ml-5"\n                onChange={() => setLabel(!label)}/>\n            <br/>\n            <Switch \n                color="primary" \n                check={hint}\n                rightLabel="Hint"\n                className="my-10 ml-5"\n                onChange={() => setHint(!hint)}/>\n            <Switch \n                color="primary" \n                check={white}\n                rightLabel="White background"\n                className="my-10 ml-5"\n                onChange={() => setWhite(!white)}/>\n            <br/>\n            <Switch \n                check={uppercase} \n                color="primary"\n                rightLabel="Uppercase" \n                className="my-10 ml-5"\n                onChange={() => setUppercase(!uppercase)}/>\n            <Switch \n                check={lifted} \n                color="primary"\n                rightLabel="Lifted" \n                className="my-10 ml-5"\n                onChange={() => setLifted(!lifted)}/>\n            <br/>\n            <InputField\n                label={label ? \'Login\' : \'\'}\n                placeholder="Input your login" \n                value={login}\n                autoComplete\n                hint={hint ? \'I am a hint\' : null}\n                borderType={border}\n                name="login"\n                color={color}\n                lifted={lifted}\n                uppercase={uppercase}\n                whiteBackground={white}\n                width={300}\n                required={required}\n                size={size}\n                onChange={e => setLogin(e.target.value)}/>\n            <InputField\n                label={label ? \'Password\' : \'\'}\n                placeholder="Input your password" \n                value={password}\n                borderType={border}\n                type="password"\n                hint={hint ? \'I am a hint\' : null}\n                color={color}\n                required={required}\n                width={300}\n                lifted={lifted}\n                uppercase={uppercase}\n                size={size}\n                whiteBackground={white}\n                onChange={e => setPassword(e.target.value)}/>\n            <InputField\n                label={label ? \'Amount\' : \'\'}\n                placeholder="Input amount" \n                value={amount}\n                type="number"\n                min={0}\n                required={required}\n                lifted={lifted}\n                uppercase={uppercase}\n                borderType={border}\n                hint={hint ? \'I am a hint\' : null}\n                color={color}\n                prefix={<Icon name="tenge"/>}\n                width={300}\n                whiteBackground={white}\n                size={size}\n                onChange={e => setAmount(e.target.value)}/>\n            <InputField\n                label={label ? \'Login\' : \'\'}\n                placeholder="Input your login" \n                value={second}\n                required={required}\n                borderType={border}\n                lifted={lifted}\n                uppercase={uppercase}\n                hint={hint ? \'I am a hint\' : null}\n                clearable\n                whiteBackground={white}\n                autoFocus\n                onClear={() => setSecond(\'\')} \n                prefix={<Icon name="account"/>}\n                color={color}\n                width={300}\n                size={size}\n                onChange={e => setSecond(e.target.value)}/>\n            <InputField\n                placeholder="Search..." \n                value={search}\n                hint={hint ? \'I am a hint\' : null}\n                color={color}\n                width={300}\n                label={label ? \'Search\' : \'\'}\n                size={size}\n                lifted={lifted}\n                uppercase={uppercase}\n                whiteBackground={white}\n                required={required}\n                borderType={border}\n                prefix={<Icon name="search"/>}\n                suffix={\n                    <Button \n                        name="Search" \n                        color="primary"\n                        size={size} \n                        onClick={() => console.log(search)}/>}\n                onEnter={() => console.log(search)}\n                onChange={e => setSearch(e.target.value)}/>\n        </div>\n    )\n}',d=["property","description","default","type","value"],p=[{property:"onChange",description:"Handle input value change (return input change event object)",default:"",type:"function",value:""},{property:"onKeyUp",description:"Invokes on InputField any key pressed (return key change event object)",default:"",type:"function",value:""},{property:"onEnter",description:'Invokes on InputField "Enter" key pressed',default:"",type:"function",value:""},{property:"value",description:"Input value",default:"",type:"string | number",value:""},{property:"autoComplete",description:"Enable input autocomplete",default:"false",type:"boolean",value:"true | false"},{property:"name",description:"Set name prop for get all inputted values for autocomplete",default:"",type:"string",value:""},{property:"clearable",description:"Allow clear icon on value inputted",default:"false",type:"boolean",value:"true | false"},{property:"onClear",description:"Invokes on clear icon click",default:"",type:"function",value:""},{property:"lifted",description:"Lift up the input field",default:"false",type:"boolean",value:"true | false"},{property:"autoFocus",description:"Set input focus on component mounted",default:"false",type:"boolean",value:"true | false"},{property:"color",description:"Set color of input field from list",default:"primary",type:"string",value:"primary | info | success | error"},{property:"disabled",description:"Make input field disabled",default:"false",type:"boolean",value:"true | false"},{property:"borderType",description:"Set borders type",default:"",type:"string",value:"tile | smooth | rounded"},{property:"uppercase",description:"Transform text to upper case",default:"false",type:"boolean",value:"true | false"},{property:"size",description:"Set input field size",default:"",type:"string",value:"medium | large"},{property:"prefix",description:"Set prefix",default:"",type:"string | number | React.Node",value:""},{property:"suffix",description:"Set suffix",default:"",type:"string | number | React.Node",value:""},{property:"width",description:"Set InputField width",default:"",type:"string | number",value:""},{property:"type",description:"Set input type",default:"text",type:"string",value:"text | password | number | email"},{property:"min",description:'Set min number (has effect with type="number")',default:"",type:"number",value:""},{property:"max",description:'Set max number (has effect with type="number")',default:"",type:"number",value:""},{property:"minLength",description:'Set min length for text (has effect with type="text")',default:"",type:"number",value:""},{property:"maxLength",description:'Set max length for text (has effect with type="text")',default:"",type:"number",value:""},{property:"required",description:"Set input required",default:"false",type:"boolean",value:"true | false"},{property:"readOnly",description:"Set input readOnly",default:"false",type:"boolean",value:"true | false"},{property:"whiteBackground",description:"Set input background color to white",default:"false",type:"boolean",value:"true | false"},{property:"className",description:"Set a custom css class to component",default:"",type:"string",value:""}],m=["default","medium","large"],b=["primary","info","success","error"],f=["default","rounded","smooth","tile"];n.default=function(){var e=Object(o.useState)(""),n=Object(r.a)(e,2),t=n[0],g=n[1],h=Object(o.useState)(""),y=Object(r.a)(h,2),S=y[0],w=y[1],k=Object(o.useState)(""),v=Object(r.a)(k,2),x=v[0],z=v[1],I=Object(o.useState)(""),C=Object(r.a)(I,2),E=C[0],O=C[1],T=Object(o.useState)(0),L=Object(r.a)(T,2),j=L[0],B=L[1],M=Object(o.useState)(m[0]),N=Object(r.a)(M,2),F=N[0],H=N[1],q=Object(o.useState)(b[0]),W=Object(r.a)(q,2),A=W[0],R=W[1],U=Object(o.useState)(f[0]),P=Object(r.a)(U,2),D=P[0],K=P[1],J=Object(o.useState)(!1),V=Object(r.a)(J,2),G=V[0],Q=V[1],X=Object(o.useState)(!1),Y=Object(r.a)(X,2),Z=Y[0],$=Y[1],_=Object(o.useState)(!1),ee=Object(r.a)(_,2),ne=ee[0],te=ee[1],re=Object(o.useState)(!1),oe=Object(r.a)(re,2),ae=oe[0],le=oe[1],ce=Object(o.useState)(!1),ie=Object(r.a)(ce,2),se=ie[0],ue=ie[1],de=Object(o.useState)(!1),pe=Object(r.a)(de,2),me=pe[0],be=pe[1],fe=Object(o.useRef)(),ge=Object(o.useRef)();return a.a.createElement(l.P.Consumer,null,(function(e){return a.a.createElement("div",{className:"rui-page",ref:ge},a.a.createElement("div",{className:"row align-center space-between"},a.a.createElement("div",{className:"rui-page-title"},"<InputField/>"," Component"),a.a.createElement("div",{onClick:function(){fe.current&&fe.current.scrollIntoView({behavior:"smooth",block:"center"})},className:"rui-link fz-13 fw-bold mr-10"},"API")),a.a.createElement(l.j,{dark:e,header:a.a.createElement("h4",null,"Usage")},a.a.createElement(l.I,{items:m,dark:e,prefix:a.a.createElement(l.w,{name:"format-size"}),width:200,label:"InputField size",color:"primary",className:"ml-5",value:F,onChange:function(e){return H(e)}}),a.a.createElement("br",null),a.a.createElement(l.I,{items:b,dark:e,prefix:a.a.createElement(l.w,{name:"brush"}),width:200,label:"InputField color",color:"primary",className:"ml-5",value:A,onChange:function(e){return R(e)}}),a.a.createElement("br",null),a.a.createElement(l.I,{items:f,dark:e,prefix:a.a.createElement(l.w,{name:"shape"}),width:200,label:"InputField border type",color:"primary",className:"ml-5",value:D,onChange:function(e){return K(e)}}),a.a.createElement("br",null),a.a.createElement(l.K,{color:"primary",check:G,rightLabel:"Required",className:"my-10 ml-5",onChange:function(){return Q(!G)}}),a.a.createElement(l.K,{color:"primary",check:ne,rightLabel:"Label",className:"my-10 ml-5",onChange:function(){return te(!ne)}}),a.a.createElement("br",null),a.a.createElement(l.K,{color:"primary",check:Z,rightLabel:"Hint",className:"my-10 ml-5",onChange:function(){return $(!Z)}}),a.a.createElement(l.K,{color:"primary",check:ae,rightLabel:"White background",className:"my-10 ml-5",onChange:function(){return le(!ae)}}),a.a.createElement("br",null),a.a.createElement(l.K,{check:me,color:"primary",rightLabel:"Uppercase",className:"my-10 ml-5",onChange:function(){return be(!me)}}),a.a.createElement(l.K,{check:se,color:"primary",rightLabel:"Lifted",className:"my-10 ml-5",onChange:function(){return ue(!se)}}),a.a.createElement(l.o,null),a.a.createElement("br",null),a.a.createElement(l.x,{label:ne?"Login":"",dark:e,placeholder:"Input your login",value:t,autoComplete:!0,hint:Z?"I am a hint":null,borderType:D,name:"login",color:A,lifted:se,uppercase:me,whiteBackground:ae,width:300,required:G,size:F,onChange:function(e){return g(e.target.value)}}),a.a.createElement("br",null),a.a.createElement(l.x,{label:ne?"Password":"",placeholder:"Input your password",value:S,dark:e,borderType:D,type:"password",hint:Z?"I am a hint":null,color:A,required:G,width:300,lifted:se,uppercase:me,size:F,whiteBackground:ae,onChange:function(e){return w(e.target.value)}}),a.a.createElement("br",null),a.a.createElement(l.x,{label:ne?"Amount":"",placeholder:"Input amount",value:j,type:"number",dark:e,min:0,required:G,lifted:se,uppercase:me,borderType:D,hint:Z?"I am a hint":null,color:A,prefix:a.a.createElement(l.w,{name:"tenge"}),width:300,whiteBackground:ae,size:F,onChange:function(e){return B(e.target.value)}}),a.a.createElement("br",null),a.a.createElement(l.x,{label:ne?"Login":"",placeholder:"Input your login",value:x,required:G,borderType:D,lifted:se,dark:e,uppercase:me,hint:Z?"I am a hint":null,clearable:!0,whiteBackground:ae,autoFocus:!0,onClear:function(){return z("")},prefix:a.a.createElement(l.w,{name:"account"}),color:A,width:300,size:F,onChange:function(e){return z(e.target.value)}}),a.a.createElement("br",null),a.a.createElement(l.x,{placeholder:"Search...",value:E,hint:Z?"I am a hint":null,color:A,width:300,label:ne?"Search":"",size:F,lifted:se,uppercase:me,dark:e,whiteBackground:ae,required:G,borderType:D,prefix:a.a.createElement(l.w,{name:"search"}),suffix:a.a.createElement(l.g,{name:"Search",color:"primary",size:F,onClick:function(){return console.log(E)}}),onEnter:function(){return console.log(E)},onChange:function(e){return O(e.target.value)}}),a.a.createElement(l.l,{icon:"code",dark:e,iconSize:18,extra:a.a.createElement(l.m,{dark:e,defaultText:"Copy code",text:u,className:"mr-10"}),tooltip:"Show/Hide Code"},a.a.createElement(c.a,{language:"jsx",style:e?i.a:s.a},u))),a.a.createElement(l.d,{setRef:ge,dark:!0,size:"medium"}),a.a.createElement("h2",{ref:fe},"InputField API"),a.a.createElement(l.L,{bordered:!0,dark:e,headers:["Property","Description","Default","Type","Value"],items:p,index:!0,itemTitles:d}))}))}},47:function(e,n,t){"use strict";n.a={'code[class*="language-"]':{color:"#ccc",background:"none",fontFamily:"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace",textAlign:"left",whiteSpace:"pre",wordSpacing:"normal",wordBreak:"normal",wordWrap:"normal",lineHeight:"1.5",MozTabSize:"4",OTabSize:"4",tabSize:"4",WebkitHyphens:"none",MozHyphens:"none",msHyphens:"none",hyphens:"none"},'pre[class*="language-"]':{color:"#ccc",background:"#2d2d2d",fontFamily:"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace",textAlign:"left",whiteSpace:"pre",wordSpacing:"normal",wordBreak:"normal",wordWrap:"normal",lineHeight:"1.5",MozTabSize:"4",OTabSize:"4",tabSize:"4",WebkitHyphens:"none",MozHyphens:"none",msHyphens:"none",hyphens:"none",padding:"1em",margin:".5em 0",overflow:"auto"},':not(pre) > code[class*="language-"]':{background:"#2d2d2d",padding:".1em",borderRadius:".3em",whiteSpace:"normal"},comment:{color:"#999"},"block-comment":{color:"#999"},prolog:{color:"#999"},doctype:{color:"#999"},cdata:{color:"#999"},punctuation:{color:"#ccc"},tag:{color:"#e2777a"},"attr-name":{color:"#e2777a"},namespace:{color:"#e2777a"},deleted:{color:"#e2777a"},"function-name":{color:"#6196cc"},boolean:{color:"#f08d49"},number:{color:"#f08d49"},function:{color:"#f08d49"},property:{color:"#f8c555"},"class-name":{color:"#f8c555"},constant:{color:"#f8c555"},symbol:{color:"#f8c555"},selector:{color:"#cc99cd"},important:{color:"#cc99cd",fontWeight:"bold"},atrule:{color:"#cc99cd"},keyword:{color:"#cc99cd"},builtin:{color:"#cc99cd"},string:{color:"#7ec699"},char:{color:"#7ec699"},"attr-value":{color:"#7ec699"},regex:{color:"#7ec699"},variable:{color:"#7ec699"},operator:{color:"#67cdcc"},entity:{color:"#67cdcc",cursor:"help"},url:{color:"#67cdcc"},bold:{fontWeight:"bold"},italic:{fontStyle:"italic"},inserted:{color:"green"}}},48:function(e,n,t){"use strict";n.a={'code[class*="language-"]':{color:"black",background:"none",fontFamily:"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace",textAlign:"left",whiteSpace:"pre",wordSpacing:"normal",wordBreak:"normal",wordWrap:"normal",lineHeight:"1.5",MozTabSize:"4",OTabSize:"4",tabSize:"4",WebkitHyphens:"none",MozHyphens:"none",msHyphens:"none",hyphens:"none"},'pre[class*="language-"]':{color:"black",background:"none",fontFamily:"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace",textAlign:"left",whiteSpace:"pre",wordSpacing:"normal",wordBreak:"normal",wordWrap:"normal",lineHeight:"1.5",MozTabSize:"4",OTabSize:"4",tabSize:"4",WebkitHyphens:"none",MozHyphens:"none",msHyphens:"none",hyphens:"none",position:"relative",margin:".5em 0",overflow:"visible",padding:"0",backgroundColor:"#fdfdfd",WebkitBoxSizing:"border-box",MozBoxSizing:"border-box",boxSizing:"border-box",marginBottom:"1em"},'pre[class*="language-"]>code':{position:"relative",borderLeft:"10px solid #358ccb",boxShadow:"-1px 0px 0px 0px #358ccb, 0px 0px 0px 1px #dfdfdf",backgroundColor:"#fdfdfd",backgroundImage:"linear-gradient(transparent 50%, rgba(69, 142, 209, 0.04) 50%)",backgroundSize:"3em 3em",backgroundOrigin:"content-box",backgroundAttachment:"local"},'code[class*="language"]':{maxHeight:"inherit",height:"inherit",padding:"0 1em",display:"block",overflow:"auto"},':not(pre) > code[class*="language-"]':{backgroundColor:"#fdfdfd",WebkitBoxSizing:"border-box",MozBoxSizing:"border-box",boxSizing:"border-box",marginBottom:"1em",position:"relative",padding:".2em",borderRadius:"0.3em",color:"#c92c2c",border:"1px solid rgba(0, 0, 0, 0.1)",display:"inline",whiteSpace:"normal"},'pre[class*="language-"]:before':{content:"''",zIndex:"-2",display:"block",position:"absolute",bottom:"0.75em",left:"0.18em",width:"40%",height:"20%",maxHeight:"13em",boxShadow:"0px 13px 8px #979797",WebkitTransform:"rotate(-2deg)",MozTransform:"rotate(-2deg)",msTransform:"rotate(-2deg)",OTransform:"rotate(-2deg)",transform:"rotate(-2deg)"},'pre[class*="language-"]:after':{content:"''",zIndex:"-2",display:"block",position:"absolute",bottom:"0.75em",left:"auto",width:"40%",height:"20%",maxHeight:"13em",boxShadow:"0px 13px 8px #979797",WebkitTransform:"rotate(2deg)",MozTransform:"rotate(2deg)",msTransform:"rotate(2deg)",OTransform:"rotate(2deg)",transform:"rotate(2deg)",right:"0.75em"},':not(pre) > code[class*="language-"]:after':{right:"0.75em",left:"auto",WebkitTransform:"rotate(2deg)",MozTransform:"rotate(2deg)",msTransform:"rotate(2deg)",OTransform:"rotate(2deg)",transform:"rotate(2deg)"},comment:{color:"#7D8B99"},"block-comment":{color:"#7D8B99"},prolog:{color:"#7D8B99"},doctype:{color:"#7D8B99"},cdata:{color:"#7D8B99"},punctuation:{color:"#5F6364"},property:{color:"#c92c2c"},tag:{color:"#c92c2c"},boolean:{color:"#c92c2c"},number:{color:"#c92c2c"},"function-name":{color:"#c92c2c"},constant:{color:"#c92c2c"},symbol:{color:"#c92c2c"},deleted:{color:"#c92c2c"},selector:{color:"#2f9c0a"},"attr-name":{color:"#2f9c0a"},string:{color:"#2f9c0a"},char:{color:"#2f9c0a"},function:{color:"#2f9c0a"},builtin:{color:"#2f9c0a"},inserted:{color:"#2f9c0a"},operator:{color:"#a67f59",background:"rgba(255, 255, 255, 0.5)"},entity:{color:"#a67f59",background:"rgba(255, 255, 255, 0.5)",cursor:"help"},url:{color:"#a67f59",background:"rgba(255, 255, 255, 0.5)"},variable:{color:"#a67f59",background:"rgba(255, 255, 255, 0.5)"},atrule:{color:"#1990b8"},"attr-value":{color:"#1990b8"},keyword:{color:"#1990b8"},"class-name":{color:"#1990b8"},regex:{color:"#e90"},important:{color:"#e90",fontWeight:"normal"},".language-css .token.string":{color:"#a67f59",background:"rgba(255, 255, 255, 0.5)"},".style .token.string":{color:"#a67f59",background:"rgba(255, 255, 255, 0.5)"},bold:{fontWeight:"bold"},italic:{fontStyle:"italic"},".namespace":{Opacity:".7"},"tab:not(:empty):before":{color:"#e0d7d1"},"cr:before":{color:"#e0d7d1"},"lf:before":{color:"#e0d7d1"},'pre[class*="language-"].line-numbers.line-numbers':{paddingLeft:"0"},'pre[class*="language-"].line-numbers.line-numbers code':{paddingLeft:"3.8em"},'pre[class*="language-"].line-numbers.line-numbers .line-numbers-rows':{left:"0"},'pre[class*="language-"][data-line]':{paddingTop:"0",paddingBottom:"0",paddingLeft:"0"},"pre[data-line] code":{position:"relative",paddingLeft:"4em"},"pre .line-highlight":{marginTop:"0"}}}}]);