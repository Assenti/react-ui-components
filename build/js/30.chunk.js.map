{"version":3,"sources":["pages/TablePage.js"],"names":["items","country","capital","population","keys","rows","property","description","default","type","value","goods","i","push","name","price","Math","ceil","random","count","TablePage","api","createRef","parent","className","ref","onClick","current","scrollIntoView","behavior","block","outlined","title","bordered","stripped","noHover","tableTitle","headers","index","searchable","searchKey","indexSign","footer","itemTitles","icon","iconSize","tooltip","language","style","prism","checkbox","onSelect","selected","console","log","selectKey","controls","item","small","color","pagination","paginationPosition","itemsTotal","length","grid","sortable","size","dark","setRef"],"mappings":"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","file":"js/30.chunk.js","sourcesContent":["import React, { createRef } from 'react';\nimport { Table, Button, Tooltip, Card, BackTopBtn, Collapse, Icon } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst items = [\n    { country: 'Kazakhstan', capital: 'Nur-Sultan', population: 1029556 }, \n    { country: 'Russia', capital: 'Moscow', population: 12476000 }, \n    { country: 'USA', capital: 'Washington, D.C.', population: 711571 }, \n    { country: 'United Kingdom', capital: 'London', population: 8787892 }, \n    { country: 'China', capital: 'Beijing', population: 21542000 },\n    { country: 'Germany', capital: 'Berlin', population: 3748000 }\n];\n\nconst keys = ['property', 'description', 'default', 'type', 'value'];\nconst rows = [\n    { \n        property: 'items', \n        description: 'Pass the items',\n        default: '', \n        type: 'string[] | number[] | object[]',\n        value: ''\n    },\n    { \n        property: 'itemTitles', \n        description: 'Set items keys that should be rendered',\n        default: '', \n        type: 'string[]',\n        value: ''\n    },\n    { \n        property: 'headers', \n        description: 'Set table headers title',\n        default: '', \n        type: 'string[]',\n        value: ''\n    },\n    { \n        property: 'alignment', \n        description: 'Set table data alignment',\n        default: 'left', \n        type: 'string',\n        value: 'left | center | right'\n    },\n    { \n        property: 'tableTitle', \n        description: 'Set table title',\n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'searchable', \n        description: 'Enable table data searching',\n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'searchKey', \n        description: 'Set searching column key',\n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'pagination', \n        description: 'Add pagination to table',\n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'paginationPosition', \n        description: 'Set pagination block position',\n        default: 'left', \n        type: 'string',\n        value: 'left | right'\n    },\n    { \n        property: 'perPageOptions', \n        description: 'Set per page options',\n        default: '[10, 20, 50, 100]', \n        type: 'number[]',\n        value: ''\n    },\n    { \n        property: 'onPerPageSelect', \n        description: 'Invokes on per page selection (return perPage value)', \n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'paginationColor', \n        description: 'Set pagination color',\n        default: 'primary', \n        type: 'string',\n        value: 'primary | info | success | error'\n    },\n    { \n        property: 'itemsTotal', \n        description: 'Required if you use pagination prop',\n        default: '0', \n        type: 'number',\n        value: ''\n    },\n    { \n        property: 'checkbox', \n        description: 'Set checkboxes',\n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'selectKey', \n        description: 'Set select key for activate row selection with checkbox',\n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'onSelect', \n        description: 'Invokes on table row select (has effect with checkbox prop, returns selected rows array)',\n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'sortable', \n        description: 'Set sorting filters on table header (sort asc | desc)',\n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'size', \n        description: 'Set table rows size',\n        default: '', \n        type: 'string',\n        value: 'medium | large'\n    },\n    { \n        property: 'indexSign', \n        description: 'Set order index sign in table header',\n        default: '#', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'stripped',\n        description: 'Highlight every even row in table', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'color',\n        description: 'Set table color set', \n        default: '', \n        type: 'string',\n        value: 'primary | info | success | error'\n    },\n    { \n        property: 'footer',\n        description: 'Set table footer (auto set on checkbox prop)', \n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'className',\n        description: 'Set a custom css class to component', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n]\n\nconst simpleUsage =\n`// Usage examples\nimport React from 'react';\nimport { Table } from '@assenti/rui-components';\n\nfunction Example() {\n    return (\n        <div>\n            <Table\n                bordered\n                stripped\n                noHover\n                tableTitle=\"Capitals population\" \n                headers={['Country', 'Capital', 'Capital population']}\n                items={items}\n                index\n                searchable\n                searchKey=\"capital\"\n                indexSign=\"№\"\n                footer={<div>I am a footer</div>}\n                itemTitles={['country', 'capital', 'population']}/> \n        </div>\n    )\n}`\n\nconst controlsUsage =\n`// Usage examples\nimport React from 'react';\nimport { Table, Button, Tooltip } from '@assenti/rui-components';\n\nfunction Example() {\n    return (\n        <div>\n            <Table\n                bordered\n                checkbox \n                onSelect={(selected) => console.log(selected)}\n                selectKey=\"country\"\n                headers={['Country', 'Capital', 'Capital population']}\n                items={items}\n                itemTitles={['country', 'capital', 'population']}\n                controls={(item) =>\n                    <div className=\"row justify-center align-center\">\n                        <Tooltip tooltip=\"Edit\">\n                            <Button\n                                small\n                                className=\"mr-10\"\n                                color=\"light\"\n                                icon=\"edit\"\n                                onClick={() => console.log(item, 'edited')}>\n                            </Button>\n                        </Tooltip>\n                        <Tooltip tooltip=\"Delete\">\n                            <Button\n                                small\n                                color=\"light\"\n                                icon=\"delete\"\n                                onClick={() => console.log(item, 'deleted')}>\n                            </Button> \n                        </Tooltip>\n                    </div>\n                }/>\n        </div>\n    )\n}`\n\nconst complexUsage =\n`// Usage examples\nimport React from 'react';\nimport { Table } from '@assenti/rui-components';\n\nlet goods = []\nfor (let i = 0; i < 100; i++) {\n    goods.push({\n        name: Product \\${i+1},\n        price: $ \\${Math.ceil(Math.random() * 1000)},\n        count: Math.ceil(Math.random() * 500)\n    })\n}\n\nfunction Example() {\n    return (\n        <div>\n            <Table\n                noHover\n                pagination\n                paginationPosition=\"right\"\n                itemsTotal={goods.length}\n                stripped\n                grid\n                sortable\n                checkbox\n                selectKey=\"name\"\n                onSelect={(selected) => console.log(selected)}\n                color=\"primary\"\n                headers={['Name', 'Price', 'Count']}\n                items={goods}\n                footer={<div>Total count: <strong>{goods.length}</strong></div>}\n                itemTitles={['name', 'price', 'count']}/> \n        </div>\n    )\n}`\n\nlet goods = []\nfor (let i = 0; i < 100; i++) {\n    goods.push({\n        name: `Product ${i+1}`,\n        price: `$ ${Math.ceil(Math.random() * 1000)}`,\n        count: Math.ceil(Math.random() * 500)\n    })\n}\n\nconst TablePage = () => {\n    const api = createRef();\n    const parent = createRef();\n\n    const goToApi = () => {\n        if (api.current) api.current.scrollIntoView({ behavior: 'smooth', block: 'start' })\n    }\n\n    return (\n        <div className=\"rui-page\" ref={parent}>\n            <div className=\"row align-center space-between\">\n                <div className=\"rui-page-title\">Table Component</div>\n                <div onClick={goToApi} className=\"rui-link fz-13 fw-bold\">API</div>\n            </div>\n            <Card outlined title=\"Table with order index, no hover, stripped and footer\">\n                <Table\n                    bordered\n                    stripped\n                    noHover\n                    tableTitle=\"Capitals population\" \n                    headers={['Country', 'Capital', 'Capital population']}\n                    items={items}\n                    index\n                    searchable\n                    searchKey=\"capital\"\n                    indexSign=\"№\"\n                    footer={<div>I am a footer</div>}\n                    itemTitles={['country', 'capital', 'population']}/>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {simpleUsage}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <br/>\n            <Card outlined title=\"Table with checkboxes and controls\">\n                <Table\n                    bordered\n                    checkbox \n                    onSelect={(selected) => console.log(selected)}\n                    selectKey=\"country\"\n                    headers={['Country', 'Capital', 'Capital population']}\n                    items={items}\n                    itemTitles={['country', 'capital', 'population']}\n                    controls={(item) =>\n                        <div className=\"row justify-center align-center\">\n                            <Tooltip tooltip=\"Edit\">\n                                <Button\n                                    small\n                                    className=\"mr-10\"\n                                    color=\"light\"\n                                    icon=\"edit\"\n                                    onClick={() => console.log(item, 'edited')}>\n                                </Button>\n                            </Tooltip>\n                            <Tooltip tooltip=\"Delete\">\n                                <Button\n                                    small\n                                    color=\"light\"\n                                    icon=\"delete\"\n                                    onClick={() => console.log(item, 'deleted')}>\n                                </Button> \n                            </Tooltip>\n                        </div>\n                    }/>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {controlsUsage}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <br/>\n            <Card outlined title=\"Sortable table with pagination, checkbox and grid prop\">\n                <Table\n                    noHover\n                    pagination\n                    paginationPosition=\"right\"\n                    itemsTotal={goods.length}\n                    stripped\n                    grid\n                    sortable\n                    checkbox\n                    selectKey=\"name\"\n                    onSelect={(selected) => console.log(selected)}\n                    color=\"primary\"\n                    headers={['Name', 'Price', 'Count']}\n                    items={goods}\n                    footer={<div>Total count: <strong>{goods.length}</strong></div>}\n                    itemTitles={['name', 'price', 'count']}/>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {complexUsage}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <h2 ref={api}>API</h2>\n            <BackTopBtn size=\"medium\" dark setRef={parent}/>\n            <Table\n                bordered\n                headers={['Property', 'Description', 'Default', 'Type', 'Value']}\n                items={rows}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n\nexport default TablePage;\n"],"sourceRoot":""}