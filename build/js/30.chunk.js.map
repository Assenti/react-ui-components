{"version":3,"sources":["pages/PreloaderPage.js"],"names":["keys","items","property","description","default","type","value","usage","PreloaderPage","useState","loading","setLoading","className","outlined","title","name","color","onClick","setTimeout","icon","extra","defaultText","text","iconSize","tooltip","language","style","prism","visible","bordered","headers","index","itemTitles"],"mappings":"sMAKMA,EAAO,CAAC,WAAY,cAAe,UAAW,OAAQ,SACtDC,EAAQ,CACV,CACIC,SAAU,UACVC,YAAa,2BACbC,QAAS,QACTC,KAAM,UACNC,MAAO,gBAEX,CACIJ,SAAU,YACVC,YAAa,yCACbC,QAAS,kBACTC,KAAM,MACNC,MAAO,IAEX,CACIJ,SAAU,kBACVC,YAAa,iCACbC,QAAS,cACTC,KAAM,SACNC,MAAO,IAEX,CACIJ,SAAU,QACVC,YAAa,uCACbC,QAAS,oBACTC,KAAM,SACNC,MAAO,eAITC,EAAK,mjBA6DIC,UAtCO,WAAO,IAAD,EACMC,oBAAS,GADf,mBACjBC,EADiB,KACRC,EADQ,KAQxB,OACI,yBAAKC,UAAU,YACX,yBAAKA,UAAU,kBAAf,uBACA,kBAAC,IAAD,CAAMC,UAAQ,EAACC,MAAM,mBACjB,iGACA,yBAAKF,UAAU,SACX,kBAAC,IAAD,CAAQG,KAAK,WAAWC,MAAM,UAAUC,QAXpC,WAChBN,GAAW,GACXO,YAAW,kBAAMP,GAAW,KAAQ,SAW5B,kBAAC,IAAD,CACIQ,KAAK,OACLC,MAAO,kBAAC,IAAD,CAAiBC,YAAY,YAAYC,KAAMf,EAAOK,UAAU,UACvEW,SAAU,GACVC,QAAQ,kBACR,kBAAC,IAAD,CAAmBC,SAAS,MAAMC,MAAOC,KACpCpB,KAIb,kBAAC,IAAD,CACIqB,QAASlB,IACb,mCACA,kBAAC,IAAD,CACImB,UAAQ,EACRC,QAAS,CAAC,WAAY,cAAe,UAAW,OAAQ,SACxD7B,MAAOA,EACP8B,OAAO,EACPC,WAAYhC","file":"js/30.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Preloader, Table, Collapse, Card, CopyToClipboard } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst keys = ['property', 'description', 'default', 'type', 'value'];\nconst items = [\n    { \n        property: 'visible', \n        description: 'Preloader visibile state', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'preloader', \n        description: 'Pass your own custom preloader element', \n        default: 'Moving ellipsis', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'backgroundColor', \n        description: 'Set preloader background color', \n        default: 'transparent', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'color', \n        description: 'Set preloader default ellipsis color', \n        default: 'primary (#1678c2)', \n        type: 'string',\n        value: 'hex | rgb '\n    }\n]\n\nconst usage = \n`// Usage examples\nimport React, { useState } from 'react';\nimport { Preloader, Button } from '@assenti/rui-components';\n\nfunction Example() {\n    const [loading, setLoading] = useState(false);\n    \n    const handleClick = () => {\n        setLoading(true)\n        setTimeout(() => setLoading(false), 3000)\n    }\n\n    return (\n        <div>\n            <div className=\"py-10\">\n                <Button name=\"Activate\" color=\"info\" onClick={handleClick}/>\n            </div>\n            <Preloader visible={loading}/>\n        </div>\n    )\n}`\n\nconst PreloaderPage = () => {\n    const [loading, setLoading] = useState(false);\n\n    const handleClick = () => {\n        setLoading(true)\n        setTimeout(() => setLoading(false), 3000)\n    }\n\n    return (\n        <div className=\"rui-page\">\n            <div className=\"rui-page-title\">Preloader Component</div>\n            <Card outlined title=\"Preloader usage\">\n                <p>Launch full page preloader and make all actions on screen disabled</p>\n                <div className=\"py-10\">\n                    <Button name=\"Activate\" color=\"primary\" onClick={handleClick}/>\n                </div>\n                <Collapse \n                    icon=\"code\"\n                    extra={<CopyToClipboard defaultText=\"Copy code\" text={usage} className=\"mr-10\"/>}  \n                    iconSize={18} \n                    tooltip=\"Show/Hide Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usage}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <Preloader\n                visible={loading}/>\n            <h2>API</h2>\n            <Table\n                bordered\n                headers={['Property', 'Description', 'Default', 'Type', 'Value']}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\nexport default PreloaderPage;"],"sourceRoot":""}