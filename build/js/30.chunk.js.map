{"version":3,"sources":["pages/ProgressPage.js"],"names":["keys","items","property","description","default","type","value","colors","sizes","usage","ProgressPage","useState","color","setColor","size","setSize","complete","setComplete","hideState","setHideState","disabled","setDisabled","active","setActive","className","outlined","title","prefix","name","width","label","onChange","v","check","rightLabel","tooltip","icon","onClick","iconColor","circle","iconSize","extra","defaultText","text","language","style","prism","bordered","headers","index","itemTitles"],"mappings":"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","file":"js/30.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Card, Table, Collapse, Progress, Select, Icon, Button, Tooltip, Switch, CopyToClipboard } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst keys = ['property', 'description', 'default', 'type', 'value'];\nconst items = [\n    { \n        property: 'complete', \n        description: 'Set progress completion percent', \n        default: '0', \n        type: 'number',\n        value: '0 - 100'\n    },\n    { \n        property: 'hideState', \n        description: 'Hide progress state', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'circle', \n        description: 'Enable circular progress', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'stroke', \n        description: 'Set circular progress custom stroke width', \n        default: 'Depends on progress size', \n        type: 'number',\n        value: ''\n    },\n    { \n        property: 'radius', \n        description: 'Set circular progress custom radius', \n        default: 'Depends on progress size', \n        type: 'number',\n        value: ''\n    },\n    { \n        property: 'active', \n        description: 'Revive the progress bar', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'disabled', \n        description: 'Disable progress', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'icon', \n        description: 'Set icon on progress state instead', \n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'iconColor', \n        description: 'Set icon color', \n        default: 'Progress color', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'color', \n        description: 'Set progress color', \n        default: 'primary', \n        type: 'string',\n        value: 'primary | info | success | error | dark'\n    },\n    { \n        property: 'size', \n        description: 'Set progress size', \n        default: '', \n        type: 'string',\n        value: 'medium | large'\n    },\n    { \n        property: 'className',\n        description: 'Set a custom css class to component', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n]\nconst colors = ['primary', 'info', 'success', 'error', 'dark'];\nconst sizes = ['default', 'medium', 'large'];\n\nconst usage =\n`// Usage examples\nimport React, { useState } from 'react';\nimport { Progress, Switch, Select, Icon, Button, Tooltip } from '@assenti/rui-components';\nconst colors = ['primary', 'info', 'success', 'error', 'dark'];\nconst sizes = ['default', 'medium', 'large'];\n\nfunction Example() {\n    const [color, setColor] = useState(colors[0]);\n    const [size, setSize] = useState(sizes[0]);\n    const [complete, setComplete] = useState(20);\n    const [hideState, setHideState] = useState(false);\n    const [disabled, setDisabled] = useState(false);\n    const [active, setActive] = useState(false);\n\n    return (\n        <div>\n            <Select\n                items={colors}\n                prefix={<Icon name=\"brush\"/>}\n                width={200}\n                label=\"Radio button color\"\n                color=\"primary\"\n                value={color}\n                onChange={v => setColor(v)}/>\n            <br/>\n            <Select\n                items={sizes}\n                prefix={<Icon name=\"format-size\"/>}\n                width={200}\n                label=\"Radio button size\"\n                color=\"primary\"\n                value={size}\n                onChange={v => setSize(v)}/>\n            <br/>\n            <Switch\n                check={hideState}\n                rightLabel=\"Hide state\"\n                color=\"primary\"\n                className=\"my-10\"\n                onChange={() => setHideState(!hideState)}/>\n            <Switch\n                check={disabled}\n                rightLabel=\"Disabled\"\n                color=\"primary\"\n                className=\"my-10\"\n                onChange={() => setDisabled(!disabled)}/>\n            <Switch\n                check={active}\n                rightLabel=\"Active\"\n                color=\"primary\"\n                className=\"my-10\"\n                onChange={() => setActive(!active)}/>\n            <br/>\n            <div className=\"row align-center my-10\">\n                <Tooltip \n                    tooltip=\"Reduce progress\" \n                    color=\"error\"\n                    className=\"mr-20\">\n                    <Button \n                        icon=\"minus\" \n                        color=\"error\"\n                        disabled={complete === 0}\n                        onClick={() => {\n                            if (complete > 0) setComplete(complete - 10)\n                        }}/>\n                </Tooltip>\n                <Progress\n                    color={color}\n                    size={size}\n                    active={active}\n                    icon={complete === 100 ? 'check-circle' : null}\n                    iconColor=\"#1aaa55\" \n                    hideState={hideState}\n                    disabled={disabled}\n                    complete={complete}/>\n                <Tooltip \n                    tooltip=\"Add progress\" \n                    color=\"primary\"\n                    className=\"ml-20\">\n                    <Button \n                        icon=\"plus\" \n                        color=\"primary\"\n                        disabled={complete === 100}\n                        onClick={() => {\n                            if (complete < 100) setComplete(complete + 10)\n                        }}/>\n                </Tooltip>\n            </div>\n            <Progress\n                circle\n                className=\"my-10\"\n                color={color}\n                size={size}\n                active={active}\n                icon={complete === 100 ? 'check-circle' : null}\n                iconColor=\"#1aaa55\"\n                hideState={hideState}\n                disabled={disabled}\n                complete={complete}/>\n        </div>\n    )\n}`\n\nconst ProgressPage = () => {\n    const [color, setColor] = useState(colors[0]);\n    const [size, setSize] = useState(sizes[0]);\n    const [complete, setComplete] = useState(20);\n    const [hideState, setHideState] = useState(false);\n    const [disabled, setDisabled] = useState(false);\n    const [active, setActive] = useState(false);\n\n    return (\n        <div className=\"rui-page\">\n            <div className=\"rui-page-title\">Progress Component</div>\n            <Card outlined title=\"Progress usage\">\n                <Select\n                    items={colors}\n                    prefix={<Icon name=\"brush\"/>}\n                    width={200}\n                    label=\"Radio button color\"\n                    color=\"primary\"\n                    value={color}\n                    onChange={v => setColor(v)}/>\n                <br/>\n                <Select\n                    items={sizes}\n                    prefix={<Icon name=\"format-size\"/>}\n                    width={200}\n                    label=\"Radio button size\"\n                    color=\"primary\"\n                    value={size}\n                    onChange={v => setSize(v)}/>\n                <br/>\n                <Switch\n                    check={hideState}\n                    rightLabel=\"Hide state\"\n                    color=\"primary\"\n                    className=\"my-10\"\n                    onChange={() => setHideState(!hideState)}/>\n                <Switch\n                    check={disabled}\n                    rightLabel=\"Disabled\"\n                    color=\"primary\"\n                    className=\"my-10\"\n                    onChange={() => setDisabled(!disabled)}/>\n                <Switch\n                    check={active}\n                    rightLabel=\"Active\"\n                    color=\"primary\"\n                    className=\"my-10\"\n                    onChange={() => setActive(!active)}/>\n                <br/>\n                <div className=\"row align-center my-10\">\n                    <Tooltip \n                        tooltip=\"Reduce progress\" \n                        color=\"error\"\n                        className=\"mr-20\">\n                        <Button \n                            icon=\"minus\" \n                            color=\"error\"\n                            disabled={complete === 0}\n                            onClick={() => {\n                                if (complete > 0) setComplete(complete - 10)\n                            }}/>\n                    </Tooltip>\n                    <Progress\n                        color={color}\n                        size={size}\n                        active={active}\n                        icon={complete === 100 ? 'check-circle' : null}\n                        iconColor=\"#1aaa55\" \n                        hideState={hideState}\n                        disabled={disabled}\n                        complete={complete}/>\n                    <Tooltip \n                        tooltip=\"Add progress\" \n                        color=\"primary\"\n                        className=\"ml-20\">\n                        <Button \n                            icon=\"plus\" \n                            color=\"primary\"\n                            disabled={complete === 100}\n                            onClick={() => {\n                                if (complete < 100) setComplete(complete + 10)\n                            }}/>\n                    </Tooltip>\n                </div>\n                <Progress\n                    circle\n                    className=\"my-10\"\n                    color={color}\n                    size={size}\n                    active={active}\n                    icon={complete === 100 ? 'check-circle' : null}\n                    iconColor=\"#1aaa55\"\n                    hideState={hideState}\n                    disabled={disabled}\n                    complete={complete}/>\n                <Collapse \n                    icon=\"code\" \n                    iconSize={18} \n                    extra={<CopyToClipboard defaultText=\"Copy code\" text={usage} className=\"mr-10\"/>} \n                    tooltip=\"Show/Hide Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usage}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <h2>API</h2>\n            <Table\n                bordered\n                headers={['Property', 'Description', 'Default', 'Type', 'Value']}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\nexport default ProgressPage;"],"sourceRoot":""}