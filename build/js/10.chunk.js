(this["webpackJsonp@assenti/rui-components"]=this["webpackJsonp@assenti/rui-components"]||[]).push([[10],{290:function(e,t,o){"use strict";o.r(t);var n=o(1),r=o(0),a=o.n(r),l=o(3),i=o(329),c=o(47),s=o(48),u=o(51),d=["property","description","default","type","value"],p=[{property:"items",description:"Select options",default:"",type:"string[] | object[]",value:""},{property:"itemKey",description:"Set if you pass items as array of objects",default:"",type:"string",value:""},{property:"childrenKey",description:"Set if you pass items with children array (pass the key of item that has children array)",default:"",type:"string",value:""},{property:"onChange",description:"Invokes in select option select (return item value)",default:"",type:"function",value:""},{property:"searchable",description:"Enable searching field in select menu (has effect only with one level list)",default:"false",type:"boolean",value:"true | false"},{property:"returnObject",description:"Returns item object on select change (used when items passed as array of objects, works only with one level items)",default:"false",type:"boolean",value:"true | false"},{property:"size",description:"Set select size",default:"",type:"string",value:"medium | large"},{property:"width",description:"Set select width",default:"",type:"string | number",value:""},{property:"maxHeight",description:"Set select list max height",default:"",type:"string | number",value:""},{property:"label",description:"Set select label",default:"",type:"string",value:""},{property:"placeholder",description:"Set placeholder",default:"",type:"string",value:""},{property:"color",description:"Set select color",default:"",type:"string",value:"primary | info | success | error"},{property:"borderType",description:"Set borders type",default:"",type:"string",value:"tile | smooth | rounded"},{property:"multiple",description:"Enable multiple selection (Warning: if multiple prop set, childrenKey has no effect)",default:"false",type:"boolean",value:"true | false"},{property:"onSelect",description:"Invokes on multiple selection (return selected value & selected list)",default:"",type:"function",value:""},{property:"tagColor",description:"Set Tag color (Has effect only with multiple prop)",default:"",type:"string",value:"primary | info | success | error | black"},{property:"tagOutlined",description:"Set Tag outlined prop",default:"",type:"boolean",value:"true | false"},{property:"prefix",description:"Set prefix",default:"",type:"any",value:""},{property:"whiteBackground",description:"Set input background color to white",default:"false",type:"boolean",value:"true | false"},{property:"className",description:"Set a custom css class to component",default:"",type:"string",value:""}],m="// Usage examples\nimport React, { useState } from 'react';\nimport { Select, Icon, Switch } from '@assenti/react-ui-components';\nconst colors = ['primary', 'info', 'success', 'error'];\nconst sizes = ['default', 'medium', 'large'];\nconst borders = ['default', 'tile', 'rounded', 'smooth'];\n\nconst countries = [\n    { country: 'Kazakhstan', cities: [ 'Nur-Sultan', 'Almaty', 'Shymkent' ] }, \n    { country: 'Russia', cities: ['Moscow', 'St. Petersburg', 'Krasnodar'] }, \n    { country: 'USA', cities: ['Washington, D.C.', 'New York City', 'San Francisco'] }, \n    { country: 'United Kingdom', cities: ['London', 'York', 'Manchester'] }, \n    { country: 'Canada', cities: ['Ottawa', 'Toronto', 'Vancouver'] }, \n    { country: 'Germany', cities: ['Berlin', 'Munich', 'Hamburg'] }, \n    { country: 'France', cities: ['Paris', 'Nice', 'Marselle'] }, \n    { country: 'China', cities: ['Beijing', 'Shanghai', 'Shenzhen'] },\n    { country: 'Japan', cities: ['Tokyo', 'Osaka', 'Kyoto'] },\n    { country: 'South Korea', cities: ['Seoul', 'Busan', 'Daegu'] }\n]\nfunction Example() {\n    const [city, setCity] = useState('');\n    const [country, setCountry] = useState('');\n    const [color, setColor] = useState(colors[0]);\n    const [size, setSize] = useState(sizes[0]);\n    const [border, setBorder] = useState(borders[0]);\n    const [disabled, setDisabled] = useState(false);\n    const [maxHeight, setMaxHeight] = useState(false);\n\n    return (\n        <>\n            <Select\n                items={colors}\n                prefix={<Icon name=\"brush\"/>}\n                width={200}\n                label=\"Color\"\n                color=\"primary\"\n                className=\"my-5\"\n                value={color}\n                onChange={v => setColor(v)}/>\n            <br/>\n            <Select\n                items={sizes}\n                prefix={<Icon name=\"format-size\"/>}\n                width={200}\n                label=\"Size\"\n                color=\"primary\"\n                className=\"my-5\"\n                value={size}\n                onChange={v => setSize(v)}/>\n            <br/>\n            <Select\n                items={borders}\n                prefix={<Icon name=\"shape\"/>}\n                width={200}\n                label=\"Border type\"\n                color=\"primary\"\n                className=\"my-5\"\n                value={border}\n                onChange={v => setBorder(v)}/>\n            <br/>\n            <Switch \n                check={maxHeight} \n                color=\"primary\"\n                rightLabel=\"Set max height\" \n                className=\"my-10\"\n                onChange={() => setMaxHeight(!maxHeight)}/>\n            <Switch \n                check={disabled} \n                color=\"primary\"\n                rightLabel=\"Disabled\" \n                className=\"my-10\"\n                onChange={() => setDisabled(!disabled)}/>\n            <br/>\n            <Select\n                items={countries}\n                prefix={<Icon name=\"earth\"/>}\n                itemKey=\"country\"\n                label=\"One level items select\"\n                width={250}\n                maxHeight={maxHeight ? 200 : null}\n                disabled={disabled}\n                size={size}\n                borderType={border}\n                clearable\n                onClear={() => setCountry('')}\n                color={color}\n                placeholder=\"Countries\"\n                value={country}\n                onChange={value => setCountry(value)}/>\n            <br/>\n            <Select\n                prefix={<Icon name=\"earth\"/>}\n                label=\"Two level items select\"\n                items={countries}\n                itemKey=\"country\"\n                childrenKey=\"cities\"\n                color={color}\n                borderType={border}\n                width={250}\n                size={size}\n                placeholder=\"Cities\"\n                value={city}\n                onChange={value => {\n                    setCity(value)\n                    console.log(value)\n                }}/>\n            <br/>\n            <Select\n                prefix={<Icon name=\"earth\"/>}\n                label=\"One level items searchable select\"\n                items={countries}\n                itemKey=\"country\"\n                color={color}\n                maxHeight={maxHeight ? 200 : null}\n                width={250}\n                borderType={border}\n                searchable\n                size={size}\n                placeholder=\"Countries\"\n                value={country}\n                onChange={value => setCountry(value)}/>\n            <br/>\n            <Select\n                prefix={<Icon name=\"earth\"/>}\n                label=\"One level items with multiple select\"\n                items={countries}\n                itemKey=\"country\"\n                color={color}\n                maxHeight={maxHeight ? 200 : null}\n                width={250}\n                multiple\n                size={size}\n                borderType={border}\n                placeholder=\"Countries\"\n                value={city}\n                tagOutlined\n                onSelect={(selectedItem, selectedItems) => \n                    console.log(selectedItem, selectedItems)}\n                onChange={value => setCity(value)}/>\n        </>\n    )\n}",g=["primary","info","success","error"],b=["default","medium","large"],h=["default","tile","rounded","smooth"];t.default=function(){var e=Object(r.useState)(""),t=Object(n.a)(e,2),o=t[0],y=t[1],f=Object(r.useState)(""),S=Object(n.a)(f,2),k=S[0],w=S[1],v=Object(r.useState)(g[0]),x=Object(n.a)(v,2),z=x[0],C=x[1],T=Object(r.useState)(b[0]),E=Object(n.a)(T,2),O=E[0],H=E[1],M=Object(r.useState)(h[0]),K=Object(n.a)(M,2),B=K[0],I=K[1],j=Object(r.useState)(!1),N=Object(n.a)(j,2),W=N[0],A=N[1],D=Object(r.useState)(!1),L=Object(n.a)(D,2),U=L[0],F=L[1],R=Object(r.useRef)(),P=Object(r.useRef)();return a.a.createElement(l.P.Consumer,null,(function(e){return a.a.createElement("div",{className:"rui-page",ref:R},a.a.createElement("div",{className:"row align-center space-between"},a.a.createElement("div",{className:"rui-page-title"},"<Select/>"," Component"),a.a.createElement("div",{className:"rui-link fz-13 fw-bold mr-10",onClick:function(){P.current&&P.current.scrollIntoView({behavior:"smooth",block:"center"})}},"API")),a.a.createElement(l.j,{dark:e,header:a.a.createElement("h4",null,"Usage")},a.a.createElement(l.I,{items:g,dark:e,prefix:a.a.createElement(l.w,{name:"brush"}),width:200,label:"Color",color:"primary",className:"my-5",value:z,onChange:function(e){return C(e)}}),a.a.createElement("br",null),a.a.createElement(l.I,{items:b,dark:e,prefix:a.a.createElement(l.w,{name:"format-size"}),width:200,label:"Size",color:"primary",className:"my-5",value:O,onChange:function(e){return H(e)}}),a.a.createElement("br",null),a.a.createElement(l.I,{items:h,dark:e,prefix:a.a.createElement(l.w,{name:"shape"}),width:200,label:"Border type",color:"primary",className:"my-5",value:B,onChange:function(e){return I(e)}}),a.a.createElement("br",null),a.a.createElement(l.K,{check:U,color:"primary",rightLabel:"Set max height",className:"my-10",onChange:function(){return F(!U)}}),a.a.createElement(l.K,{check:W,color:"primary",rightLabel:"Disabled",className:"my-10",onChange:function(){return A(!W)}}),a.a.createElement(l.o,null),a.a.createElement(l.I,{items:u.a,prefix:a.a.createElement(l.w,{name:"earth"}),itemKey:"country",label:"One level items select",width:250,dark:e,maxHeight:U?200:null,disabled:W,size:O,borderType:B,clearable:!0,onClear:function(){return w("")},color:z,placeholder:"Countries",value:k,onChange:function(e){return w(e)}}),a.a.createElement("br",null),a.a.createElement(l.I,{prefix:a.a.createElement(l.w,{name:"earth"}),label:"Two level items select",items:u.a,itemKey:"country",childrenKey:"cities",color:z,dark:e,borderType:B,width:250,size:O,placeholder:"Cities",value:o,onChange:function(e){y(e),console.log(e)}}),a.a.createElement("br",null),a.a.createElement(l.I,{prefix:a.a.createElement(l.w,{name:"earth"}),label:"One level items searchable select",items:u.a,itemKey:"country",color:z,dark:e,maxHeight:U?200:null,width:250,borderType:B,searchable:!0,size:O,placeholder:"Countries",value:k,onChange:function(e){return w(e)}}),a.a.createElement("br",null),a.a.createElement(l.I,{prefix:a.a.createElement(l.w,{name:"earth"}),label:"One level items with multiple select",items:u.a,itemKey:"country",color:z,dark:e,maxHeight:U?200:null,width:250,multiple:!0,size:O,borderType:B,placeholder:"Countries",value:o,tagOutlined:!0,onSelect:function(e,t){return console.log(e,t)},onChange:function(e){return y(e)}}),a.a.createElement(l.l,{icon:"code",iconSize:18,dark:e,extra:a.a.createElement(l.m,{defaultText:"Copy code",text:m,dark:e,className:"mr-10"}),contentStyles:{padding:0},tooltip:"Code"},a.a.createElement(i.a,{language:"jsx",style:e?c.a:s.a},m))),a.a.createElement(l.d,{setRef:R,dark:!0,size:"medium"}),a.a.createElement("h2",{ref:P},"API"),a.a.createElement(l.L,{bordered:!0,dark:e,headers:["Property","Description","Default","Type","Value"],items:p,index:!0,itemTitles:d}))}))}},47:function(e,t,o){"use strict";t.a={'code[class*="language-"]':{color:"#ccc",background:"none",fontFamily:"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace",textAlign:"left",whiteSpace:"pre",wordSpacing:"normal",wordBreak:"normal",wordWrap:"normal",lineHeight:"1.5",MozTabSize:"4",OTabSize:"4",tabSize:"4",WebkitHyphens:"none",MozHyphens:"none",msHyphens:"none",hyphens:"none"},'pre[class*="language-"]':{color:"#ccc",background:"#2d2d2d",fontFamily:"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace",textAlign:"left",whiteSpace:"pre",wordSpacing:"normal",wordBreak:"normal",wordWrap:"normal",lineHeight:"1.5",MozTabSize:"4",OTabSize:"4",tabSize:"4",WebkitHyphens:"none",MozHyphens:"none",msHyphens:"none",hyphens:"none",padding:"1em",margin:".5em 0",overflow:"auto"},':not(pre) > code[class*="language-"]':{background:"#2d2d2d",padding:".1em",borderRadius:".3em",whiteSpace:"normal"},comment:{color:"#999"},"block-comment":{color:"#999"},prolog:{color:"#999"},doctype:{color:"#999"},cdata:{color:"#999"},punctuation:{color:"#ccc"},tag:{color:"#e2777a"},"attr-name":{color:"#e2777a"},namespace:{color:"#e2777a"},deleted:{color:"#e2777a"},"function-name":{color:"#6196cc"},boolean:{color:"#f08d49"},number:{color:"#f08d49"},function:{color:"#f08d49"},property:{color:"#f8c555"},"class-name":{color:"#f8c555"},constant:{color:"#f8c555"},symbol:{color:"#f8c555"},selector:{color:"#cc99cd"},important:{color:"#cc99cd",fontWeight:"bold"},atrule:{color:"#cc99cd"},keyword:{color:"#cc99cd"},builtin:{color:"#cc99cd"},string:{color:"#7ec699"},char:{color:"#7ec699"},"attr-value":{color:"#7ec699"},regex:{color:"#7ec699"},variable:{color:"#7ec699"},operator:{color:"#67cdcc"},entity:{color:"#67cdcc",cursor:"help"},url:{color:"#67cdcc"},bold:{fontWeight:"bold"},italic:{fontStyle:"italic"},inserted:{color:"green"}}},48:function(e,t,o){"use strict";t.a={'code[class*="language-"]':{color:"black",background:"none",fontFamily:"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace",textAlign:"left",whiteSpace:"pre",wordSpacing:"normal",wordBreak:"normal",wordWrap:"normal",lineHeight:"1.5",MozTabSize:"4",OTabSize:"4",tabSize:"4",WebkitHyphens:"none",MozHyphens:"none",msHyphens:"none",hyphens:"none"},'pre[class*="language-"]':{color:"black",background:"none",fontFamily:"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace",textAlign:"left",whiteSpace:"pre",wordSpacing:"normal",wordBreak:"normal",wordWrap:"normal",lineHeight:"1.5",MozTabSize:"4",OTabSize:"4",tabSize:"4",WebkitHyphens:"none",MozHyphens:"none",msHyphens:"none",hyphens:"none",position:"relative",margin:".5em 0",overflow:"visible",padding:"0",backgroundColor:"#fdfdfd",WebkitBoxSizing:"border-box",MozBoxSizing:"border-box",boxSizing:"border-box",marginBottom:"1em"},'pre[class*="language-"]>code':{position:"relative",borderLeft:"10px solid #358ccb",boxShadow:"-1px 0px 0px 0px #358ccb, 0px 0px 0px 1px #dfdfdf",backgroundColor:"#fdfdfd",backgroundImage:"linear-gradient(transparent 50%, rgba(69, 142, 209, 0.04) 50%)",backgroundSize:"3em 3em",backgroundOrigin:"content-box",backgroundAttachment:"local"},'code[class*="language"]':{maxHeight:"inherit",height:"inherit",padding:"0 1em",display:"block",overflow:"auto"},':not(pre) > code[class*="language-"]':{backgroundColor:"#fdfdfd",WebkitBoxSizing:"border-box",MozBoxSizing:"border-box",boxSizing:"border-box",marginBottom:"1em",position:"relative",padding:".2em",borderRadius:"0.3em",color:"#c92c2c",border:"1px solid rgba(0, 0, 0, 0.1)",display:"inline",whiteSpace:"normal"},'pre[class*="language-"]:before':{content:"''",zIndex:"-2",display:"block",position:"absolute",bottom:"0.75em",left:"0.18em",width:"40%",height:"20%",maxHeight:"13em",boxShadow:"0px 13px 8px #979797",WebkitTransform:"rotate(-2deg)",MozTransform:"rotate(-2deg)",msTransform:"rotate(-2deg)",OTransform:"rotate(-2deg)",transform:"rotate(-2deg)"},'pre[class*="language-"]:after':{content:"''",zIndex:"-2",display:"block",position:"absolute",bottom:"0.75em",left:"auto",width:"40%",height:"20%",maxHeight:"13em",boxShadow:"0px 13px 8px #979797",WebkitTransform:"rotate(2deg)",MozTransform:"rotate(2deg)",msTransform:"rotate(2deg)",OTransform:"rotate(2deg)",transform:"rotate(2deg)",right:"0.75em"},':not(pre) > code[class*="language-"]:after':{right:"0.75em",left:"auto",WebkitTransform:"rotate(2deg)",MozTransform:"rotate(2deg)",msTransform:"rotate(2deg)",OTransform:"rotate(2deg)",transform:"rotate(2deg)"},comment:{color:"#7D8B99"},"block-comment":{color:"#7D8B99"},prolog:{color:"#7D8B99"},doctype:{color:"#7D8B99"},cdata:{color:"#7D8B99"},punctuation:{color:"#5F6364"},property:{color:"#c92c2c"},tag:{color:"#c92c2c"},boolean:{color:"#c92c2c"},number:{color:"#c92c2c"},"function-name":{color:"#c92c2c"},constant:{color:"#c92c2c"},symbol:{color:"#c92c2c"},deleted:{color:"#c92c2c"},selector:{color:"#2f9c0a"},"attr-name":{color:"#2f9c0a"},string:{color:"#2f9c0a"},char:{color:"#2f9c0a"},function:{color:"#2f9c0a"},builtin:{color:"#2f9c0a"},inserted:{color:"#2f9c0a"},operator:{color:"#a67f59",background:"rgba(255, 255, 255, 0.5)"},entity:{color:"#a67f59",background:"rgba(255, 255, 255, 0.5)",cursor:"help"},url:{color:"#a67f59",background:"rgba(255, 255, 255, 0.5)"},variable:{color:"#a67f59",background:"rgba(255, 255, 255, 0.5)"},atrule:{color:"#1990b8"},"attr-value":{color:"#1990b8"},keyword:{color:"#1990b8"},"class-name":{color:"#1990b8"},regex:{color:"#e90"},important:{color:"#e90",fontWeight:"normal"},".language-css .token.string":{color:"#a67f59",background:"rgba(255, 255, 255, 0.5)"},".style .token.string":{color:"#a67f59",background:"rgba(255, 255, 255, 0.5)"},bold:{fontWeight:"bold"},italic:{fontStyle:"italic"},".namespace":{Opacity:".7"},"tab:not(:empty):before":{color:"#e0d7d1"},"cr:before":{color:"#e0d7d1"},"lf:before":{color:"#e0d7d1"},'pre[class*="language-"].line-numbers.line-numbers':{paddingLeft:"0"},'pre[class*="language-"].line-numbers.line-numbers code':{paddingLeft:"3.8em"},'pre[class*="language-"].line-numbers.line-numbers .line-numbers-rows':{left:"0"},'pre[class*="language-"][data-line]':{paddingTop:"0",paddingBottom:"0",paddingLeft:"0"},"pre[data-line] code":{position:"relative",paddingLeft:"4em"},"pre .line-highlight":{marginTop:"0"}}},51:function(e,t,o){"use strict";o.d(t,"a",(function(){return n}));var n=[{country:"Kazakhstan",cities:["Nur-Sultan","Almaty","Shymkent"],icon:"flag",url:"https://en.wikipedia.org/wiki/Kazakhstan"},{country:"Russia",cities:["Moscow","St. Petersburg","Krasnodar"],icon:"flag",url:"https://en.wikipedia.org/wiki/Russia"},{country:"USA",cities:["Washington, D.C.","New York City","San Francisco"],icon:"flag",url:"https://en.wikipedia.org/wiki/United_States"},{country:"United Kingdom",cities:["London","York","Manchester"],icon:"flag",url:"https://en.wikipedia.org/wiki/United_Kingdom"},{country:"Canada",cities:["Ottawa","Toronto","Vancouver"],icon:"flag",url:"https://en.wikipedia.org/wiki/Canada"},{country:"Germany",cities:["Berlin","Munich","Hamburg"],icon:"flag",url:"https://en.wikipedia.org/wiki/Germany"},{country:"France",cities:["Paris","Nice","Marselle"],icon:"flag",url:"https://en.wikipedia.org/wiki/France"},{country:"China",cities:["Beijing","Shanghai","Shenzhen"],icon:"flag",url:"https://en.wikipedia.org/wiki/China"},{country:"Japan",cities:["Tokyo","Osaka","Kyoto"],icon:"flag",url:"https://en.wikipedia.org/wiki/Japan"},{country:"South Korea",cities:["Seoul","Busan","Daegu"],icon:"flag",url:"https://en.wikipedia.org/wiki/South_Korea"}]}}]);