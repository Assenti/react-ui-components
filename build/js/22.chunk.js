(this["webpackJsonp@assenti/rui-components"]=this["webpackJsonp@assenti/rui-components"]||[]).push([[22],{273:function(e,t,n){"use strict";n.r(t);var a=n(7),i=n(1),r=n(0),o=n.n(r),c=n(3),l=n(302),s=n(268),m=[{name:"John Doe",hero:"Captain America",active:!1},{name:"Peter Parker",hero:"Spider man",active:!0},{name:"Tony Stark",hero:"Iron man",active:!1},{name:"Bruce Benner",hero:"Hulk",active:!1}],u=[{name:"Steve Rogers",hero:"Captain America",icon:"shield-account",check:!1},{name:"Peter Parker",hero:"Spider man",icon:"shield-account",check:!1},{name:"Tony Stark",hero:"Iron man",icon:"shield-account",check:!1},{name:"Bruce Benner",hero:"Hulk",icon:"shield-account",check:!1}],p=["property","description","default","type","value"],d=[{property:"header",description:"Set list header",default:"",type:"any",value:""},{property:"size",description:"Set list item size",default:"",type:"string",value:"medium | large"},{property:"dark",description:"Set dark mode (can not be used with light prop)",default:"false",type:"boolean",value:"true | false"},{property:"className",description:"Set a custom css class to component",default:"",type:"string",value:""}],h=[{property:"render",description:"You can pass your own custom element",default:"",type:"any",value:""},{property:"onClick",description:"Invokes on item click",default:"",type:"function",value:""},{property:"item",description:"Set list item",default:"",type:"string",value:""},{property:"subTitle",description:"Set subtitle in list item (It can be just text or Tag and etc.)",default:"",type:"any",value:""},{property:"tooltip",description:"Set tooltip",default:"",type:"string",value:""},{property:"tooltipPosition",description:"Set tooltip position",default:"top",type:"string",value:"left | right | bottom"},{property:"isActiveItem",description:"Set active list item",default:"false",type:"boolean",value:"true | false"},{property:"roundedActive",description:"Set hover and active list item rounded",default:"false",type:"boolean",value:"true | false"},{property:"leftBorder",description:"Set left border highlighting on active item",default:"false",type:"boolean",value:"true | false"},{property:"checkbox",description:"A placeholder for checkbox (Expect a checkbox element or Component)",default:"",type:"any",value:""},{property:"icon",description:"Set icon before the text in list item",default:"",type:"string",value:"home | search | etc. (see icon names list in docs)"},{property:"controls",description:"A placeholder for item controls like buttons or etc.",default:"",type:"any",value:""},{property:"noDivider",description:"Remove the divider line between items",default:"false",type:"boolean",value:"true | false"},{property:"hover",description:"Highlight hovered list item",default:"false",type:"boolean",value:"true | false"},{property:"className",description:"Set a custom css class to component",default:"",type:"string",value:""}];t.default=function(){var e=Object(r.useState)(u),t=Object(i.a)(e,1)[0],n=Object(r.useState)([]),f=Object(i.a)(n,2),v=f[0],y=f[1],k=Object(r.createRef)(),g=Object(r.createRef)(),b=Object(r.createRef)(),E=function(e){var t=!1,n=!0,a=!1,i=void 0;try{for(var r,o=v[Symbol.iterator]();!(n=(r=o.next()).done);n=!0){e===r.value&&(t=!0)}}catch(c){a=!0,i=c}finally{try{n||null==o.return||o.return()}finally{if(a)throw i}}return t};return o.a.createElement("div",{className:"rui-page",ref:b},o.a.createElement("div",{className:"row align-center space-between"},o.a.createElement("div",{className:"rui-page-title"},"List, ListItem Components"),o.a.createElement("div",{className:"row"},o.a.createElement("div",{className:"rui-link fz-13 fw-bold mr-10",onClick:function(){k.current&&k.current.scrollIntoView({behavior:"smooth",block:"start"})}},"List API"),o.a.createElement("div",{className:"rui-link fz-13 fw-bold",onClick:function(){g.current&&g.current.scrollIntoView({behavior:"smooth",block:"start"})}},"ListItem API"))),o.a.createElement(c.e,{outlined:!0,className:"px-0",title:"Simple list with active item"},o.a.createElement(c.p,{header:"Default size"},m.map((function(e,t){return o.a.createElement(c.q,{isActiveItem:e.active,key:t,item:e.name,subTitle:e.hero})}))),o.a.createElement("br",null),o.a.createElement(c.p,{size:"medium",header:"Medium size, left bordered active item"},m.map((function(e,t){return o.a.createElement(c.q,{isActiveItem:e.active,key:t,leftBorder:!0,item:e.name,subTitle:e.hero})}))),o.a.createElement("br",null),o.a.createElement(c.p,{size:"large",header:"Large size"},m.map((function(e,t){return o.a.createElement(c.q,{key:t,hover:!0,icon:"account",item:e.name,controls:o.a.createElement("span",{className:"fz-10 text-dark"},"+7 (777) 777-77-77")})}))),o.a.createElement(c.g,{className:"px-15",icon:"code",iconSize:18,tooltip:"Code"},o.a.createElement(l.a,{language:"jsx",style:s.a},'// Usage examples\nimport React, { useState } from \'react\';\nimport { List, ListItem } from \'@assenti/rui-components\';\nconst names = [\n    { name: \'John Doe\', active: false },\n    { name: \'Peter Parker\', active: true },\n    { name: \'Tony Stark\', active: false },\n    { name: \'Bruce Benner\', active: false }\n];\n\nfunction Example() {\n    const [item, setItem] = useState(\'\');\n\n    return (\n        <div>\n            <List>\n                {names.map((item, index) => \n                    <ListItem\n                        isActiveItem={item => item.active} \n                        key={index} \n                        item={item}\n                        itemTitle="name"/>\n                )}\n            </List>\n            <br/>\n            <List size="medium" header="Medium size">\n                {names.map((item, index) => \n                    <ListItem\n                        isActiveItem={item => item.active} \n                        key={index} \n                        item={item}\n                        itemTitle="name"/>\n                )}\n            </List>\n            <br/>\n            <List size="large" header="Large size">\n                {names.map((item, index) => \n                    <ListItem\n                        key={index}\n                        hover\n                        icon="account" \n                        item={item.name}\n                        controls={<span className="fz-10 text-dark">+7 (777) 777-77-77</span>}/>\n                )}\n            </List>\n        </div>\n    )\n}'))),o.a.createElement("br",null),o.a.createElement(c.e,{outlined:!0,title:"Dark mode"},o.a.createElement(c.p,{dark:!0,header:"Marvel Avengers",hover:!0},t.map((function(e,t){return o.a.createElement(c.q,{key:t,item:e.hero,icon:e.icon,hover:!0})}))),o.a.createElement(c.g,{icon:"code",iconSize:18,tooltip:"Code"},o.a.createElement(l.a,{language:"jsx",style:s.a},"// Usage examples\nimport React, { useState } from 'react';\nimport { List, ListItem } from '@assenti/rui-components';\nconst heroes = [\n    { hero: 'Captain America', icon: 'shield-account' }, \n    { hero: 'Spider man', icon: 'shield-account' }, \n    { hero: 'Iron man', icon: 'shield-account' }, \n    { hero: 'Hulk', icon: 'shield-account' }\n];\n\nfunction Example() {\n    return (\n        <div>\n            <List dark\n            header=\"Marvel Avengers\" \n            items={itemsComplex} \n            itemTitle=\"hero\" \n            hover>\n            {itemsComplex.map((item, index) => \n                <ListItem \n                    key={index} \n                    item={item}\n                    icon={item.icon}\n                    itemTitle=\"hero\"\n                    hover/>\n            )}\n            </List>\n        </div>\n    )\n}"))),o.a.createElement("br",null),o.a.createElement(c.e,{outlined:!0,title:"List with checkbox",className:"px-0"},o.a.createElement(c.p,{header:"Selected Marvel avengers: "+v.length},t.map((function(e,t){return o.a.createElement(c.q,{key:t,item:e.hero,isActiveItem:E(e.hero),hover:!0,onClick:function(){return function(e){E(e)?y((function(t){return t.filter((function(t){return t!==e}))})):y([].concat(Object(a.a)(v),[e]))}(e.hero)},checkbox:!0})}))),o.a.createElement(c.g,{className:"px-15",icon:"code",iconSize:18,tooltip:"Code"},o.a.createElement(l.a,{language:"jsx",style:s.a},"// Usage examples\nimport React, { useState } from 'react';\nimport { List, ListItem, Checkbox } from '@assenti/rui-components';\nconst names = [\n    { name: 'Steve Rogers', hero: 'Captain America', check: false }, \n    { name: 'Peter Parker', hero: 'Spider man', check: false }, \n    { name: 'Tony Stark', hero: 'Iron man', check: false }, \n    { name: 'Bruce Benner', hero: 'Hulk', check: false }\n];\n\nfunction Example() {\n    const [selected, setSelected] = useState([]);\n\n    const selectOne = (item) => {\n        if (isSelected(item, 'hero')) {\n            setSelected(selected => selected.filter(_item => _item.hero !== item.hero))\n        } else setSelected([...selected, item]);\n    }\n\n    const isSelected = (item, prop) => {\n        let result = false\n        if (prop) {\n            for (const select of selected) {\n                if (item[prop] === select[prop]) result = true \n            }\n        }\n        return result\n    }\n\n    return (\n        <div>\n            <List header={'Selected Marvel avengers: ' + selected.length}>\n                {itemsComplex.map((item, index) => \n                    <ListItem \n                        key={index} \n                        item={item.hero}\n                        isActiveItem={isSelected(item.hero)}\n                        hover\n                        onClick={() => selectOne(item.hero)}\n                        checkbox/>\n                )}\n            </List>\n        </div>\n    )\n}"))),o.a.createElement("br",null),o.a.createElement(c.e,{outlined:!0,title:"List with controls and subtitles"},o.a.createElement(c.p,null,t.map((function(e,t){return o.a.createElement(c.q,{key:t,item:e.name,icon:e.icon,subTitle:e.hero,controls:o.a.createElement(o.a.Fragment,null,o.a.createElement(c.c,{color:"light",className:"mr-10",icon:"edit",iconSize:16}),o.a.createElement(c.c,{small:!0,color:"light",icon:"close"}))})}))),o.a.createElement(c.g,{icon:"code",iconSize:18,tooltip:"Code"},o.a.createElement(l.a,{language:"jsx",style:s.a},"// Usage examples\nimport React, { useState } from 'react';\nimport { List, ListItem, Button, Tag } from '@assenti/rui-components';\nconst names = [\n    { name: 'Steve Rogers', hero: 'Captain America', icon: 'shield-account' }, \n    { name: 'Peter Parker', hero: 'Spider man', icon: 'shield-account' }, \n    { name: 'Tony Stark', hero: 'Iron man', icon: 'shield-account' }, \n    { name: 'Bruce Benner', hero: 'Hulk', icon: 'shield-account' }\n];\n\nfunction Example() {\n    return (\n        <div>\n            <List>\n                {names.map((item, index) => \n                    <ListItem \n                        key={index} \n                        item={item}\n                        icon={item.icon} \n                        itemTitle=\"name\"\n                        subTitle={<Tag small color=\"info\" value={item.hero}/>}\n                        controls={\n                            <React.Fragment>\n                                <Button small color=\"light\" className=\"mr-10\" icon=\"edit\"/>\n                                <Button small color=\"light\" icon=\"close\"/>\n                            </React.Fragment>\n                        }/>\n                )}\n            </List>\n        </div>\n    )\n}"))),o.a.createElement("h2",{ref:k},"List API"),o.a.createElement(c.z,{bordered:!0,headers:p,items:d,index:!0,itemTitles:p}),o.a.createElement("h2",{ref:g},"ListItem API"),o.a.createElement(c.z,{bordered:!0,headers:p,items:h,index:!0,itemTitles:p}),o.a.createElement(c.a,{setRef:b,dark:!0,size:"medium"}))}}}]);
//# sourceMappingURL=22.chunk.js.map