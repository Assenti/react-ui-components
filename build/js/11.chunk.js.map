{"version":3,"sources":["pages/BreadcrumbsPage.js"],"names":["keys","items","property","description","default","type","value","usage","sizes","colors","positions","crumbs","item","url","icon","BreadcrumbsPage","useState","size","setSize","color","setColor","active","setActive","position","setPosition","setIcon","className","outlined","title","prefix","name","width","label","onChange","v","check","rightLabel","style","minHeight","border","itemKey","urlKey","index","isActive","extra","defaultText","text","iconSize","tooltip","language","prism","bordered","headers","itemTitles"],"mappings":"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","file":"js/11.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Breadcrumbs, Card, Select, Icon, Switch, Table, Collapse, CopyToClipboard } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst keys = ['property', 'description', 'default', 'type', 'value'];\nconst items = [\n    { \n        property: 'crumbs', \n        description: 'Pass items', \n        default: '', \n        type: 'array',\n        value: 'return a button click event object'\n    },\n    { \n        property: 'itemKey', \n        description: 'Set item key if you pass array of objects', \n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'urlKey', \n        description: 'Set url key if you pass array of objects', \n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'icon', \n        description: 'Set icon key if you pass array of objects', \n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'isActive', \n        description: 'Set active crumb (return item and index)', \n        default: '', \n        type: 'function',\n        value: 'true | false'\n    },\n    { \n        property: 'onChange', \n        description: 'Invokes on crumb click (return item and index)', \n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'color', \n        description: 'Set color', \n        default: 'info', \n        type: 'string',\n        value: 'primary | info | success | error | dark | secondary'\n    },\n    { \n        property: 'size', \n        description: 'Set breadcrumbs size',\n        default: '', \n        type: 'string',\n        value: 'medium | large'\n    },\n    { \n        property: 'position', \n        description: 'Set breadcrumbs position',\n        default: 'left', \n        type: 'string',\n        value: 'center | right'\n    },\n    { \n        property: 'delimiter', \n        description: 'Set your custom delimiter',\n        default: '/', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'className',\n        description: 'Set a custom css class to component', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n]\n\nconst usage = \n`// Usage examples\nimport React, { useState } from 'react';\nimport { Breadcrumbs, Switch, Select, Icon } from '@assenti/react-ui-components';\nconst sizes = ['default', 'medium', 'large'];\nconst colors = ['primary', 'info', 'success', 'error', 'dark', 'secondary'];\nconst positions = ['deafult', 'center', 'right'];\nconst crumbs = [\n    { item: 'Home', url: '#', icon: 'home' },\n    { item: 'Section', url: '#', icon: 'credit-card' },\n    { item: 'Module', url: '#', icon: 'help-circle-outline'}\n]\n\nfunction Example() {\n    const [size, setSize] = useState(sizes[0]);\n    const [color, setColor] = useState(colors[0]);\n    const [active, setActive] = useState(0);\n    const [position, setPosition] = useState(positions[0]);\n    const [icon, setIcon] = useState(false);\n\n    return (\n        <div>\n            <Select\n                items={sizes}\n                prefix={<Icon name=\"format-size\"/>}\n                width={200}\n                label=\"Breadcrumbs size\"\n                color=\"primary\"\n                className=\"my-10\"\n                value={size}\n                onChange={v => setSize(v)}/>\n            <br/>\n            <Select\n                items={colors}\n                prefix={<Icon name=\"brush\"/>}\n                width={200}\n                label=\"Breadcrumbs color\"\n                color=\"primary\"\n                className=\"my-10\"\n                value={color}\n                onChange={v => setColor(v)}/>\n            <br/>\n            <Select\n                items={positions}\n                prefix={<Icon name=\"format-size\"/>}\n                width={200}\n                label=\"Breadcrumbs position\"\n                color=\"primary\"\n                className=\"my-10\"\n                value={position}\n                onChange={v => setPosition(v)}/>\n            <br/>\n            <Switch \n                check={icon} \n                color=\"primary\"\n                rightLabel=\"Icon\" \n                className=\"my-10\"\n                onChange={() => setIcon(!icon)}/>\n            <br/>\n            <div style={{ minHeight: 300, border: '1px solid lightgray' }} className=\"border\">\n                <div className=\"pa-10\">\n                    <Breadcrumbs\n                        size={size}\n                        color={color}\n                        position={position}\n                        itemKey=\"item\"\n                        urlKey=\"url\"\n                        icon={icon ? 'icon' : null}\n                        onChange={(item, index) => setActive(index)}\n                        isActive={(item, index) => index === active} \n                        crumbs={crumbs}/>\n                </div>\n                <h1 className=\"pa-10\">{crumbs[active].item}</h1>\n            </div>\n        </div>\n    )\n}`\n\nconst sizes = ['default', 'medium', 'large'];\nconst colors = ['primary', 'info', 'success', 'error', 'dark', 'secondary'];\nconst positions = ['deafult', 'center', 'right'];\nconst crumbs = [\n    { item: 'Home', url: '#', icon: 'home' },\n    { item: 'Section', url: '#', icon: 'credit-card' },\n    { item: 'Module', url: '#', icon: 'help-circle-outline'}\n]\n\nconst BreadcrumbsPage = () => {\n    const [size, setSize] = useState(sizes[0]);\n    const [color, setColor] = useState(colors[0]);\n    const [active, setActive] = useState(0);\n    const [position, setPosition] = useState(positions[0]);\n    const [icon, setIcon] = useState(false);\n\n    return (\n        <div className=\"rui-page\">\n            <div className=\"rui-page-title\">Breadcrumbs Component</div>\n            <Card outlined title=\"Breadcrumbs usage\">\n                <Select\n                    items={sizes}\n                    prefix={<Icon name=\"format-size\"/>}\n                    width={200}\n                    label=\"Breadcrumbs size\"\n                    color=\"primary\"\n                    className=\"my-10\"\n                    value={size}\n                    onChange={v => setSize(v)}/>\n                <br/>\n                <Select\n                    items={colors}\n                    prefix={<Icon name=\"brush\"/>}\n                    width={200}\n                    label=\"Breadcrumbs color\"\n                    color=\"primary\"\n                    className=\"my-10\"\n                    value={color}\n                    onChange={v => setColor(v)}/>\n                <br/>\n                <Select\n                    items={positions}\n                    prefix={<Icon name=\"book-open\"/>}\n                    width={200}\n                    label=\"Breadcrumbs position\"\n                    color=\"primary\"\n                    className=\"my-10\"\n                    value={position}\n                    onChange={v => setPosition(v)}/>\n                <br/>\n                <Switch \n                    check={icon} \n                    color=\"primary\"\n                    rightLabel=\"Icon\" \n                    className=\"my-10\"\n                    onChange={() => setIcon(!icon)}/>\n                <br/>\n                <div style={{ minHeight: 300, border: '1px solid lightgray' }} className=\"border\">\n                    <div className=\"pa-10\">\n                        <Breadcrumbs\n                            size={size}\n                            color={color}\n                            position={position}\n                            itemKey=\"item\"\n                            urlKey=\"url\"\n                            icon={icon ? 'icon' : null}\n                            onChange={(item, index) => setActive(index)}\n                            isActive={(item, index) => index === active} \n                            crumbs={crumbs}/>\n                    </div>\n                    <h1 className=\"pa-10\">{crumbs[active].item}</h1>\n                </div>\n                <Collapse \n                    icon=\"code\"\n                    extra={<CopyToClipboard defaultText=\"Copy code\" text={usage} className=\"mr-10\"/>} \n                    iconSize={18} \n                    tooltip=\"Show/Hide Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usage}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <h2>API</h2>\n            <Table\n                bordered\n                headers={['Property', 'Description', 'Default', 'Type', 'Value']}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\nexport default BreadcrumbsPage;"],"sourceRoot":""}