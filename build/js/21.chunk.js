(this["webpackJsonp@assenti/rui-components"]=this["webpackJsonp@assenti/rui-components"]||[]).push([[21],{297:function(e,t,n){"use strict";n.r(t);var a=n(1),r=n(0),o=n.n(r),l=n(3),i=n(302),u=n(268),p=["property","description","default","type","value"],c=[{property:"onChange",description:"Handle input value change (return input change event object)",default:"",type:"function",value:""},{property:"onKeyUp",description:"Invokes on InputField any key pressed (return key change event object)",default:"",type:"function",value:""},{property:"onEnter",description:'Invokes on InputField "Enter" key pressed',default:"",type:"function",value:""},{property:"value",description:"Input value",default:"",type:"string",value:""},{property:"autoComplete",description:"Enable input autocomplete",default:"false",type:"boolean",value:"true | false"},{property:"name",description:"Set name prop for get all inputted values for autocomplete",default:"",type:"string",value:""},{property:"clearable",description:"Allow clear icon on value inputted",default:"false",type:"boolean",value:"true | false"},{property:"onClear",description:"Invokes on clear icon click",default:"",type:"function",value:""},{property:"lifted",description:"Lift up the input field",default:"false",type:"boolean",value:"true | false"},{property:"autoFocus",description:"Set input focus on component mounted",default:"false",type:"boolean",value:"true | false"},{property:"color",description:"Set color of input field from list",default:"",type:"string",value:"primary | info | success | error"},{property:"disabled",description:"Make input field disabled",default:"false",type:"boolean",value:"true | false"},{property:"borderType",description:"Set borders type",default:"",type:"string",value:"tile | smooth | rounded"},{property:"uppercase",description:"Transform text to upper case",default:"false",type:"boolean",value:"true | false"},{property:"size",description:"Set input field size",default:"",type:"string",value:"medium | large"},{property:"prefix",description:"Set prefix",default:"",type:"any",value:""},{property:"suffix",description:"Set suffix",default:"",type:"any",value:""},{property:"width",description:"Set InputField width",default:"",type:"string | number",value:""},{property:"type",description:"Set input type",default:"text",type:"string",value:""},{property:"min",description:'Set min number (has effect with type="number")',default:"",type:"number",value:""},{property:"max",description:'Set max number (has effect with type="number")',default:"",type:"number",value:""},{property:"minLength",description:'Set min length for text (has effect with type="text")',default:"",type:"number",value:""},{property:"maxLength",description:'Set max length for text (has effect with type="text")',default:"",type:"number",value:""},{property:"required",description:"Set input required",default:"false",type:"boolean",value:"true | false"},{property:"readOnly",description:"Set input readOnly",default:"false",type:"boolean",value:"true | false"},{property:"whiteBackground",description:"Set input background color to white",default:"false",type:"boolean",value:"true | false"},{property:"className",description:"Set a custom css class to component",default:"",type:"string",value:""}],s=[{property:"onChange",description:"Handle input value change",default:"",type:"function",value:"return a input change event object"},{property:"value",description:"Input value",default:"",type:"string",value:""},{property:"rows",description:"Set textarea rows count",default:"1",type:"number",value:""},{property:"maxRows",description:"Set maximum textarea rows",default:"10",type:"number",value:""},{property:"clearable",description:"Allow clear icon on value inputted",default:"false",type:"boolean",value:"true | false"},{property:"onClear",description:"Invokes on clear icon click",default:"",type:"function",value:""},{property:"lifted",description:"Lift up the input field",default:"false",type:"boolean",value:"true | false"},{property:"autoFocus",description:"Set input focus on component mounted",default:"false",type:"boolean",value:"true | false"},{property:"color",description:"Set color of input field from list",default:"",type:"string",value:"primary | info | success | error"},{property:"disabled",description:"Make input field disabled",default:"false",type:"boolean",value:"true | false"},{property:"borderType",description:"Set borders type",default:"",type:"string",value:"tile | smooth"},{property:"uppercase",description:"Transform text to upper case",default:"false",type:"boolean",value:"true | false"},{property:"prefix",description:"Set prefix",default:"",type:"any",value:""},{property:"suffix",description:"Set suffix",default:"",type:"any",value:""},{property:"width",description:"Set InputField width",default:"",type:"string | number",value:""},{property:"required",description:"Set input required",default:"false",type:"boolean",value:"true | false"},{property:"readOnly",description:"Set input readOnly",default:"false",type:"boolean",value:"true | false"},{property:"whiteBackground",description:"Set input background color to white",default:"false",type:"boolean",value:"true | false"},{property:"className",description:"Set a custom css class to component",default:"",type:"string",value:""}];t.default=function(){var e=Object(r.useState)(""),t=Object(a.a)(e,2),n=t[0],d=t[1],f=Object(r.useState)(""),m=Object(a.a)(f,2),y=m[0],h=m[1],v=Object(r.useState)(""),g=Object(a.a)(v,2),b=g[0],x=g[1],w=Object(r.useState)(""),S=Object(a.a)(w,2),I=S[0],E=S[1],T=Object(r.useState)(0),C=Object(a.a)(T,2),F=C[0],k=C[1],j=Object(r.useState)(""),O=Object(a.a)(j,2),z=O[0],L=O[1],R=Object(r.createRef)(),D=Object(r.createRef)();return o.a.createElement("div",{className:"rui-page",ref:D},o.a.createElement("div",{className:"row align-center space-between"},o.a.createElement("div",{className:"rui-page-title"},"InputField, TextareaField Components"),o.a.createElement("div",{onClick:function(){R.current&&R.current.scrollIntoView({behavior:"smooth",block:"center"})},className:"rui-link fz-13 fw-bold mr-10"},"API")),o.a.createElement(l.e,{outlined:!0,color:"gray",title:"Input types"},o.a.createElement(l.n,{label:"Login",placeholder:"Input your login",value:n,autoComplete:!0,hint:"InputField with tile borderType",borderType:"tile",name:"login",color:"primary",width:300,required:!0,onChange:function(e){return d(e.target.value)}}),o.a.createElement(l.n,{label:"Password",placeholder:"Input your password",value:y,type:"password",hint:"InputField with default borderType",color:"info",width:300,onChange:function(e){return h(e.target.value)}}),o.a.createElement(l.n,{label:"Amount",placeholder:"Input amount",value:F,type:"number",min:0,borderType:"smooth",hint:"InputField with smooth borderType",color:"primary",prefix:o.a.createElement(l.m,{name:"tenge"}),width:300,onChange:function(e){return k(e.target.value)}}),o.a.createElement(l.n,{label:"Login",placeholder:"Input your login",value:b,borderType:"rounded",hint:"InputField with rounded borderType",clearable:!0,autoFocus:!0,onClear:function(){return x("")},prefix:o.a.createElement(l.m,{name:"account"}),color:"info",width:300,onChange:function(e){return x(e.target.value)}}),o.a.createElement(l.n,{placeholder:"Search...",value:I,hint:"Let's find something interesting...",color:"primary",width:300,prefix:o.a.createElement(l.m,{name:"search"}),suffix:o.a.createElement(l.c,{name:"Search",color:"primary",onClick:function(){return console.log(I)}}),onEnter:function(){return console.log(I)},onChange:function(e){return E(e.target.value)}}),o.a.createElement(l.g,{icon:"code",iconSize:18,tooltip:"Code"},o.a.createElement(i.a,{language:"jsx",style:u.a},'// Usage examples\nimport React, { useState } from \'react\';\nimport { InputField, Icon } from \'@assenti/react-ui-components\';\n\nfunction Example() {\n    const [login, setLogin] = useState(\'\');\n    const [password, setPassword] = useState(\'\');\n    const [search, setSearch] = useState(\'\');\n    const [second, setSecond] = useState(\'\');\n    const [amount, setAmount] = useState(0);\n\n    return (\n        <div>\n            <InputField\n                label="Login"\n                placeholder="Input your login" \n                value={login}\n                autoComplete\n                hint="InputField with tile borderType"\n                borderType="tile"\n                name="login"\n                color="primary"\n                width={300}\n                required\n                onChange={e => setLogin(e.target.value)}/>\n            <InputField\n                label="Password"\n                placeholder="Input your password" \n                value={password}\n                type="password"\n                hint="InputField with default borderType"\n                color="info"\n                width={300}\n                onChange={e => setPassword(e.target.value)}/>\n            <InputField\n                label="Amount"\n                placeholder="Input amount" \n                value={amount}\n                type="number"\n                min={0}\n                borderType="smooth"\n                hint="InputField with smooth borderType"\n                color="primary"\n                prefix={<Icon name="tenge"/>}\n                width={300}\n                onChange={e => setAmount(e.target.value)}/>\n            <InputField\n                label="Login"\n                placeholder="Input your login" \n                value={first}\n                borderType="rounded"\n                hint="InputField with rounded borderType"\n                clearable\n                autoFocus\n                onClear={() => setFirst(\'\')} \n                prefix={<Icon name="account"/>}\n                color="info"\n                width={300}\n                onChange={e => setFirst(e.target.value)}/>\n            <InputField\n                placeholder="Search..." \n                value={search}\n                hint="Let\'s find something interesting..."\n                color="primary"\n                width={300}\n                prefix={<Icon name="search"/>}\n                suffix={<Button name="Search" color="primary" onClick={() => console.log(search)}/>}\n                onEnter={() => console.log(search)}\n                onChange={e => setSearch(e.target.value)}/>\n        </div>\n    )\n}'))),o.a.createElement("br",null),o.a.createElement(l.e,{outlined:!0,color:"gray",title:"Input sizes"},o.a.createElement(l.n,{color:"info",placeholder:"John Doe",value:b,width:300,prefix:o.a.createElement(l.m,{name:"account"}),onChange:function(e){return x(e.target.value)}}),o.a.createElement(l.n,{size:"medium",color:"info",prefix:o.a.createElement(l.m,{name:"account"}),placeholder:"John Doe",value:b,width:300,onChange:function(e){return x(e.target.value)}}),o.a.createElement(l.n,{size:"large",color:"info",prefix:o.a.createElement(l.m,{name:"account"}),placeholder:"John Doe ",value:b,width:300,onChange:function(e){return x(e.target.value)}}),o.a.createElement(l.g,{icon:"code",iconSize:18,tooltip:"Code"},o.a.createElement(i.a,{language:"jsx",style:u.a},'// Usage examples\nimport React, { useState } from \'react\';\nimport { InputField, Icon } from \'@assenti/react-ui-components\';\n\nfunction Example() {\n    const [second, setSecond] = useState(\'\');\n\n    return (\n        <div className="row">\n            <InputField\n                color="info"\n                placeholder="John Doe" \n                value={second} \n                width={300}\n                prefix={<Icon name="account"/>}\n                onChange={e => setSecond(e.target.value)}/>\n            <InputField\n                size="medium"\n                color="info"\n                prefix={<Icon name="account"/>}\n                placeholder="John Doe" \n                value={second} \n                width={300}\n                onChange={e => setSecond(e.target.value)}/>\n            <InputField\n                size="large"\n                color="info"\n                prefix={<Icon name="account"/>}\n                placeholder="John Doe " \n                value={second} \n                width={300}\n                onChange={e => setSecond(e.target.value)}/>\n        </div>\n    )\n}'))),o.a.createElement("br",null),o.a.createElement(l.e,{outlined:!0,color:"gray",title:"TextareaField Usage"},o.a.createElement(l.C,{prefix:o.a.createElement(l.m,{name:"edit"}),label:"Textarea field",placeholder:"Textarea field",value:z,maxRows:20,color:"primary",width:300,onChange:function(e){return L(e.target.value)}}),o.a.createElement(l.C,{label:"Textarea field",placeholder:"Textarea field",value:z,maxRows:20,color:"info",borderType:"tile",rows:4,width:300,onChange:function(e){return L(e.target.value)}}),o.a.createElement(l.g,{icon:"code",iconSize:18,tooltip:"Code"},o.a.createElement(i.a,{language:"jsx",style:u.a},'// Usage examples\nimport React, { useState } from \'react\';\nimport { TextareaField, Icon } from \'@assenti/react-ui-components\';\n\nfunction Example() {\n    const [text, setText] = useState(\'\');\n\n    return (\n        <div>\n            <TextareaField\n                prefix={<Icon name="edit" />}\n                label="Textarea field"\n                placeholder="Textarea field" \n                value={text}\n                maxRows={20}\n                color="primary"\n                width={300}\n                onChange={e => setText(e.target.value)}/>\n            <TextareaField\n                label="Textarea field"\n                placeholder="Textarea field" \n                value={text}\n                maxRows={20}\n                color="info"\n                borderType="tile"\n                rows={4}\n                width={300}\n                onChange={e => setText(e.target.value)}/>\n        </div>\n    )\n}'))),o.a.createElement(l.a,{setRef:D,dark:!0,size:"medium"}),o.a.createElement("h2",{ref:R},"InputField API"),o.a.createElement(l.z,{bordered:!0,headers:["Property","Description","Default","Type","Value"],items:c,index:!0,itemTitles:p}),o.a.createElement("h2",null,"TextareaField API"),o.a.createElement(l.z,{bordered:!0,headers:["Property","Description","Default","Type","Value"],items:s,index:!0,itemTitles:p}))}}}]);
//# sourceMappingURL=21.chunk.js.map