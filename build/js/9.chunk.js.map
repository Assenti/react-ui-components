{"version":3,"sources":["pages/CheckboxPage.js"],"names":["keys","items","property","description","default","type","value","CheckboxPage","useState","check","setCheck","checkLabel","setCheckLabel","className","outlined","color","title","checked","onChange","disabled","icon","iconSize","tooltip","language","style","prism","label","bordered","headers","index","itemTitles"],"mappings":"qMAKMA,EAAO,CAAC,WAAY,cAAe,UAAW,OAAQ,SACtDC,EAAQ,CACV,CACIC,SAAU,UACVC,YAAa,4BACbC,QAAS,GACTC,KAAM,UACNC,MAAO,gBAEX,CACIJ,SAAU,WACVC,YAAa,yBACbC,QAAS,GACTC,KAAM,WACNC,MAAO,IAEX,CACIJ,SAAU,UACVC,YAAa,yBACbC,QAAS,QACTC,KAAM,UACNC,MAAO,gBAEX,CACIJ,SAAU,QACVC,YAAa,kCACbC,QAAS,GACTC,KAAM,SACNC,MAAO,oCAEX,CACIJ,SAAU,QACVC,YAAa,qBACbC,QAAS,GACTC,KAAM,SACNC,MAAO,IAEX,CACIJ,SAAU,YACVC,YAAa,sCACbC,QAAS,GACTC,KAAM,SACNC,MAAO,KA8IAC,UAzEM,WAAO,IAAD,EACGC,oBAAS,GADZ,mBAChBC,EADgB,KACTC,EADS,OAEaF,oBAAS,GAFtB,mBAEhBG,EAFgB,KAEJC,EAFI,KAIvB,OACI,yBAAKC,UAAU,YACX,yBAAKA,UAAU,kBAAf,sBACA,kBAAC,IAAD,CAAMC,UAAQ,EAACC,MAAM,UAAUC,MAAM,qBACjC,yBAAKH,UAAU,OACX,kBAAC,IAAD,CACIA,UAAU,QACVI,QAASR,EACTS,SAAU,kBAAMR,GAAUD,MAC9B,kBAAC,IAAD,CACII,UAAU,QACVI,QAASR,EACTM,MAAM,UACNG,SAAU,kBAAMR,GAAUD,MAC9B,kBAAC,IAAD,CACII,UAAU,QACVI,QAASR,EACTM,MAAM,OACNG,SAAU,kBAAMR,GAAUD,MAC9B,kBAAC,IAAD,CACII,UAAU,QACVI,QAASR,EACTM,MAAM,QACNG,SAAU,kBAAMR,GAAUD,MAC9B,kBAAC,IAAD,CACII,UAAU,QACVI,QAASR,EACTU,UAAQ,EACRD,SAAU,kBAAMR,GAAUD,OAElC,kBAAC,IAAD,CAAUW,KAAK,OAAOC,SAAU,GAAIC,QAAQ,QACxC,kBAAC,IAAD,CAAmBC,SAAS,MAAMC,MAAOC,KApG9C,imCAyGH,6BACA,kBAAC,IAAD,CAAMX,UAAQ,EAACC,MAAM,UAAUC,MAAM,yBACjC,yBAAKH,UAAU,OACX,kBAAC,IAAD,CACIA,UAAU,QACVa,MAAM,WACNX,MAAM,UACNE,QAASN,EACTO,SAAU,kBAAMN,GAAeD,MACnC,kBAAC,IAAD,CACIe,MAAM,WACNX,MAAM,OACNE,QAASN,EACTO,SAAU,kBAAMN,GAAeD,OAEvC,kBAAC,IAAD,CAAUS,KAAK,OAAOC,SAAU,GAAIC,QAAQ,QACxC,kBAAC,IAAD,CAAmBC,SAAS,MAAMC,MAAOC,KAlFzC,yrBAwFR,mCACA,kBAAC,IAAD,CACIE,UAAQ,EACRC,QAAS5B,EACTC,MAAOA,EACP4B,OAAO,EACPC,WAAY9B","file":"js/9.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Checkbox, Table, Collapse, Card } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst keys = ['property', 'description', 'default', 'type', 'value'];\nconst items = [\n    { \n        property: 'checked', \n        description: 'define the checkbox state', \n        default: '', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'onChange', \n        description: 'handle checkbox change', \n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'disable', \n        description: 'Make checkbox disabled', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'color', \n        description: 'Set color of checkbox from list', \n        default: '', \n        type: 'string',\n        value: 'primary | info | success | error'\n    },\n    { \n        property: 'label', \n        description: 'Set checkbox label', \n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'className', \n        description: 'Set a custom css class to component', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n]\n\n    const usage =\n`// Usage examples\nimport React, { useState } from 'react';\nimport { Checkbox } from '@assenti/rui-components';\n\nfunction Example() {\n    const [check, setCheck] = useState(true);\n\n    return (\n        <div className=\"row\">\n            <Checkbox\n                className=\"mr-20\" \n                checked={check} \n                onChange={() => setCheck(!check)}/>\n            <Checkbox\n                className=\"mr-20\" \n                checked={check} \n                color=\"primary\" \n                onChange={() => setCheck(!check)}/>\n            <Checkbox \n                className=\"mr-20\"\n                checked={check} \n                color=\"info\" \n                onChange={() => setCheck(!check)}/>\n            <Checkbox \n                className=\"mr-20\"\n                checked={check} \n                color=\"error\" \n                onChange={() => setCheck(!check)}/>\n            <Checkbox \n                className=\"mr-20\"\n                checked={check} \n                disabled\n                onChange={() => setCheck(!check)}/>\n        </div>\n    )\n}\n`\n\n    const usageLabel =\n`// Usage examples\nimport React, { useState } from 'react';\nimport { Checkbox } from '@assenti/rui-components';\n\nfunction Example() {\n    const [checkLabel, setCheckLabel] = useState(true);\n\n    return (\n        <div className=\"row\">\n            <Checkbox\n                className=\"mr-20\"\n                label=\"Checkbox\"\n                color=\"primary\" \n                checked={checkLabel} \n                onChange={() => setCheckLabel(!checkLabel)}/>\n            <Checkbox\n                label=\"Checkbox\"\n                color=\"info\" \n                checked={checkLabel} \n                onChang e={() => setCheckLabel(!checkLabel)}/>\n        </div>\n    )\n}\n`\n\nconst CheckboxPage = () => {\n    const [check, setCheck] = useState(true);\n    const [checkLabel, setCheckLabel] = useState(true);\n\n    return (\n        <div className=\"rui-page\">\n            <div className=\"rui-page-title\">Checkbox Component</div>\n            <Card outlined color=\"primary\" title=\"Simple checkboxes\">\n                <div className=\"row\">\n                    <Checkbox\n                        className=\"mr-20\" \n                        checked={check} \n                        onChange={() => setCheck(!check)}/>\n                    <Checkbox\n                        className=\"mr-20\" \n                        checked={check} \n                        color=\"primary\" \n                        onChange={() => setCheck(!check)}/>\n                    <Checkbox \n                        className=\"mr-20\"\n                        checked={check} \n                        color=\"info\" \n                        onChange={() => setCheck(!check)}/>\n                    <Checkbox \n                        className=\"mr-20\"\n                        checked={check} \n                        color=\"error\" \n                        onChange={() => setCheck(!check)}/>\n                    <Checkbox \n                        className=\"mr-20\"\n                        checked={check} \n                        disabled\n                        onChange={() => setCheck(!check)}/>\n                </div>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usage}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <br/>\n            <Card outlined color=\"primary\" title=\"Checkboxes with label\">\n                <div className=\"row\">\n                    <Checkbox\n                        className=\"mr-20\"\n                        label=\"Checkbox\"\n                        color=\"primary\" \n                        checked={checkLabel} \n                        onChange={() => setCheckLabel(!checkLabel)}/>\n                    <Checkbox\n                        label=\"Checkbox\"\n                        color=\"info\" \n                        checked={checkLabel} \n                        onChange={() => setCheckLabel(!checkLabel)}/>\n                </div>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usageLabel}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            \n            <h2>API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n\nexport default CheckboxPage;\n"],"sourceRoot":""}