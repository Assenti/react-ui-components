{"version":3,"sources":["img/old.png","pages/ListPage.js","img/man.png","img/hipster.png","img/man_.png"],"names":["module","exports","usage","names","name","hero","phone","icon","img","manImage","check","active","manImage2","manImage3","manImage4","types","keys","items","property","description","default","type","value","items2","sizes","colors","borders","ListPage","useState","selected","setSelected","size","setSize","border","setBorder","color","setColor","dark","setDark","rounded","setRounded","divider","setDivider","hover","setHover","subtitle","setSubtitle","left","setLeft","checkbox","setCheckbox","controls","setControls","listApi","useRef","listItemApi","parent","setType","isSelected","item","result","className","ref","onClick","current","scrollIntoView","behavior","block","outlined","title","prefix","width","label","onChange","v","rightLabel","options","header","length","light","map","index","isActiveItem","filter","_item","selectOne","key","noDivider","roundedActive","leftBorder","subTitle","avatar","avatarBorderType","phoneMask","iconSize","extra","defaultText","text","tooltip","language","style","prism","bordered","headers","itemTitles","setRef"],"mappings":"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","file":"js/5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/old.21fd9a1f.png\";","import React, { useState, useRef } from 'react';\nimport { List, ListItem, Button, Table, Card, Collapse, BackTopBtn, Select, Icon, Switch, RadioGroup, phoneMask, CopyToClipboard } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport manImage from '../img/man.png';\nimport manImage2 from '../img/hipster.png';\nimport manImage3 from '../img/man_.png';\nimport manImage4 from '../img/old.png';\n\nconst usage =\n`// Usage examples\nimport React, { useState } from 'react';\nimport { List, ListItem, Card, Select, Icon, Switch, RadioGroup, phoneMask } from '@assenti/rui-components';\nconst names = [\n    { name: 'Steve Rogers', hero: 'Captain America', phone: '1234567890', icon: 'shield-account', img: manImage, check: false, active: false }, \n    { name: 'Peter Parker', hero: 'Spider man', phone: '1234567890', icon: 'shield-account', img: manImage2, check: false, active: true }, \n    { name: 'Tony Stark', hero: 'Iron man', phone: '1234567890', icon: 'shield-account', img: manImage3, check: false, active: false }, \n    { name: 'Bruce Benner', hero: 'Hulk', phone: '1234567890', icon: 'shield-account', img: manImage4, check: false, active: false }\n];\nconst types = ['image', 'icon', 'none'];\nconst sizes = ['default', 'medium', 'large'];\nconst colors = ['primary', 'info', 'success', 'error'];\nconst borders = ['default', 'rounded', 'tile'];\n\nfunction Example() {\n    const [selected, setSelected] = useState([]);\n    const [size, setSize] = useState(sizes[0]);\n    const [border, setBorder] = useState(borders[1]);\n    const [color, setColor] = useState(colors[0]);\n    const [dark, setDark] = useState(false);\n    const [rounded, setRounded] = useState(false);\n    const [divider, setDivider] = useState(false);\n    const [hover, setHover] = useState(false);\n    const [subtitle, setSubtitle] = useState(false);\n    const [left, setLeft] = useState(false);\n    const [checkbox, setCheckbox] = useState(false);\n    const [controls, setControls] = useState(true);\n    const [type, setType] = useState('');\n\n    const selectOne = (item) => {\n        if (isSelected(item)) {\n            setSelected(selected => selected.filter(_item => _item !== item))\n        } else setSelected([...selected, item]);\n    }\n\n    const isSelected = (item) => {\n        let result = false\n        for (const select of selected) {\n            if (item === select) result = true \n        }\n        return result\n    }\n\n    return (\n        <div>\n            <Select\n                items={sizes}\n                prefix={<Icon name=\"format-size\"/>}\n                width={200}\n                label=\"List size\"\n                color=\"primary\"\n                className=\"pl-10\"\n                value={size}\n                onChange={v => setSize(v)}/>\n            <br/>\n            <Select\n                items={borders}\n                prefix={<Icon name=\"shape\"/>}\n                width={200}\n                label=\"Avatar border type\"\n                color=\"primary\"\n                className=\"pl-10\"\n                value={border}\n                onChange={v => setBorder(v)}/>\n            <br/>\n            <Select\n                items={colors}\n                prefix={<Icon name=\"brush\"/>}\n                width={200}\n                label=\"Active item color\"\n                color=\"primary\"\n                className=\"pl-10\"\n                value={color}\n                onChange={v => setColor(v)}/>\n            <br/>\n            <Switch \n                color=\"primary\" \n                check={dark}\n                rightLabel=\"Dark\"\n                className=\"pl-10 my-10\"\n                onChange={() => setDark(!dark)}/>\n            <Switch \n                color=\"primary\" \n                check={hover}\n                rightLabel=\"Hover\"\n                className=\"pl-10 my-10\"\n                onChange={() => setHover(!hover)}/>\n            <Switch \n                color=\"primary\" \n                check={divider}\n                rightLabel=\"Hide dividers\"\n                className=\"pl-10 my-10\"\n                onChange={() => setDivider(!divider)}/>\n            <br/>\n            <RadioGroup\n                options={types} \n                value={type}\n                name=\"type\"\n                className=\"pl-10 mt-10\" \n                onChange={(value) => setType(value)}/>\n            <br/>\n            <Switch \n                color=\"primary\" \n                check={subtitle}\n                rightLabel=\"Subtitle\"\n                className=\"pl-10 my-10\"\n                onChange={() => setSubtitle(!subtitle)}/>\n            <br/>\n            <Switch \n                color=\"primary\" \n                check={rounded}\n                rightLabel=\"Rounded active item\"\n                className=\"pl-10 my-10\"\n                onChange={() => setRounded(!rounded)}/>\n            <Switch \n                color=\"primary\" \n                check={left}\n                rightLabel=\"Active item left border\"\n                className=\"pl-10 my-10\"\n                onChange={() => setLeft(!left)}/>\n            <br/>\n            <Switch \n                color=\"primary\" \n                check={checkbox}\n                rightLabel=\"Checkbox\"\n                className=\"pl-10 my-10\"\n                onChange={() => setCheckbox(!checkbox)}/>\n            <Switch \n                color=\"primary\" \n                check={controls}\n                rightLabel=\"Controls\"\n                className=\"pl-10 my-10\"\n                onChange={() => setControls(!controls)}/>\n            <Card\n                className=\"ma-10\" \n                dark={dark} \n                width={400}>\n                <List\n                    size={size}\n                    dark={dark} \n                    header={\n                        <div className=\"row align-center space-between\">\n                            Selected persons: {selected.length}\n                            {selected.length > 0 ? <Button className=\"ma-0\" light icon=\"share\" size={18}/> : ''}\n                        </div>\n                    }>\n                    {names.map((item, index) => \n                        <ListItem\n                            isActiveItem={isSelected(item.hero)}\n                            onClick={() => selectOne(item.hero)}\n                            key={index} \n                            hover={hover}\n                            item={item.name}\n                            color={color}\n                            noDivider={divider}\n                            roundedActive={rounded}\n                            leftBorder={left}\n                            subTitle={subtitle ? item.hero : null}\n                            icon={type === 'icon' ? item.icon : null}\n                            avatar={type === 'image' ? item.img : null}\n                            avatarBorderType={border}\n                            checkbox={checkbox}\n                            controls={controls ?\n                                <div className=\"row align-center fz-9 text-dark\">\n                                    <Icon name=\"smartphone\" size={16} className=\"mr-5\"/>\n                                    {phoneMask(item.phone)}\n                                    <Button color=\"light\" \n                                        className=\"ml-10\" \n                                        icon=\"edit\"\n                                        iconSize={16}/>\n                                </div> : null}/>\n                    )}\n                </List>\n            </Card>\n        </div>\n    )\n}`\n\nconst names = [\n    { name: 'Steve Rogers', hero: 'Captain America', phone: '1234567890', icon: 'shield-account', img: manImage, check: false, active: false }, \n    { name: 'Peter Parker', hero: 'Spider man', phone: '1234567890', icon: 'shield-account', img: manImage2, check: false, active: true }, \n    { name: 'Tony Stark', hero: 'Iron man', phone: '1234567890', icon: 'shield-account', img: manImage3, check: false, active: false }, \n    { name: 'Bruce Benner', hero: 'Hulk', phone: '1234567890', icon: 'shield-account', img: manImage4, check: false, active: false }\n];\nconst types = ['image', 'icon', 'none'];\n\nconst keys = ['property', 'description', 'default', 'type', 'value'];\nconst items = [\n    { \n        property: 'header', \n        description: 'Set list header',\n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'size', \n        description: 'Set list item size',\n        default: '', \n        type: 'string',\n        value: 'medium | large'\n    },\n    { \n        property: 'dark',\n        description: 'Set dark mode (can not be used with light prop)', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'className',\n        description: 'Set a custom css class to component', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n]\nconst items2 = [\n    { \n        property: 'render', \n        description: 'You can pass your own custom element', \n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'onClick', \n        description: 'Invokes on item click', \n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'item', \n        description: 'Set list item', \n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'subTitle', \n        description: 'Set subtitle in list item (It can be just text or Tag and etc.)', \n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'tooltip', \n        description: 'Set tooltip', \n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'tooltipPosition', \n        description: 'Set tooltip position', \n        default: 'top', \n        type: 'string',\n        value: 'left | right | bottom'\n    },\n    { \n        property: 'isActiveItem', \n        description: 'Set active list item', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'roundedActive', \n        description: 'Set hover and active list item rounded', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'color', \n        description: 'Set active list item color', \n        default: '', \n        type: 'string',\n        value: 'primary | info | success | error'\n    },\n    { \n        property: 'leftBorder', \n        description: 'Set left border highlighting on active item', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'checkbox',\n        description: 'A placeholder for checkbox (Expect a checkbox element or Component)', \n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'icon',\n        description: 'Set icon before the text in list item', \n        default: '', \n        type: 'string',\n        value: 'home | search | etc. (see icon names list in docs)'\n    },\n    { \n        property: 'controls',\n        description: 'A placeholder for item controls like buttons or etc.', \n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'noDivider',\n        description: 'Remove the divider line between items', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'hover',\n        description: 'Highlight hovered list item', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'className',\n        description: 'Set a custom css class to component', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n]\n\nconst sizes = ['default', 'medium', 'large'];\nconst colors = ['primary', 'info', 'success', 'error'];\nconst borders = ['default', 'rounded', 'tile'];\n\nconst ListPage = () => {\n    const [selected, setSelected] = useState([]);\n    const [size, setSize] = useState(sizes[0]);\n    const [border, setBorder] = useState(borders[1]);\n    const [color, setColor] = useState(colors[0]);\n    const [dark, setDark] = useState(false);\n    const [rounded, setRounded] = useState(false);\n    const [divider, setDivider] = useState(false);\n    const [hover, setHover] = useState(false);\n    const [subtitle, setSubtitle] = useState(false);\n    const [left, setLeft] = useState(false);\n    const [checkbox, setCheckbox] = useState(false);\n    const [controls, setControls] = useState(true);\n    const listApi = useRef();\n    const listItemApi = useRef();\n    const parent = useRef();\n    const [type, setType] = useState('');\n\n    const goListApi = () => {\n        if (listApi.current) listApi.current.scrollIntoView({ behavior: 'smooth', block: 'start' })\n    }\n\n    const goListItemApi = () => {\n        if (listItemApi.current) listItemApi.current.scrollIntoView({ behavior: 'smooth', block: 'start' })\n    }\n\n    const selectOne = (item) => {\n        if (isSelected(item)) {\n            setSelected(selected => selected.filter(_item => _item !== item))\n        } else setSelected([...selected, item]);\n    }\n\n    const isSelected = (item) => {\n        let result = false\n        for (const select of selected) {\n            if (item === select) result = true \n        }\n        return result\n    }\n    \n    return (\n        <div className=\"rui-page\" ref={parent}>\n            <div className=\"row align-center space-between\">\n                <div className=\"rui-page-title\">List, ListItem Components</div>\n                <div className=\"row\">\n                    <div className=\"rui-link fz-13 fw-bold mr-10\" onClick={() => goListApi()}>List API</div>\n                    <div className=\"rui-link fz-13 fw-bold\" onClick={() => goListItemApi()}>ListItem API</div>\n                </div>\n            </div>\n            <Card \n                outlined \n                className=\"px-0\"\n                title=\"List usage\">\n                <Select\n                    items={sizes}\n                    prefix={<Icon name=\"format-size\"/>}\n                    width={200}\n                    label=\"List size\"\n                    color=\"primary\"\n                    className=\"pl-10\"\n                    value={size}\n                    onChange={v => setSize(v)}/>\n                <br/>\n                <Select\n                    items={borders}\n                    prefix={<Icon name=\"shape\"/>}\n                    width={200}\n                    label=\"Avatar border type\"\n                    color=\"primary\"\n                    className=\"pl-10\"\n                    value={border}\n                    onChange={v => setBorder(v)}/>\n                <br/>\n                <Select\n                    items={colors}\n                    prefix={<Icon name=\"brush\"/>}\n                    width={200}\n                    label=\"Active item color\"\n                    color=\"primary\"\n                    className=\"pl-10\"\n                    value={color}\n                    onChange={v => setColor(v)}/>\n                <br/>\n                <Switch \n                    color=\"primary\" \n                    check={dark}\n                    rightLabel=\"Dark\"\n                    className=\"pl-10 my-10\"\n                    onChange={() => setDark(!dark)}/>\n                <Switch \n                    color=\"primary\" \n                    check={hover}\n                    rightLabel=\"Hover\"\n                    className=\"pl-10 my-10\"\n                    onChange={() => setHover(!hover)}/>\n                <Switch \n                    color=\"primary\" \n                    check={divider}\n                    rightLabel=\"Hide dividers\"\n                    className=\"pl-10 my-10\"\n                    onChange={() => setDivider(!divider)}/>\n                <br/>\n                <RadioGroup\n                    options={types} \n                    value={type}\n                    name=\"type\"\n                    className=\"pl-10 mt-10\" \n                    onChange={(value) => setType(value)}/>\n                <br/>\n                <Switch \n                    color=\"primary\" \n                    check={subtitle}\n                    rightLabel=\"Subtitle\"\n                    className=\"pl-10 my-10\"\n                    onChange={() => setSubtitle(!subtitle)}/>\n                <br/>\n                <Switch \n                    color=\"primary\" \n                    check={rounded}\n                    rightLabel=\"Rounded active item\"\n                    className=\"pl-10 my-10\"\n                    onChange={() => setRounded(!rounded)}/>\n                <Switch \n                    color=\"primary\" \n                    check={left}\n                    rightLabel=\"Active item left border\"\n                    className=\"pl-10 my-10\"\n                    onChange={() => setLeft(!left)}/>\n                <br/>\n                <Switch \n                    color=\"primary\" \n                    check={checkbox}\n                    rightLabel=\"Checkbox\"\n                    className=\"pl-10 my-10\"\n                    onChange={() => setCheckbox(!checkbox)}/>\n                <Switch \n                    color=\"primary\" \n                    check={controls}\n                    rightLabel=\"Controls\"\n                    className=\"pl-10 my-10\"\n                    onChange={() => setControls(!controls)}/>\n                <Card\n                    className=\"ma-10\" \n                    dark={dark} \n                    width={400}>\n                    <List\n                        size={size}\n                        dark={dark} \n                        header={\n                            <div className=\"row align-center space-between\">\n                                Selected persons: {selected.length}\n                                {selected.length > 0 ? <Button className=\"ma-0\" light icon=\"share\" size={18}/> : ''}\n                            </div>\n                        }>\n                        {names.map((item, index) => \n                            <ListItem\n                                isActiveItem={isSelected(item.hero)}\n                                onClick={() => selectOne(item.hero)}\n                                key={index} \n                                hover={hover}\n                                item={item.name}\n                                color={color}\n                                noDivider={divider}\n                                roundedActive={rounded}\n                                leftBorder={left}\n                                subTitle={subtitle ? item.hero : null}\n                                icon={type === 'icon' ? item.icon : null}\n                                avatar={type === 'image' ? item.img : null}\n                                avatarBorderType={border}\n                                checkbox={checkbox}\n                                controls={controls ?\n                                    <div className=\"row align-center fz-9 text-dark\">\n                                        <Icon name=\"smartphone\" size={16} className=\"mr-5\"/>\n                                        {phoneMask(item.phone)}\n                                        <Button color=\"light\" \n                                            className=\"ml-10\" \n                                            icon=\"edit\"\n                                            iconSize={16}/>\n                                    </div> : null}/>\n                        )}\n                    </List>\n                </Card>\n                <Collapse \n                    className=\"px-15\" \n                    icon=\"code\" \n                    extra={<CopyToClipboard defaultText=\"Copy code\" text={usage} className=\"mr-10\"/>}\n                    iconSize={18} \n                    tooltip=\"Show/Hide Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usage}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <h2 ref={listApi}>List API</h2>\n            <Table\n                bordered\n                headers={['Property', 'Description', 'Default', 'Type', 'Value']}\n                items={items}\n                index\n                itemTitles={keys}/>\n            <h2 ref={listItemApi}>ListItem API</h2>\n            <Table\n                bordered\n                headers={['Property', 'Description', 'Default', 'Type', 'Value']}\n                items={items2}\n                index\n                itemTitles={keys}/>\n            <BackTopBtn setRef={parent} dark size=\"medium\"/>\n        </div>\n    )\n}\nexport default ListPage;","module.exports = __webpack_public_path__ + \"static/media/man.e941ef11.png\";","module.exports = __webpack_public_path__ + \"static/media/hipster.4ca6ae2f.png\";","module.exports = __webpack_public_path__ + \"static/media/man_.1a05fb23.png\";"],"sourceRoot":""}