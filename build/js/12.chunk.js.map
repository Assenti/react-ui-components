{"version":3,"sources":["pages/ButtonGroupPage.js"],"names":["usage","keys","items","property","description","default","type","value","langs","icons","colors","sizes","ButtonGroupPage","useState","color","setColor","size","setSize","outlined","setOutlined","icon","setIcon","lifted","setLifted","className","title","prefix","name","width","label","onChange","v","check","rightLabel","options","iconSize","extra","defaultText","text","contentStyles","padding","tooltip","language","style","prism","bordered","headers","index","itemTitles"],"mappings":"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","file":"js/12.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { ButtonGroup, Card, Table, Collapse, Select, Icon, Switch, CopyToClipboard } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst usage = \n`// Usage examples\nimport React, { useState } from 'react';\nimport { ButtonGroup, Select, Switch, Icon } from '@assenti/react-ui-components';\nconst langs = ['KZ', 'RU', 'EN'];\nconst icons = ['format-align-left', 'format-align-center', 'format-align-right'];\nconst colors = ['primary', 'info', 'success', 'error', 'secondary', 'black'];\nconst sizes = ['default', 'medium', 'large'];\n\nfunction Example() {\n    const [color, setColor] = useState(colors[0]);\n    const [size, setSize] = useState(sizes[0]);\n    const [outlined, setOutlined] = useState(false);\n    const [icon, setIcon] = useState(false);\n    const [lifted, setLifted] = useState(false);\n\n    return (\n        <div>\n            <Select\n                items={sizes}\n                prefix={<Icon name=\"format-size\"/>}\n                width={200}\n                label=\"Button size\"\n                color=\"primary\"\n                className=\"ml-10\"\n                value={size}\n                onChange={v => setSize(v)}/>\n            <br/>\n            <Select\n                items={colors}\n                prefix={<Icon name=\"brush\"/>}\n                width={200}\n                label=\"Button color\"\n                color=\"primary\"\n                className=\"ml-10\"\n                value={color}\n                onChange={v => setColor(v)}/>\n            <br/>\n            <Switch \n                color=\"primary\" \n                check={outlined}\n                rightLabel=\"Outlined\"\n                className=\"pl-10 my-10\"\n                onChange={() => setOutlined(!outlined)}/>\n            <Switch \n                color=\"primary\" \n                check={icon}\n                rightLabel=\"Icon\"\n                className=\"pl-10 my-10\"\n                onChange={() => setIcon(!icon)}/>\n            <br/>\n            <Switch \n                color=\"primary\" \n                check={lifted}\n                rightLabel=\"Lifted\"\n                className=\"pl-10 my-10\"\n                onChange={() => setLifted(!lifted)}/>\n            <br/>\n            <div className=\"pa-10\">\n                <ButtonGroup \n                    default={0} \n                    options={icon ? icons : langs} \n                    color={color}\n                    size={size}\n                    icon={icon}\n                    lifted={lifted}\n                    outlined={outlined}\n                    className=\"mr-10\"/>\n            </div>\n        </div>\n    )\n}`\n\nconst keys = ['property', 'description', 'default', 'type', 'value'];\nconst items = [\n    { \n        property: 'options',\n        description: 'Button group options', \n        default: '', \n        type: 'string[] | number[]',\n        value: ''\n    },\n    { \n        property: 'onChange', \n        description: 'Handle selection (return item and index)', \n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'default',\n        description: 'Set default active item', \n        default: '', \n        type: 'number',\n        value: ''\n    },\n    { \n        property: 'size',\n        description: 'Set buttons group size', \n        default: '', \n        type: 'string',\n        value: 'medium | large'\n    },\n    { \n        property: 'icon', \n        description: 'Set group type to icon', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'color', \n        description: 'Set buttons color', \n        default: '', \n        type: 'string',\n        value: 'primary | info | success | error | secondary | black'\n    },\n    { \n        property: 'outlined', \n        description: 'Make buttons group background transparent and outline borders', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'lifted', \n        description: 'Lift up the button group', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'className',\n        description: 'Set a custom css class to component', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n];\nconst langs = ['KZ', 'RU', 'EN'];\nconst icons = ['format-align-left', 'format-align-center', 'format-align-right'];\nconst colors = ['primary', 'info', 'success', 'error', 'secondary', 'black'];\nconst sizes = ['default', 'medium', 'large'];\n\nconst ButtonGroupPage = () => {\n    const [color, setColor] = useState(colors[0]);\n    const [size, setSize] = useState(sizes[0]);\n    const [outlined, setOutlined] = useState(false);\n    const [icon, setIcon] = useState(false);\n    const [lifted, setLifted] = useState(false);\n\n    return (\n        <div className=\"rui-page\">\n            <div className=\"row align-center space-between\">\n                <div className=\"rui-page-title\">ButtonGroup Component</div>\n            </div>\n            <Card outlined title=\"ButtonGroup usage\">\n                <Select\n                    items={sizes}\n                    prefix={<Icon name=\"format-size\"/>}\n                    width={200}\n                    label=\"Button size\"\n                    color=\"primary\"\n                    className=\"ml-10\"\n                    value={size}\n                    onChange={v => setSize(v)}/>\n                <br/>\n                <Select\n                    items={colors}\n                    prefix={<Icon name=\"brush\"/>}\n                    width={200}\n                    label=\"Button color\"\n                    color=\"primary\"\n                    className=\"ml-10\"\n                    value={color}\n                    onChange={v => setColor(v)}/>\n                <br/>\n                <Switch \n                    color=\"primary\" \n                    check={outlined}\n                    rightLabel=\"Outlined\"\n                    className=\"pl-10 my-10\"\n                    onChange={() => setOutlined(!outlined)}/>\n                <Switch \n                    color=\"primary\" \n                    check={icon}\n                    rightLabel=\"Icon\"\n                    className=\"pl-10 my-10\"\n                    onChange={() => setIcon(!icon)}/>\n                <br/>\n                <Switch \n                    color=\"primary\" \n                    check={lifted}\n                    rightLabel=\"Lifted\"\n                    className=\"pl-10 my-10\"\n                    onChange={() => setLifted(!lifted)}/>\n                <br/>\n                <div className=\"pa-10\">\n                    <ButtonGroup \n                        default={0} \n                        options={icon ? icons : langs} \n                        color={color}\n                        size={size}\n                        icon={icon}\n                        lifted={lifted}\n                        outlined={outlined}\n                        className=\"mr-10\"/>\n                </div>\n                <Collapse \n                    icon=\"code\" \n                    iconSize={18}\n                    extra={<CopyToClipboard defaultText=\"Copy code\" text={usage} className=\"mr-10\"/>}\n                    contentStyles={{ padding: 0 }}\n                    tooltip=\"Show/Hide Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usage}\n                    </SyntaxHighlighter> \n                </Collapse>\n            </Card>\n            <h2>API</h2>\n            <Table\n                bordered\n                headers={['Property', 'Description', 'Default', 'Type', 'Value']}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\nexport default ButtonGroupPage;"],"sourceRoot":""}