{"version":3,"sources":["pages/TablePage.js","components/badge/index.js","components/icon/icons/index.js","components/icon/index.js","components/button/index.js","components/card/index.js","components/checkbox/index.js","components/tooltip/index.js","components/drawer/index.js","components/dropdown/index.js","components/input/index.js","components/list/index.js","components/modal/index.js","components/select/index.js","components/pagination/index.js","components/preloader/index.js","components/radio/index.js","components/switch/index.js","components/table/index.js","components/tag/index.js","components/backtop/index.js","components/collapse/index.js","components/buttonGroup/index.js","pages/HomePage.js","pages/ButtonPage.js","pages/ListPage.js","pages/TooltipPage.js","pages/PaginationPage.js","pages/CheckboxPage.js","pages/CardPage.js","pages/BadgePage.js","pages/IconPage.js","pages/CollapsePage.js","pages/ButtonGroupPage.js","pages/ColorsPage.js","routes.js","pages/DropdownPage.js","pages/InputsPage.js","pages/DrawerPage.js","pages/SelectPage.js","pages/ModalPage.js","pages/RadioPage.js","pages/SwitchPage.js","pages/TagPage.js","pages/PreloaderPage.js","pages/BackTopBtnPage.js","layouts/Header.js","layouts/Content.js","layouts/DrawerContent.js","index.js"],"names":["Badge","props","className","result","btn","rounded","color","key","trim","badgeClass","parent","visible","value","ChevronDoubleLeft","width","size","height","viewBox","fill","d","ChevronDoubleRight","ChevronBack","ChevronNext","ChevronDown","ChevronUp","Delete","Edit","Close","Code","Github","Person","Account","ShieldAccount","Search","Home","Chip","Empty","Sun","Moon","Star","StarOutline","Smartphone","Hammer","City","Download","Menu","Loading","ReactLogo","FileOutline","Email","Rocket","Key","ExitToApp","ArrowUpBold","FormatAlignLeft","FormatAlignCenter","FormatAlignRight","Brush","Lock","Filter","SortAscending","SortDescending","ContentCopy","ToyBrick","Icon","name","title","style","onClick","e","Button","ref","disabled","loading","lifted","uppercase","smooth","light","dark","icon","small","block","outlined","allotted","iconAllotted","iconLeft","btnClass","Fragment","Card","card","flat","cardClass","minWidth","header","img","children","footer","Checkbox","checkbox","checkboxClass","type","checked","onChange","label","checkboxLabelClass","Tooltip","position","tooltipClass","tooltip","Drawer","useState","isXs","setIsXs","drawerClass","collapsable","min","absolute","fullHeight","useEffect","window","addEventListener","innerWidth","CSSTransition","in","drawer","timeout","classNames","unmountOnExit","preventDefault","currentTarget","target","onClose","headerCentered","onResize","Dropdown","setVisible","dropdownClass","tabIndex","onBlur","trigger","right","rightOffset","legtOffset","left","content","InputField","input","useRef","focus","setFocus","inputFieldClass","current","prefix","onFocus","readOnly","required","autoComplete","onKeyUp","placeholder","clearable","onClear","suffix","hint","Uploader","inputFile","inputContainer","multiple","accept","undefined","files","length","map","item","index","onDelete","List","list","listClass","ListItem","roundedActive","active","isActiveItem","hover","noDivider","itemClass","render","itemTitle","controls","subTitle","Modal","closable","close","onEnter","onExited","Select","items","itemName","subItemsField","subItemName","labelName","selectedItem","onSelect","addSubItem","showSubItemOnly","selectMenu","open","setOpen","subItems","openMenu","handleSelect","subValue","blur","cutLongText","text","slice","selectItemClass","selectSubItemClass","selected","split","classes","normalTitle","main","selectClass","subItem","subIndex","generateMockArr","arr","i","push","Pagination","getLimit","Math","ceil","itemsCount","perPage","currentPage","setCurrentPage","allPages","setAllPages","activePages","setActivePages","isPrevAvailable","isNextAvailable","paginationClass","perPageVariants","perPageText","onPerPageSelect","Preloader","background","backgroundColor","preloader","Radio","radioClass","RadioGroup","vertical","radioGroupClass","options","Switch","leftLabel","leftIcon","leftIconColor","check","switchClass","rightIcon","rightLabel","rightIconColor","convertToNum","test","parseFloat","compare","a","b","sortType","makeSortableHeaders","headers","sortableHeaders","sort","Table","setSelected","setPerPage","sortable","setSortType","colIndex","setColIndex","indexSign","handleColumnSort","isSelected","_item","selectKey","getItemKey","itemTitles","getItems","pagination","bordered","grid","paginationPosition","tableContainerClass","headerColor","empty","alignment","noHover","stripped","tableClass","maxWidth","iter","selectedText","page","itemsTotal","paginationSize","paginationRounded","Tag","tagClass","iconRight","BackTopBtn","breakpoint","blockRef","createRef","handleScroll","srcElement","scrollTop","document","removeEventListener","goTop","setRef","scrollIntoView","behavior","btnBackTopClass","offsetX","bottom","offsetY","Collapse","defaultState","border","collapseClass","iconSize","iconColor","contentStyles","ButtonGroup","default","setActive","isActive","icons","componentClass","handleChange","HomePage","language","prism","keys","property","description","names","itemsComplexInitial","hero","items2","country","capital","population","headers2","rows","simpleUsage","goods","price","random","count","langs","nums","colors","routes","path","Component","setLoading","parentRef","api","search","setSearch","href","filter","toLowerCase","includes","setItem","item2","setItem2","heroes","dense","id","itemsComplex","listApi","listItemApi","prop","select","selectOne","first","setFirst","second","setSecond","setFiles","handleFileDelete","setDrawer","drawerMin","setDrawerMin","setContent","stack","minHeight","onAction","padding","setItemsCount","pageText","cities","selectedCascader","setSelectedCascader","selectedCascaderSubItem","setSelectedCascaderSubItem","v","console","log","modal","setModal","setCheck","checkLabel","setCheckLabel","cityUS","setCityUS","city","setCity","isDisabled","setIsDisabled","citiesUS","check1","setCheck1","check2","setCheck2","check3","setCheck3","check4","setCheck4","badge","setBadge","setTimeout","blockref","Header","imgPath","src","alt","rightSide","Content","onDrawerToggle","rel","version","DrawerContent","history","useHistory","setList","handleItemClick","searchedItems","to","location","pathname","ReactDOM","exact","match","querySelector"],"mappings":"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","file":"js/main.chunk.js","sourcesContent":["import React, { createRef } from 'react';\nimport { Table, Button, Tooltip, Card, BackTopBtn, Collapse, Icon } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst items = [\n    { country: 'Kazakhstan', capital: 'Nur-Sultan', population: 1029556 }, \n    { country: 'Russia', capital: 'Moscow', population: 12476000 }, \n    { country: 'USA', capital: 'Washington, D.C.', population: 711571 }, \n    { country: 'United Kingdom', capital: 'London', population: 8787892 }, \n    { country: 'China', capital: 'Beijing', population: 21542000 }\n];\n\nconst headers = ['Country', 'Capital', 'Population'];\nconst headers2 = ['Country', 'Capital', 'Population'];\n\nconst keys = ['property', 'description', 'default', 'type', 'value'];\nconst rows = [\n    { \n        property: 'items', \n        description: 'Pass the items',\n        default: '', \n        type: 'string[] | number[] | object[]',\n        value: ''\n    },\n    { \n        property: 'itemTitles', \n        description: 'Set items keys that should be rendered',\n        default: '', \n        type: 'string[]',\n        value: ''\n    },\n    { \n        property: 'headers', \n        description: 'Set table headers title',\n        default: '', \n        type: 'string[]',\n        value: ''\n    },\n    { \n        property: 'alignment', \n        description: 'Set table data alignment',\n        default: 'left', \n        type: 'string',\n        value: 'left | center | right'\n    },\n    { \n        property: 'pagination', \n        description: 'Add pagination to table',\n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'paginationPosition', \n        description: 'Set pagination block position',\n        default: 'left', \n        type: 'string',\n        value: 'left | right'\n    },\n    { \n        property: 'perPageOptions', \n        description: 'Set per page options',\n        default: '[10, 20, 50, 100]', \n        type: 'number[]',\n        value: ''\n    },\n    { \n        property: 'onPerPageSelect', \n        description: 'Invokes on per page selection (return perPage value)', \n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'paginationColor', \n        description: 'Set pagination color',\n        default: 'primary', \n        type: 'string',\n        value: 'primary | info | success | error'\n    },\n    { \n        property: 'itemsTotal', \n        description: 'Required if you use pagination prop',\n        default: '0', \n        type: 'number',\n        value: ''\n    },\n    { \n        property: 'checkbox', \n        description: 'Set checkboxes',\n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'selectKey', \n        description: 'Set select key for activate row selection with checkbox',\n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'onSelect', \n        description: 'Invokes on table row select (has effect with checkbox prop, returns selected rows array)',\n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'sortable', \n        description: 'Set sorting filters on table header (sort asc | desc)',\n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'size', \n        description: 'Set table rows size',\n        default: '', \n        type: 'string',\n        value: 'medium | large'\n    },\n    { \n        property: 'indexSign', \n        description: 'Set order index sign in table header',\n        default: '#', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'stripped',\n        description: 'Highlight every even row in table', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'color',\n        description: 'Set table color set', \n        default: '', \n        type: 'string',\n        value: 'primary | info | success | error'\n    },\n    { \n        property: 'footer',\n        description: 'Set table footer (auto set on checkbox prop)', \n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'className',\n        description: 'Set a custom css class to component', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n]\n\n    const simpleUsage =\n`// Usage examples\nimport React from 'react';\nimport { Table } from '@assenti/rui-components';\n\nfunction Example() {\n    return (\n        <div>\n            <Table\n                bordered\n                stripped\n                noHover={true} \n                headers={headers}\n                items={items}\n                index={true}\n                footer={<div>I am a footer</div>}\n                itemTitles={['country', 'capital', 'population']}/>  \n        </div>\n    )\n}\n`\n\nconst complexUsage =\n`// Usage examples\nimport React from 'react';\nimport { Table } from '@assenti/rui-components';\n\nlet goods = []\nfor (let i = 0; i < 100; i++) {\n    goods.push({\n        name: Product \\${i+1},\n        price: $ \\${Math.ceil(Math.random() * 1000)},\n        count: Math.ceil(Math.random() * 500)\n    })\n}\n\nfunction Example() {\n    return (\n        <div>\n            <Table\n                noHover\n                pagination\n                paginationPosition=\"right\"\n                itemsTotal={goods.length}\n                stripped\n                grid\n                sortable\n                checkbox\n                selectKey=\"name\"\n                onSelect={(selected) => console.log(selected)}\n                color=\"primary\"\n                headers={['Name', 'Price', 'Count']}\n                items={goods}\n                footer={<div>Total count: <strong>{goods.length}</strong></div>}\n                itemTitles={['name', 'price', 'count']}/> \n        </div>\n    )\n}`\n\nlet goods = []\nfor (let i = 0; i < 100; i++) {\n    goods.push({\n        name: `Product ${i+1}`,\n        price: `$ ${Math.ceil(Math.random() * 1000)}`,\n        count: Math.ceil(Math.random() * 500)\n    })\n}\n\nexport const TablePage = () => {\n    const api = createRef();\n    const parent = createRef();\n\n    const goToApi = () => {\n        if (api.current) api.current.scrollIntoView({ behavior: 'smooth', block: 'start' })\n    }\n\n    return (\n        <div className=\"page\" ref={parent}>\n            <div className=\"row align-center space-between\">\n                <div className=\"page-title\">Table Component</div>\n                <div onClick={goToApi} className=\"link fz-13 fw-bold\">API</div>\n            </div>\n            <Card outlined color=\"primary\" title=\"Table with order index, no hover, stripped and footer\">\n                <Table\n                    bordered\n                    stripped\n                    noHover \n                    headers={headers}\n                    items={items}\n                    index\n                    indexSign=\"№\"\n                    footer={<div>I am a footer</div>}\n                    itemTitles={['country', 'capital', 'population']}/>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {simpleUsage}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <br/>\n            <Card outlined color=\"primary\" title=\"Table with checkboxes and controls\">\n                <Table\n                    checkbox \n                    noHover\n                    headers={headers2}\n                    items={items}\n                    itemTitles={['country', 'capital', 'population']}\n                    controls={\n                        <div className=\"row justify-center align-center\">\n                            <Tooltip tooltip=\"Edit\">\n                                <Button\n                                    small\n                                    className=\"mr-10\"\n                                    color=\"light\"\n                                    icon=\"edit\"\n                                    onClick={() => {}}>\n                                </Button>\n                            </Tooltip>\n                            <Tooltip tooltip=\"Delete\">\n                                <Button\n                                    small\n                                    color=\"light\"\n                                    icon=\"delete\"\n                                    onClick={() => {}}>\n                                </Button> \n                            </Tooltip>\n                        </div>\n                    }/>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {simpleUsage}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <br/>\n            <Card outlined color=\"primary\" \n                title=\"Sortable table with pagination, checkbox and grid prop\">\n                <Table\n                    noHover\n                    pagination\n                    paginationPosition=\"right\"\n                    itemsTotal={goods.length}\n                    stripped\n                    grid\n                    sortable\n                    checkbox\n                    selectKey=\"name\"\n                    onSelect={(selected) => console.log(selected)}\n                    color=\"primary\"\n                    headers={['Name', 'Price', 'Count']}\n                    items={goods}\n                    footer={<div>Total count: <strong>{goods.length}</strong></div>}\n                    itemTitles={['name', 'price', 'count']}/>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {complexUsage}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <h2 ref={api}>API</h2>\n            <BackTopBtn size=\"medium\" dark setRef={parent}/>\n            <Table\n                bordered\n                headers={keys}\n                items={rows}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n","import React from 'react';\n\nexport const Badge = (props) => {\n    const badgeClass = () => {\n        let result = '';\n        let className = {\n            btn: 'badge-container',\n            rounded: props.rounded ? 'rounded' : '',\n            color: props.color ? props.color : '',\n            className: props.className ? props.className : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    const visibility = () => {\n        if (typeof(props.visible) === 'undefined') return true\n        else return props.visible\n    }\n\n    return (\n        <div className={badgeClass()}>\n            {props.parent}\n            <div className=\"badge\">\n                {visibility() ? props.value : ''}\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nconst defaultColor = '#4d4d4d';\nconst defaultSize = 24;\n\nexport const ChevronDoubleLeft = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor}\n                d=\"M18.41,7.41L17,6L11,12L17,18L18.41,16.59L13.83,12L18.41,7.41M12.41,7.41L11,6L5,12L11,18L12.41,16.59L7.83,12L12.41,7.41Z\" />\n        </svg>\n    )\n}\n\nexport const ChevronDoubleRight = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M5.59,7.41L7,6L13,12L7,18L5.59,16.59L10.17,12L5.59,7.41M11.59,7.41L13,6L19,12L13,18L11.59,16.59L16.17,12L11.59,7.41Z\" />\n        </svg>\n    )\n}\n\nexport const ChevronBack = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z\" />\n        </svg>\n    )\n}\n\nexport const ChevronNext = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\" />\n        </svg>\n    )\n}\n\nexport const ChevronDown = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z\" />\n        </svg>\n    )\n}\n\nexport const ChevronUp = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M7.41,15.41L12,10.83L16.59,15.41L18,14L12,8L6,14L7.41,15.41Z\" />\n        </svg>\n    )\n}\n\nexport const Delete = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z\" />\n        </svg>\n    )\n}\n\nexport const Edit = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z\" />\n        </svg>\n    )\n}\n\nexport const Close = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\n        </svg>\n    )\n}\n\nexport const Code = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M12.89,3L14.85,3.4L11.11,21L9.15,20.6L12.89,3M19.59,12L16,8.41V5.58L22.42,12L16,18.41V15.58L19.59,12M1.58,12L8,5.58V8.41L4.41,12L8,15.58V18.41L1.58,12Z\" />\n        </svg>\n    )\n}\n\nexport const Github = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} \n            d=\"M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z\" />\n        </svg>\n    )\n}\n\nexport const Person = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z\" />\n        </svg>\n    )\n}\n\nexport const Account = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M12,19.2C9.5,19.2 7.29,17.92 6,16C6.03,14 10,12.9 12,12.9C14,12.9 17.97,14 18,16C16.71,17.92 14.5,19.2 12,19.2M12,5A3,3 0 0,1 15,8A3,3 0 0,1 12,11A3,3 0 0,1 9,8A3,3 0 0,1 12,5M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12C22,6.47 17.5,2 12,2Z\" />\n        </svg>\n    )\n}\n\nexport const ShieldAccount = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M12,1L3,5V11C3,16.55 6.84,21.74 12,23C17.16,21.74 21,16.55 21,11V5L12,1M12,5A3,3 0 0,1 15,8A3,3 0 0,1 12,11A3,3 0 0,1 9,8A3,3 0 0,1 12,5M17.13,17C15.92,18.85 14.11,20.24 12,20.92C9.89,20.24 8.08,18.85 6.87,17C6.53,16.5 6.24,16 6,15.47C6,13.82 8.71,12.47 12,12.47C15.29,12.47 18,13.79 18,15.47C17.76,16 17.47,16.5 17.13,17Z\" />\n        </svg>\n    )\n}\n\nexport const Search = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z\" />\n        </svg>\n    )\n}\n\nexport const Home = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z\" />\n        </svg>\n    )\n}\n\nexport const Chip = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M6,4H18V5H21V7H18V9H21V11H18V13H21V15H18V17H21V19H18V20H6V19H3V17H6V15H3V13H6V11H3V9H6V7H3V5H6V4M11,15V18H12V15H11M13,15V18H14V15H13M15,15V18H16V15H15Z\" />\n        </svg>\n    )\n}\n\nexport const Empty = (props) => {\n    return (\n        <svg viewBox=\"0 0 512 512\" \n            width={props.size ? props.size : defaultSize} \n            height={props.size ? props.size : defaultSize}>\n        <g>\n            <g>\n                <path fill={props.color ? props.color : defaultColor} d=\"M510.417,201.092l-48.2-96.4c-2.541-5.082-7.735-8.292-13.417-8.292H63.2c-5.682,0-10.875,3.21-13.417,8.292l-48.2,96.4\n                    C0.542,203.175,0,205.472,0,207.8v192.8c0,8.284,6.716,15,15,15h482c8.284,0,15-6.716,15-15V207.8\n                    C512,205.472,511.458,203.175,510.417,201.092z M72.471,126.4H439.53l33.2,66.4H352.4c-8.284,0-15,6.716-15,15\n                    c0,44.884-36.516,81.399-81.4,81.399c-44.884,0-81.4-36.516-81.4-81.399c0-8.284-6.716-15-15-15H39.271L72.471,126.4z\n                    M482,385.601H30V385.6V222.8h115.605c7.351,54.356,54.056,96.4,110.395,96.4s103.044-42.044,110.395-96.399H482V385.601z\"/>\n            </g>\n        </g>\n        </svg>\n    )\n}\n\nexport const Sun = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor}\n                d=\"M3.55,18.54L4.96,19.95L6.76,18.16L5.34,16.74M11,22.45C11.32,22.45 13,22.45 13,22.45V19.5H11M12,5.5A6,6 0 0,0 6,11.5A6,6 0 0,0 12,17.5A6,6 0 0,0 18,11.5C18,8.18 15.31,5.5 12,5.5M20,12.5H23V10.5H20M17.24,18.16L19.04,19.95L20.45,18.54L18.66,16.74M20.45,4.46L19.04,3.05L17.24,4.84L18.66,6.26M13,0.55H11V3.5H13M4,10.5H1V12.5H4M6.76,4.84L4.96,3.05L3.55,4.46L5.34,6.26L6.76,4.84Z\" />\n        </svg>\n    )\n}\n\nexport const Moon = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} \n                d=\"M2 12A10 10 0 0 0 15 21.54A10 10 0 0 1 15 2.46A10 10 0 0 0 2 12Z\" />\n        </svg>\n    )\n}\n\nexport const Star = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z\" />\n        </svg>\n    )\n}\n\nexport const StarOutline = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M12,15.39L8.24,17.66L9.23,13.38L5.91,10.5L10.29,10.13L12,6.09L13.71,10.13L18.09,10.5L14.77,13.38L15.76,17.66M22,9.24L14.81,8.63L12,2L9.19,8.63L2,9.24L7.45,13.97L5.82,21L12,17.27L18.18,21L16.54,13.97L22,9.24Z\" />\n        </svg>\n    )\n}\n\nexport const Smartphone = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M17,19H7V5H17M17,1H7C5.89,1 5,1.89 5,3V21A2,2 0 0,0 7,23H17A2,2 0 0,0 19,21V3C19,1.89 18.1,1 17,1Z\" />\n        </svg>\n    )\n}\n\nexport const Hammer = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M2 19.63L13.43 8.2L12.72 7.5L14.14 6.07L12 3.89C13.2 2.7 15.09 2.7 16.27 3.89L19.87 7.5L18.45 8.91H21.29L22 9.62L18.45 13.21L17.74 12.5V9.62L16.27 11.04L15.56 10.33L4.13 21.76L2 19.63Z\" />\n        </svg>\n    )\n}\n\nexport const City = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M19,15H17V13H19M19,19H17V17H19M13,7H11V5H13M13,11H11V9H13M13,15H11V13H13M13,19H11V17H13M7,11H5V9H7M7,15H5V13H7M7,19H5V17H7M15,11V5L12,2L9,5V7H3V21H21V11H15Z\" />\n        </svg>\n    )\n}\n\nexport const Download = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M5,20H19V18H5M19,9H15V3H9V9H5L12,16L19,9Z\" />\n        </svg>\n    )\n}\n\nexport const Menu = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z\" />\n        </svg>\n    )\n}\n\nexport const Loading = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M12,4V2A10,10 0 0,0 2,12H4A8,8 0 0,1 12,4Z\" />\n        </svg>\n    )\n}\n\nexport const ReactLogo = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M12,10.11C13.03,10.11 13.87,10.95 13.87,12C13.87,13 13.03,13.85 12,13.85C10.97,13.85 10.13,13 10.13,12C10.13,10.95 10.97,10.11 12,10.11M7.37,20C8,20.38 9.38,19.8 10.97,18.3C10.45,17.71 9.94,17.07 9.46,16.4C8.64,16.32 7.83,16.2 7.06,16.04C6.55,18.18 6.74,19.65 7.37,20M8.08,14.26L7.79,13.75C7.68,14.04 7.57,14.33 7.5,14.61C7.77,14.67 8.07,14.72 8.38,14.77C8.28,14.6 8.18,14.43 8.08,14.26M14.62,13.5L15.43,12L14.62,10.5C14.32,9.97 14,9.5 13.71,9.03C13.17,9 12.6,9 12,9C11.4,9 10.83,9 10.29,9.03C10,9.5 9.68,9.97 9.38,10.5L8.57,12L9.38,13.5C9.68,14.03 10,14.5 10.29,14.97C10.83,15 11.4,15 12,15C12.6,15 13.17,15 13.71,14.97C14,14.5 14.32,14.03 14.62,13.5M12,6.78C11.81,7 11.61,7.23 11.41,7.5C11.61,7.5 11.8,7.5 12,7.5C12.2,7.5 12.39,7.5 12.59,7.5C12.39,7.23 12.19,7 12,6.78M12,17.22C12.19,17 12.39,16.77 12.59,16.5C12.39,16.5 12.2,16.5 12,16.5C11.8,16.5 11.61,16.5 11.41,16.5C11.61,16.77 11.81,17 12,17.22M16.62,4C16,3.62 14.62,4.2 13.03,5.7C13.55,6.29 14.06,6.93 14.54,7.6C15.36,7.68 16.17,7.8 16.94,7.96C17.45,5.82 17.26,4.35 16.62,4M15.92,9.74L16.21,10.25C16.32,9.96 16.43,9.67 16.5,9.39C16.23,9.33 15.93,9.28 15.62,9.23C15.72,9.4 15.82,9.57 15.92,9.74M17.37,2.69C18.84,3.53 19,5.74 18.38,8.32C20.92,9.07 22.75,10.31 22.75,12C22.75,13.69 20.92,14.93 18.38,15.68C19,18.26 18.84,20.47 17.37,21.31C15.91,22.15 13.92,21.19 12,19.36C10.08,21.19 8.09,22.15 6.62,21.31C5.16,20.47 5,18.26 5.62,15.68C3.08,14.93 1.25,13.69 1.25,12C1.25,10.31 3.08,9.07 5.62,8.32C5,5.74 5.16,3.53 6.62,2.69C8.09,1.85 10.08,2.81 12,4.64C13.92,2.81 15.91,1.85 17.37,2.69M17.08,12C17.42,12.75 17.72,13.5 17.97,14.26C20.07,13.63 21.25,12.73 21.25,12C21.25,11.27 20.07,10.37 17.97,9.74C17.72,10.5 17.42,11.25 17.08,12M6.92,12C6.58,11.25 6.28,10.5 6.03,9.74C3.93,10.37 2.75,11.27 2.75,12C2.75,12.73 3.93,13.63 6.03,14.26C6.28,13.5 6.58,12.75 6.92,12M15.92,14.26C15.82,14.43 15.72,14.6 15.62,14.77C15.93,14.72 16.23,14.67 16.5,14.61C16.43,14.33 16.32,14.04 16.21,13.75L15.92,14.26M13.03,18.3C14.62,19.8 16,20.38 16.62,20C17.26,19.65 17.45,18.18 16.94,16.04C16.17,16.2 15.36,16.32 14.54,16.4C14.06,17.07 13.55,17.71 13.03,18.3M8.08,9.74C8.18,9.57 8.28,9.4 8.38,9.23C8.07,9.28 7.77,9.33 7.5,9.39C7.57,9.67 7.68,9.96 7.79,10.25L8.08,9.74M10.97,5.7C9.38,4.2 8,3.62 7.37,4C6.74,4.35 6.55,5.82 7.06,7.96C7.83,7.8 8.64,7.68 9.46,7.6C9.94,6.93 10.45,6.29 10.97,5.7Z\" />\n        </svg>\n    )\n}\n\nexport const FileOutline = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z\" />\n        </svg>\n    )\n}\n\nexport const Email = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M20,8L12,13L4,8V6L12,11L20,6M20,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V6C22,4.89 21.1,4 20,4Z\" />\n        </svg>\n    )\n}\n\nexport const Rocket = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M2.81,14.12L5.64,11.29L8.17,10.79C11.39,6.41 17.55,4.22 19.78,4.22C19.78,6.45 17.59,12.61 13.21,15.83L12.71,18.36L9.88,21.19L9.17,17.66C7.76,17.66 7.76,17.66 7.05,16.95C6.34,16.24 6.34,16.24 6.34,14.83L2.81,14.12M5.64,16.95L7.05,18.36L4.39,21.03H2.97V19.61L5.64,16.95M4.22,15.54L5.46,15.71L3,18.16V16.74L4.22,15.54M8.29,18.54L8.46,19.78L7.26,21H5.84L8.29,18.54M13,9.5A1.5,1.5 0 0,0 11.5,11A1.5,1.5 0 0,0 13,12.5A1.5,1.5 0 0,0 14.5,11A1.5,1.5 0 0,0 13,9.5Z\" />\n        </svg>\n    )\n}\n\nexport const Key = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M22,18V22H18V19H15V16H12L9.74,13.74C9.19,13.91 8.61,14 8,14A6,6 0 0,1 2,8A6,6 0 0,1 8,2A6,6 0 0,1 14,8C14,8.61 13.91,9.19 13.74,9.74L22,18M7,5A2,2 0 0,0 5,7A2,2 0 0,0 7,9A2,2 0 0,0 9,7A2,2 0 0,0 7,5Z\" />\n        </svg>\n    )\n}\n\nexport const ExitToApp = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M19,3H5C3.89,3 3,3.89 3,5V9H5V5H19V19H5V15H3V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3M10.08,15.58L11.5,17L16.5,12L11.5,7L10.08,8.41L12.67,11H3V13H12.67L10.08,15.58Z\" />\n        </svg>\n    )\n}\n\nexport const ArrowUpBold = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M15,20H9V12H4.16L12,4.16L19.84,12H15V20Z\" />\n        </svg>\n    )\n}\n\nexport const FormatAlignLeft = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M3,3H21V5H3V3M3,7H15V9H3V7M3,11H21V13H3V11M3,15H15V17H3V15M3,19H21V21H3V19Z\" />\n        </svg>\n    )\n}\n\nexport const FormatAlignCenter = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M3,3H21V5H3V3M7,7H17V9H7V7M3,11H21V13H3V11M7,15H17V17H7V15M3,19H21V21H3V19Z\" />\n        </svg>\n    )\n}\n\nexport const FormatAlignRight = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M3,3H21V5H3V3M9,7H21V9H9V7M3,11H21V13H3V11M9,15H21V17H9V15M3,19H21V21H3V19Z\" />\n        </svg>\n    )\n}\n\nexport const Brush = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M20.71,4.63L19.37,3.29C19,2.9 18.35,2.9 17.96,3.29L9,12.25L11.75,15L20.71,6.04C21.1,5.65 21.1,5 20.71,4.63M7,14A3,3 0 0,0 4,17C4,18.31 2.84,19 2,19C2.92,20.22 4.5,21 6,21A4,4 0 0,0 10,17A3,3 0 0,0 7,14Z\" />\n        </svg>\n    )\n}\n\nexport const Lock = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M12,17A2,2 0 0,0 14,15C14,13.89 13.1,13 12,13A2,2 0 0,0 10,15A2,2 0 0,0 12,17M18,8A2,2 0 0,1 20,10V20A2,2 0 0,1 18,22H6A2,2 0 0,1 4,20V10C4,8.89 4.9,8 6,8H7V6A5,5 0 0,1 12,1A5,5 0 0,1 17,6V8H18M12,3A3,3 0 0,0 9,6V8H15V6A3,3 0 0,0 12,3Z\" />\n        </svg>\n    )\n}\n\nexport const Filter = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M14,12V19.88C14.04,20.18 13.94,20.5 13.71,20.71C13.32,21.1 12.69,21.1 12.3,20.71L10.29,18.7C10.06,18.47 9.96,18.16 10,17.87V12H9.97L4.21,4.62C3.87,4.19 3.95,3.56 4.38,3.22C4.57,3.08 4.78,3 5,3V3H19V3C19.22,3 19.43,3.08 19.62,3.22C20.05,3.56 20.13,4.19 19.79,4.62L14.03,12H14Z\" />\n        </svg>\n    )\n}\n\nexport const SortAscending = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M19 17H22L18 21L14 17H17V3H19M2 17H6V19H2M12 5V7H2V5M2 11H9V13H2Z\" />\n        </svg>\n    )\n}\n\nexport const SortDescending = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M19 7H22L18 3L14 7H17V21H19M2 17H6V19H2M12 5V7H2V5M2 11H9V13H2Z\" />\n        </svg>\n    )\n}\n\nexport const ContentCopy = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" />\n        </svg>\n    )\n}\n\nexport const ToyBrick = (props) => {\n    return (\n        <svg width={props.size ? props.size : defaultSize} height={props.size ? props.size : defaultSize} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : defaultColor} d=\"M19 6V5A2 2 0 0 0 17 3H15A2 2 0 0 0 13 5V6H11V5A2 2 0 0 0 9 3H7A2 2 0 0 0 5 5V6H3V20H21V6Z\" />\n        </svg>\n    )\n}","import React from 'react';\nimport { \n    Delete,\n    Search,\n    Home,\n    Edit,\n    Close,\n    Github,\n    ChevronDoubleRight,\n    ChevronDoubleLeft,\n    ChevronDown,\n    ChevronNext,\n    Code,\n    Chip,\n    Account,\n    Sun,\n    Moon,\n    Star,\n    StarOutline,\n    Smartphone,\n    Hammer,\n    City,\n    ChevronBack,\n    Empty,\n    Download,\n    Menu,\n    Person,\n    Loading,\n    ShieldAccount,\n    ReactLogo,\n    FileOutline,\n    Email,\n    Rocket,\n    Key,\n    ExitToApp,\n    ArrowUpBold,\n    FormatAlignCenter,\n    FormatAlignLeft,\n    FormatAlignRight,\n    Brush,\n    Lock,\n    Filter,\n    SortAscending,\n    SortDescending,\n    ContentCopy,\n    ToyBrick,\n    ChevronUp\n} from './icons/index';\n\nexport const Icon = (props) => {\n    const Icon = () => {\n        switch (props.name) {\n            case 'delete':\n                return <Delete size={props.size} color={props.color}/>;\n            case 'search':\n                return <Search size={props.size} color={props.color}/>;\n            case 'home':\n                return <Home size={props.size} color={props.color}/>;\n            case 'edit':\n                return <Edit size={props.size} color={props.color}/>;\n            case 'github':\n                return <Github size={props.size} color={props.color}/>;\n            case 'close':\n                return <Close size={props.size} color={props.color}/>;\n            case 'chevron-double-right':\n                return <ChevronDoubleRight size={props.size} color={props.color}/>;\n            case 'chevron-double-left':\n                return <ChevronDoubleLeft size={props.size} color={props.color}/>; \n            case 'code':\n                return <Code size={props.size} color={props.color}/>; \n            case 'chip':\n                return <Chip size={props.size} color={props.color}/>; \n            case 'account':\n                return <Account size={props.size} color={props.color}/>; \n            case 'person':\n                return <Person size={props.size} color={props.color}/>; \n            case 'chevron-down':\n                return <ChevronDown size={props.size} color={props.color}/>; \n            case 'chevron-next':\n                return <ChevronNext size={props.size} color={props.color}/>;\n            case 'chevron-back':\n                return <ChevronBack size={props.size} color={props.color}/>;    \n            case 'sun':\n                return <Sun size={props.size} color={props.color}/>;    \n            case 'moon':\n                return <Moon size={props.size} color={props.color}/>; \n            case 'star':\n                return <Star size={props.size} color={props.color}/>;    \n            case 'star-outline':\n                return <StarOutline size={props.size} color={props.color}/>;   \n            case 'smartphone':\n                return <Smartphone size={props.size} color={props.color}/>; \n            case 'hammer':\n                return <Hammer size={props.size} color={props.color}/>;  \n            case 'city':\n                return <City size={props.size} color={props.color}/>;   \n            case 'empty':\n                return <Empty size={props.size} color={props.color}/>;\n            case 'download':\n                return <Download size={props.size} color={props.color}/>;  \n            case 'menu':\n                return <Menu size={props.size} color={props.color}/>;\n            case 'loading':\n                return <Loading size={props.size} color={props.color}/>;\n            case 'shield-account':\n                return <ShieldAccount size={props.size} color={props.color}/>;    \n            case 'react':\n                return <ReactLogo size={props.size} color={props.color}/>;\n            case 'file-outline':\n                return <FileOutline size={props.size} color={props.color}/>;\n            case 'email':\n                return <Email size={props.size} color={props.color}/>;\n            case 'rocket':\n                return <Rocket size={props.size} color={props.color}/>;\n            case 'key':\n                return <Key size={props.size} color={props.color}/>;\n            case 'exit-to-app':\n                return <ExitToApp size={props.size} color={props.color}/>;\n            case 'arrow-up-bold':\n                return <ArrowUpBold size={props.size} color={props.color}/>;\n            case 'format-align-center':\n                return <FormatAlignCenter size={props.size} color={props.color}/>;\n            case 'format-align-left':\n                return <FormatAlignLeft size={props.size} color={props.color}/>;\n            case 'format-align-right':\n                return <FormatAlignRight size={props.size} color={props.color}/>;\n            case 'brush':\n                return <Brush size={props.size} color={props.color}/>;\n            case 'lock':\n                return <Lock size={props.size} color={props.color}/>;\n            case 'filter':\n                return <Filter size={props.size} color={props.color}/>;\n            case 'sort-ascending':\n                return <SortAscending size={props.size} color={props.color}/>;\n            case 'sort-descending':\n                return <SortDescending size={props.size} color={props.color}/>;\n            case 'content-copy':\n                return <ContentCopy size={props.size} color={props.color}/>;\n            case 'toy-brick':\n                return <ToyBrick size={props.size} color={props.color}/>;\n            case 'chevron-up':\n                return <ChevronUp size={props.size} color={props.color}/>;\n            default:\n                return '';\n        }\n    }\n\n    const iconClass = () => {\n        if (props.className) return `icon ${props.className}`\n        else return 'icon'\n    }\n\n    return (\n        <i title={props.title}\n            style={{ width: props.size ? props.size : 24, height: props.size ? props.size : 24 }}\n            className={iconClass()} \n            onClick={(e) => props.onClick ? props.onClick(e) : {}}>\n            <Icon/>\n        </i>\n    )\n}\n","import React from 'react';\nimport { Icon } from '../icon';\n\nexport const Button = (props) => {\n    const btnClass = () => {\n        let result = '';\n        let className = {\n            btn: 'btn',\n            lifted: props.lifted ? 'lifted' : '',\n            loading: props.loading ? 'loading' : '',\n            uppercase: props.uppercase ? 'uppercase' : '',\n            smooth: props.smooth && !props.rounded ? 'smooth' : '',\n            rounded: props.rounded && !props.smooth ? 'rounded' : '',\n            color: props.color && !props.disabled && !props.loading && !props.light && !props.dark ? props.color : '',\n            light: props.light && !props.dark ? 'light' : '',\n            dark: props.dark && !props.light ? 'dark' : '',\n            icon: props.icon && !props.name ? 'icon' : '',\n            small: props.small ? 'small' : '',\n            disabled: props.disabled || props.loading ? 'disabled' : '',\n            size: props.size ? props.size : '',\n            block: props.block ? 'block' : '',\n            outlined: props.outlined ? 'outlined' : '',\n            allotted: props.iconAllotted ? 'allotted' : '',\n            iconLeft: props.iconLeft ? 'icon-left' : '',\n            className: props.className ? props.className : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    const setMargin = () => {\n        if (props.icon && !props.iconLeft) return 'btn__text mr-5';\n        else if (props.icon && props.iconLeft) return 'btn__text ml-5';\n        else return 'btn__text';\n    }\n\n    return (\n        <button\n            ref={props.ref ? props.ref : null} \n            style={{...props.style}}\n            disabled={props.disabled || props.loading}\n            className={btnClass()} \n            onClick={(e) => props.onClick ? props.onClick(e) : {}}>\n            {props.loading ?\n                <Icon name=\"loading\" color=\"gray\"/> :\n                <React.Fragment>\n                    {props.icon && props.iconLeft ? \n                        (props.iconAllotted ? \n                            <div className=\"btn__allotted-icon\"><Icon size={20} name={props.icon}/></div> :\n                            <Icon size={20} name={props.icon}/>\n                        )\n                        : ''\n                    }\n                    {props.name ? <div className={setMargin()}>{props.name}</div> : ''}\n                    {props.icon && !props.iconLeft ? \n                        (props.iconAllotted ? \n                            <div className=\"btn__allotted-icon\"><Icon size={20} name={props.icon}/></div> :\n                            <Icon size={20} name={props.icon}/>    \n                        ) : ''\n                    }\n                </React.Fragment>\n            }\n            \n        </button>\n    )\n}\n","import React from 'react';\n\nexport const Card = (props) => {\n    const cardClass = () => {\n        let result = '';\n        let className = {\n            card: 'card',\n            flat: props.flat ? 'flat' : '',\n            dark: props.dark ? 'dark' : '',\n            outlined: props.outlined && !props.dark ? 'outlined' : '',\n            color: props.color && !props.dark ? props.color : '',\n            className: props.className ? props.className : ''\n        }\n\n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    return (\n        <div className={cardClass()} \n            style={{ width: props.width ? props.width : '', minWidth: props.minWidth ? props.minWidth : '' }}>\n            {props.title && props.outlined && !props.dark ? <div className=\"card-title\">{props.title}</div> : ''}\n            {props.header ? <div className=\"card-header\">{props.header}</div> : ''}\n            {props.img ? props.img : ''}\n            {props.children}\n            {props.footer ? <div className=\"card-footer\">{props.footer}</div> : ''}\n        </div>\n    )\n}\n","import React from 'react';\n\nexport const Checkbox = (props) => {\n\n    const checkboxClass = () => {\n        let result = '';\n        let className = {\n            checkbox: 'checkbox',\n            color: props.color ? props.color : '',\n            disabled: props.disabled ? 'disabled' : ''\n        }\n\n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    const checkboxLabelClass = () => {\n        let result = '';\n        let className = {\n            checkbox: 'checkbox-label',\n            color: props.color ? props.color : '', \n            disabled: props.disabled ? 'disabled' : ''\n        }\n\n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    return (\n        <div className={props.className ? \n                `checkbox-wrapper ${props.className}` : \n                'checkbox-wrapper'}>\n            <label className={checkboxClass()}>\n                <input\n                    type=\"checkbox\"\n                    checked={props.checked ? props.checked : false}\n                    disabled={props.disabled ? props.disabled : false}\n                    onChange={(e) => props.onChange ? props.onChange(e) : {}}/>\n                <span></span>\n            </label>\n            {props.label ? <div className={checkboxLabelClass()} \n                    onClick={() => props.onChange ? props.onChange() : {}}>{props.label}</div> : ''}\n        </div>\n    )\n}\n","import React, { useState } from 'react';\n\nexport const Tooltip = (props) => {\n    // const [show, setShow] = useState(false);\n\n    function myFunction() {\n        var copyText = document.getElementById(\"myInput\");\n        copyText.select();\n        copyText.setSelectionRange(0, 99999);\n        document.execCommand(\"copy\");\n        \n        var tooltip = document.getElementById(\"myTooltip\");\n        tooltip.innerHTML = \"Copied: \" + copyText.value;\n    }\n      \n    function outFunc() {\n        var tooltip = document.getElementById(\"myTooltip\");\n        tooltip.innerHTML = \"Copy to clipboard\";\n    }\n\n    const tooltipClass = () => {\n        let result = '';\n        let className = {\n            name: 'tooltip',\n            position: props.position ? props.position : '',\n            className: props.className ? props.className : ''\n        }\n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n   \n    return (\n        <div className={tooltipClass()}>\n            <span className=\"tooltip__text\">{props.tooltip}</span>\n            {props.children}\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Button } from '../button';\nimport { Tooltip } from '../tooltip';\n\nexport const Drawer = (props) => {\n    const [isXs, setIsXs] = useState(false);\n\n    const drawerClass = () => {\n        let result = '';\n        let className = {\n            name: 'drawer',\n            collapsable: props.collapsable ? 'collapsable' : '',\n            smooth: props.smooth ? 'smooth' : '',\n            min: props.min ? 'min' : '',\n            absolute: props.absolute ? 'absolute' : '',\n            fullHeight: props.fullHeight ? 'full-height' : '',\n            dark: props.dark && !props.light ? 'dark' : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    const handleClose = (e) => {\n        e.preventDefault();\n        if (e.currentTarget === e.target) {\n            if (props.onClose) props.onClose()\n        } \n    }\n\n    useEffect(() => {\n        window.addEventListener('resize', () => {\n            if (window.innerWidth > 529) {\n                setIsXs(false)\n            } else {\n                setIsXs(true)\n            }\n        })\n    }, [])\n\n    return (\n        <React.Fragment>\n            {isXs ?\n            <CSSTransition\n                in={props.drawer}\n                timeout={100}\n                classNames=\"drawer-background\"\n                unmountOnExit>\n                <div className={props.drawer ? \n                        'drawer-background' : \n                        'drawer-background none'} \n                        onClick={handleClose}>\n                    <CSSTransition\n                        in={props.drawer}\n                        timeout={300}\n                        classNames=\"drawer\"\n                        unmountOnExit>\n                        <CSSTransition\n                            in={props.min}\n                            timeout={300}\n                            classNames=\"expand\">\n                                <div className={drawerClass()}>\n                                    <div className=\"drawer-content\">\n                                        {props.header ? <div className={props.headerCentered ? \n                                                'drawer-header centered' : 'drawer-header'}>\n                                                    {props.header}</div> : ''}\n                                        {props.children}\n                                    </div>\n                                    {props.collapsable ? <div className=\"drawer-footer\">\n                                        <Tooltip tooltip={props.min ? 'Expand' : 'Collapse'}>\n                                            <Button\n                                                dark={props.dark}\n                                                light={props.dark ? false : true}\n                                                icon={props.min ? 'chevron-double-right' : 'chevron-double-left'}\n                                                onClick={() => props.onResize()}/>\n                                        </Tooltip>\n                                    </div> : ''}\n                                </div>\n                            \n                        </CSSTransition>\n                    </CSSTransition>\n                </div>\n            </CSSTransition> :\n            <CSSTransition\n                in={props.drawer}\n                timeout={300}\n                classNames=\"drawer\"\n                unmountOnExit>\n                <CSSTransition\n                    in={props.min}\n                    timeout={300}\n                    classNames=\"expand\">\n                        <div className={drawerClass()}>\n                            <div className=\"drawer-content\">\n                                {props.header ? <div className={props.headerCentered ? \n                                        'drawer-header centered' : 'drawer-header'}>\n                                            {props.header}</div> : ''}\n                                {props.children}\n                            </div>\n                            {props.collapsable ? <div className=\"drawer-footer\">\n                                <Tooltip tooltip={props.min ? 'Expand' : 'Collapse'}>\n                                    <Button\n                                        dark={props.dark}\n                                        light={props.dark ? false : true}\n                                        icon={props.min ? 'chevron-double-right' : 'chevron-double-left'}\n                                        onClick={() => props.onResize()}/>\n                                </Tooltip>\n                            </div> : ''}\n                        </div>\n                    \n                </CSSTransition>\n            </CSSTransition>\n            }\n        </React.Fragment>\n    )\n}\n","import React, { useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nexport const Dropdown = (props) => {\n    const [visible, setVisible] = useState(false);\n\n    const dropdownClass = () => {\n        let result = '';\n        let className = {\n            name: 'dropdown-container',\n            position: props.position ? props.position : '',\n            className: props.className ? props.className : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    return (\n        <div className={dropdownClass()} \n            tabIndex={-1}\n            onBlur={() => setVisible(false)}>\n            <div onClick={() => setVisible(true)}>{props.trigger}</div>\n            <CSSTransition\n                in={visible}\n                timeout={300}\n                classNames=\"dropdown\"\n                unmountOnExit>\n                <div className=\"dropdown\" \n                    style={{ \n                        width: props.width ? props.width : '', \n                        minWidth: props.minWidth ? props.minWidth : '',\n                        right: props.rightOffset && !props.legtOffset ? props.rightOffset : '',\n                        left: props.legtOffset && !props.rightOffset ? props.legtOffset : ''\n                    }}>\n                    <div onClick={() => setVisible(false)}>{props.content}</div>\n                </div>\n            </CSSTransition>\n        </div>\n    )\n}\n","import React, { useRef, useState } from 'react';\nimport { Icon } from '../icon';\n\nexport const InputField = (props) => {\n    const input = useRef(null);\n    const [focus, setFocus] = useState(false);\n\n    const inputFieldClass = () => {\n        let result = '';\n        let className = {\n            input: 'input-field',\n            size: props.size ? props.size : '',\n            lifted: props.lifted ? 'lifted' : '',\n            uppercase: props.uppercase ? 'uppercase' : '',\n            smooth: props.smooth && !props.rounded ? 'smooth' : '',\n            rounded: props.rounded ? 'rounded' : '',\n            color: props.color && !props.disabled && !props.light && !props.dark ? props.color : '',\n            light: props.light && !props.dark ? 'light' : '',\n            dark: props.dark && !props.light ? 'dark' : '',\n            disabled: props.disabled ? 'disabled' : '',\n            className: props.className ? props.className : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    const handleFocus = (e) => {\n        if (props.onFocus) props.onFocus(e)\n        setFocus(true)\n    }\n\n    const handleBlur = (e) => {\n        if (props.onBlur) props.onBlur(e)\n        setFocus(false)\n    }\n\n    return (\n        <div className={inputFieldClass()} style={{ width: props.width ? props.width : ''}}>\n            {props.label ? \n            <label className={focus ? 'active' : ''} onClick={() => input.current.focus()}>{props.label}</label> \n            : ''}\n            <div className={focus ? 'input-container focus' : 'input-container'}>\n                {props.prefix ? props.prefix : ''}\n                <input\n                    onFocus={handleFocus}\n                    onBlur={handleBlur}\n                    ref={input}\n                    readOnly={props.readOnly || !props.onChange ? true : false}\n                    disabled={props.disabled}\n                    required={props.required}\n                    autoComplete={props.autoComplete}\n                    value={props.value}\n                    onKeyUp={props.onKeyUp}\n                    placeholder={props.placeholder} \n                    onChange={props.onChange}\n                    type={props.type}/>\n                {props.value && props.clearable ? <i onClick={() => {props.onClear()}}><Icon name=\"close\" size={20}/></i> : ''}\n                {props.suffix ? props.suffix : ''}\n            </div>\n            {props.hint ? <div className=\"input-field__hint\">{props.hint}</div> : ''}\n        </div>\n    )\n}\n\nexport const TextareaField = (props) => {\n    const inputFieldClass = () => {\n        let result = `input-field ${props.medium ? 'medium' : ''} ${props.large ? 'large' : ''}`\n        return result.trim()\n    }\n\n    const inputContainerClass = () => {\n        let result = `input-container ${props.color ? props.color : ''}`\n        return result.trim()\n    }\n\n    return (\n        <div className={inputFieldClass()} style={{ width: props.width ? props.width : ''}}>\n            {props.label ? <label>{props.label}</label> : ''}\n            <div className={inputContainerClass()}>\n                <textarea\n                    rows={props.rows}\n                    required={props.required}\n                    autoComplete={props.autoComplete}\n                    value={props.value}\n                    onKeyUp={props.onKeyUp}\n                    placeholder={props.placeholder} \n                    onChange={props.onChange}\n                    type={props.type}/>\n                <i onClick={() => {\n                    console.log('clicked')\n                    props.onClear()\n                }}><Icon name=\"close\"/></i>\n            </div>\n        </div>\n    )\n}\n\nexport const Uploader = (props) => {\n    const inputFile = useRef();\n    const [focus, setFocus] = useState(false);\n\n    const inputFieldClass = () => {\n        let result = '';\n        let className = {\n            input: 'input-uploader',\n            className: props.className ? props.className : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    const inputContainer = () => {\n        let result = ''\n        let className = {\n            name: 'input-uploader__container',\n            size: props.size ? props.size : '',\n            color: props.color && !props.disabled && !props.light && !props.dark ? props.color : '',\n            light: props.light && !props.dark ? 'light' : '',\n            dark: props.dark && !props.light ? 'dark' : '',\n            lifted: props.lifted ? 'lifted' : '',\n            smooth: props.smooth && !props.rounded ? 'smooth' : '',\n            rounded: props.rounded ? 'rounded' : '',\n            disabled: props.disabled ? 'disabled' : ''\n        }\n\n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    const handleFocus = (e) => {\n        if (props.onFocus) props.onFocus(e)\n        setFocus(true)\n    }\n\n    const handleBlur = (e) => {\n        if (props.onBlur) props.onBlur(e)\n        setFocus(false)\n    }\n\n    return (\n        <div className={inputFieldClass()} style={{ width: props.width ? props.width : ''}}>\n            <div className={inputContainer()}>\n                <Icon name=\"download\" size={20}/>\n                {props.label ? <label onClick={() => inputFile.current.focus()}>{props.label}</label> : ''}\n                <input\n                    onFocus={handleFocus}\n                    onBlur={handleBlur}\n                    ref={inputFile}\n                    multiple={props.multiple ? true : false}\n                    accept={props.accept ? props.accept : undefined}\n                    title={props.title}\n                    disabled={props.disabled}\n                    required={props.required}\n                    onChange={ e => props.onChange([...e.target.files])}\n                    type=\"file\"/>\n                {props.value && props.value.length > 0 ? <span>{props.value.length}</span> : \"\"}\n            </div>\n            {props.value && props.value.length > 0 ? \n                <div className={props.rounded ? 'input-uploader__items rounded' : 'input-uploader__items'}>\n                    {props.value.map((item, index) => \n                        <div key={index} className=\"input-uploader__item\">\n                            <span>{item.name}</span>\n                            <Icon name=\"close\" size={20} onClick={() => props.onDelete(item.name)}/>\n                        </div>\n                    )}\n                </div>\n            : ''}\n        </div>\n    )\n}\n","import React from 'react';\nimport { Icon } from '../icon';\n\nexport const List = (props) => {\n    const listClass = () => {\n        let result = '';\n        let className = {\n            list: 'list',\n            size: props.size ? props.size : '',\n            dark: props.dark ? 'dark' : '',\n            className: props.className ? props.className : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    return (\n        <div className={listClass()}>\n            {props.header ? <div className=\"list-header\">{props.header}</div> : ''}\n            {props.children}\n        </div>\n    )\n}\n\nexport const ListItem = (props) => {\n    const itemClass = () => {\n        let result = '';\n        let className = {\n            item: 'list-item',\n            roundedActive: props.roundedActive ? 'rounded' : '',\n            right: props.right && !props.left ? 'right' : '',\n            left: props.left && !props.right ? 'left' : '',\n            active: (props.isActiveItem && props.isActiveItem(props.item)) ? 'active' : '',\n            hover: props.hover ? 'hover' : '',\n            noDivider: props.noDivider ? '' : 'divider',\n            className: props.className ? props.className : ''\n        }\n\n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    return (\n        <div onClick={() => props.onClick ? props.onClick() : {}} \n            className={itemClass()}>\n            {\n                !props.render ?\n                <React.Fragment>\n                    <div className=\"list-item__title-row\">\n                        <div className=\"row align-center\">\n                            {props.icon ? <Icon name={props.icon} className=\"mr-5\"/> : ''}\n                            <div className=\"list-item__left-side\">\n                                {props.checkbox}\n                                {props.item[props.itemTitle] ? props.item[props.itemTitle] : props.item}\n                            </div>\n                        </div>\n                        <div className=\"list-item__right-side\">\n                            {props.controls}\n                        </div>\n                    </div>\n                    {props.subTitle ? <div className=\"list-subtitle\">{props.subTitle}</div> : ''}\n                </React.Fragment> :\n                props.render\n            }\n        </div>\n    )\n}\n\n\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nexport const Modal = (props) => {\n\n    const close = (e) => {\n        if (e.target === e.currentTarget) props.onClose()\n    }\n\n    return (\n        <div className={props.visible ? 'modal-container' : 'modal-container hidden'}\n            onClick={(e) => props.closable ? close(e) : {}}>\n            <CSSTransition\n                in={props.visible}\n                timeout={300}\n                classNames=\"modal\"\n                unmountOnExit\n                onEnter={() => props.onEnter ? props.onEnter() : {}}\n                onExited={() => props.onExited ? props.onExited() : {}}>\n                <div className=\"modal\">\n                    <div className=\"modal-header\">{props.header}</div>\n                    <div className=\"modal-content\">{props.children}</div>\n                    {props.footer ? <div className=\"modal-footer\">{props.footer}</div> : ''}\n                </div>\n            </CSSTransition>\n        </div>\n    )\n}\n","import React, { useState, useRef } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Icon } from '../icon';\n\nexport const Select = ({ \n    items, \n    itemName,\n    subItemsField, \n    subItemName, \n    labelName, \n    placeholder, \n    selectedItem,\n    onSelect,\n    width,\n    minWidth,\n    subTitle,\n    addSubItem,\n    showSubItemOnly,\n    color,\n    size,\n    rounded\n}) => {\n    const selectMenu = useRef(null);\n    const [open, setOpen] = useState(false);\n    const getItems = () => items ? items : [];\n\n    const subItems = (parent) => {\n        if (subItemsField) return parent[subItemsField]\n        else return []\n    }\n\n    const openMenu = e => {\n        if (e.target === e.currentTarget) setOpen(true)\n    }\n\n    const handleSelect = (e, value, subValue) => {\n        if (e.target === e.currentTarget) {\n            let result = subValue ? (showSubItemOnly ? subValue : `${value} / ${subValue}`) : value\n            onSelect(result)\n            setOpen(false)\n            selectMenu.current.blur()\n        }\n    }\n\n    const cutLongText = (text) => {\n        if (text.length > 130) return `${text.slice(0, 130)}...`\n        else return text\n    }\n\n    const selectItemClass = (item) => {\n        let isSelected = itemName ? item[itemName] === selectedItem : item === selectedItem\n        let result = '';\n        let className = {\n            item: 'select-menu__item',\n            active: isSelected ? 'active' : ''\n        }\n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    const selectSubItemClass = (item) => {\n        let selected = showSubItemOnly ? selectedItem : (selectedItem ? selectedItem.split('/')[1].trim() : '')\n        let isSelected = subItemName ? item[subItemName] === selected : item === selected\n        let classes = {\n            active: isSelected ? 'active' : ''\n        }\n        return `select-menu__subitem ${classes.normalTitle} ${classes.active}`\n    }\n\n    const selectClass = (item) => {\n        let result = '';\n        let className = {\n            main: 'select-menu',\n            rounded: rounded ? 'rounded' : '',\n            size: size ? size : '',\n            color: color ? color : ''\n        }\n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    return (\n        <React.Fragment>\n            {labelName ? <label className=\"select-menu__label\">{labelName}</label> : ''}\n            <div className={selectClass()}\n                ref={selectMenu}\n                style={{ width: width ? width : '', minWidth: minWidth ? minWidth : '' }} \n                tabIndex={-1} \n                onClick={openMenu} \n                onBlur={() => setOpen(false)}>\n                \n                {!cutLongText(selectedItem ? selectedItem : '') ? \n                <span onClick={openMenu}>{placeholder}</span> : ''}\n                {cutLongText(selectedItem ? selectedItem : '') ? \n                    <div className=\"select-menu__value\" \n                        onClick={openMenu} \n                        title={selectedItem}>\n                            {selectedItem ? cutLongText(selectedItem) : ''}\n                    </div> : ''}\n                <Icon name=\"chevron-down\"/>\n                \n                <CSSTransition\n                    in={open}\n                    timeout={300}\n                    classNames=\"select-menu\"\n                    unmountOnExit>\n                    <div className=\"select-menu__items\">\n                        {getItems().map((item, index) => \n                            <div key={index} \n                                className={selectItemClass(item)}\n                                onClick={e => subItems(item).length > 0 ? {} : handleSelect(e, itemName ? item[itemName] : item)}>\n                                {itemName ? item[itemName] : item}\n                                {subItems(item).length > 0 ? <Icon name=\"chevron-next\"/> : ''}\n                                {subItems(item).length > 0 ? \n                                    <div className=\"select-menu__subitems\">\n                                        {subTitle ? <div className=\"select-menu__subitem-title\">{itemName ? item[itemName] : item}</div> : ''}\n                                        {subItems(item).map((subItem, subIndex) => \n                                            <div key={subIndex} \n                                                className={selectSubItemClass(subItem)}\n                                                onClick={e => handleSelect(e, itemName ? item[itemName] : item, subItemName ? subItem[subItemName] : subItem)}>\n                                                {subItemName ? subItem[subItemName] : subItem} {addSubItem ? ' (' + subItem[addSubItem] + ')' : ''}\n                                            </div>\n                                        )}\n                                    </div> : ''\n                                }\n                            </div>\n                        )}\n                    </div>\n                </CSSTransition>\n            </div>\n        </React.Fragment>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { Select } from '../select';\nimport { ChevronBack, ChevronNext } from '../icon/icons/index';\n\nconst generateMockArr = (length) => {\n    let arr = []\n    for (let i = 0; i < length; i++) {\n        arr.push(i)\n    }\n    return arr\n}\n\nexport const Pagination = (props) => {\n    const paginationClass = () => {\n        let result = '';\n        let className = {\n            btn: 'pagination',\n            size: props.size ? props.size : '',\n            rounded: props.rounded ? 'rounded' : '',\n            color: props.color ? props.color : 'primary',\n            className: props.className ? props.className : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    const getLimit = () => Math.ceil(props.itemsCount/props.perPage) >= 5 ? 5 : Math.ceil(props.itemsCount/props.perPage);\n    const [currentPage, setCurrentPage] = useState(props.current ? props.current : 1);\n    const [allPages, setAllPages] = useState(generateMockArr(Math.ceil(props.itemsCount/props.perPage)));\n    const [activePages, setActivePages] = useState(allPages.slice(0, getLimit()))\n\n    const isPrevAvailable = () => {\n        return currentPage === 1 ? false : true\n    }\n\n    const isNextAvailable = () => {\n        if (currentPage === props.itemsCount || \n            props.itemsCount === 0 || \n            currentPage === Math.ceil(props.itemsCount/props.perPage)) return false \n        else return true\n    }\n\n    const handleOnNext = () => {\n        if (isNextAvailable()) {\n            if (currentPage % getLimit() === 0 && currentPage < allPages.length) {\n                setActivePages(allPages.slice(currentPage, currentPage + getLimit()))\n                setCurrentPage(currentPage + 1)\n                props.onChange(currentPage + 1)\n            } else if (currentPage < allPages.length) {\n                setCurrentPage(currentPage + 1)\n                props.onChange(currentPage + 1)\n            }\n        }\n    }\n\n    const handleOnPrev = () => {\n        if (isPrevAvailable()) {\n            if(currentPage > 1 && (currentPage - 1) % getLimit() === 0){\n                setActivePages(allPages.slice((currentPage-1) - getLimit(), currentPage-1))\n                setCurrentPage(currentPage - 1)\n                props.onChange(currentPage - 1)\n            } else if (currentPage > 1) {\n                setCurrentPage(currentPage - 1)\n                props.onChange(currentPage - 1)\n            }\n        }\n    }\n\n    const handlePerPageSelect = (value) => {\n        props.onPerPageSelect(value)\n        setAllPages(generateMockArr(Math.ceil(props.itemsCount/value)))\n    }\n\n    const getSize = () => {\n        if (props.size === 'medium') return 100\n        else if (props.size === 'large') return 100\n        else return 100\n    }\n\n    useEffect(() => {\n        setActivePages(allPages.slice(0, getLimit()))\n    }, [props.perPage, props.itemsCount])\n\n    return (\n        <div className={paginationClass()}>\n            <div className={isPrevAvailable() ? 'pagination-item' : 'pagination-item disabled'} \n                onClick={handleOnPrev}>\n                <ChevronBack />\n            </div>\n\n            {activePages.map((item, index) => {\n                return (\n                    <div key={index} \n                        className={(item + 1) === currentPage ? \n                            'pagination-item active' : 'pagination-item'}\n                        onClick={() => {\n                            setCurrentPage(item + 1)\n                            props.onChange(item + 1)\n                        }}>\n                        {item + 1}\n                    </div>\n                )\n            })}\n\n            <div className={isNextAvailable() ? 'pagination-item' : 'pagination-item disabled'} \n                onClick={handleOnNext}>\n                <ChevronNext />\n            </div>\n\n            <div className=\"pagination-per-page\">\n                <Select\n                    minWidth={getSize()}\n                    size={props.size}\n                    rounded={props.rounded}\n                    color={props.color}\n                    items={props.perPageVariants ? props.perPageVariants : [10, 20, 50, 100]}\n                    normalTitle={true}\n                    selectedItem={`${props.perPage} / ${props.perPageText ? props.perPageText : 'page'}`}\n                    onSelect={handlePerPageSelect}/>\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nexport const Preloader = (props) => {\n    return (\n        <React.Fragment>\n            {props.visible ? <div className=\"preloader\"\n                style={{ background: props.backgroundColor ? props.backgroundColor : ''}}>\n                {\n                    props.preloader ? props.preloader :\n                    <div className=\"lds-ellipsis\">\n                        <div style={{ backgroundColor: props.color ? props.color : '#42a5f5' }}></div>\n                        <div style={{ backgroundColor: props.color ? props.color : '#42a5f5' }}></div>\n                        <div style={{ backgroundColor: props.color ? props.color : '#42a5f5' }}></div>\n                        <div style={{ backgroundColor: props.color ? props.color : '#42a5f5' }}></div>\n                    </div>\n                } \n            </div> : ''}\n        </React.Fragment>\n    )\n}","import React from 'react';\n\nconst Radio = (props) => {\n    const radioClass = () => {\n        let result = '';\n        let className = {\n            btn: 'radio',\n            disabled: props.disabled ? 'disabled' : '',\n            className: props.className ? props.className : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    return (\n        <div className={radioClass()}>\n            <input \n                type=\"radio\" \n                name={props.name} \n                value={props.value}\n                disabled={props.disabled} \n                onChange={e => props.onChange(e)}/>\n            {props.label ? <span>{props.label}</span> : ''}\n        </div>\n    )\n}\n\nexport const RadioGroup = (props) => {\n    const radioGroupClass = () => {\n        let result = '';\n        let className = {\n            btn: 'radio-group',\n            vertical: props.vertical ? 'vertical' : '',\n            className: props.className ? props.className : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    return (\n        <div className={radioGroupClass()}>\n            {props.options.map((item, index) => \n                <Radio \n                    key={index}\n                    disabled={props.disabled}\n                    label={props.labelName ? props.labelName : item} \n                    value={item} \n                    name={props.name}\n                    onChange={() => props.onChange(item)}/>\n            )}\n        </div>\n    )\n}\n","import React from 'react';\nimport { Icon } from '../icon';\n\nexport const Switch = (props) => {\n    const switchClass = () => {\n        let result = '';\n        let className = {\n            btn: 'switch',\n            active: props.check ? 'active' : 'disactive',\n            disabled: props.disabled ? 'disabled' : '',\n            color: props.color ? props.color : '',\n            className: props.className ? props.className : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    return (\n        <div className={props.position === 'vertical' ? 'switch-container vertical' : 'switch-container'}>\n            {props.leftLabel && !props.leftIcon ? <div className=\"switch-left-label\">{props.leftLabel}</div> : ''}\n            {props.leftIcon && !props.leftLabel ? <Icon name={props.leftIcon} color={props.leftIconColor}/> : ''}\n            <div className={switchClass()} \n                onClick={() => !props.disabled ? props.onChange() : {}}>\n                <span></span>\n            </div>\n            {props.rightIcon && !props.rightLabel ? <Icon name={props.rightIcon} color={props.rightIconColor}/> : ''}\n            {props.rightLabel && !props.rightIcon ? <div className=\"switch-right-label\">{props.rightLabel}</div> : ''}\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { Empty, Loading } from '../icon/icons/index';\nimport { Checkbox } from '../checkbox';\nimport { Pagination } from '../pagination';\nimport { Icon } from '../icon';\n\nconst convertToNum = (value) => {\n    if (/^\\d+$/.test(value)) {\n        return parseFloat(value)\n    } else return value\n}\n\nconst compare = (a, b, key, sortType) => {\n    if (sortType === 'desc') {\n        if (convertToNum(a[key]) < convertToNum(b[key])) return 1;\n        if (convertToNum(b[key]) < convertToNum(a[key])) return -1;\n        return 0;\n    } else if (sortType === 'asc') {\n        if (convertToNum(a[key]) > convertToNum(b[key])) return 1;\n        if (convertToNum(b[key]) > convertToNum(a[key])) return -1;\n        return 0;\n    }\n}\n\nconst makeSortableHeaders = (headers) => {\n    let sortableHeaders = []\n    for (const item of headers) {\n        sortableHeaders.push({name: item, sort: 'asc' })\n    }\n    return sortableHeaders;\n}\n\nexport const Table = (props) => {\n    let initialHeaders = () => {\n        if (props.controls && !props.checkbox) {\n            return [...props.headers, ''];\n        } else if (props.index && !props.checkbox && !props.controls) {\n            return [props.indexSign ? props.indexSign : '#', ...props.headers];\n        } else if (props.sortable) {\n            return makeSortableHeaders(props.headers)\n        } else if (props.sortable && props.checkbox) {\n            return makeSortableHeaders(props.headers)\n        } else {\n            return props.headers;\n        }\n    }\n\n    const [selected, setSelected] = useState([]);\n    const [currentPage, setCurrentPage] = useState(props.currentPage ? props.currentPage : 1);\n    const [perPage, setPerPage] = useState(props.perPage ? props.perPage : 10);\n    const [sortType, setSortType] = useState(props.sortable ? 'asc' : '');\n    const [colIndex, setColIndex] = useState(0);\n    const [headers] = useState(initialHeaders());\n\n    const tableContainerClass = () => {\n        let result = '';\n        let className = {\n            name: 'table__container',\n            bordered: props.bordered ? 'bordered' : '',\n            grid: props.grid ? 'grid' : '',\n            color: props.color ? props.color : '',\n            paginationPosition: props.paginationPosition ? props.paginationPosition : '',\n            className: props.className ? props.className : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    const tableClass = () => {\n        let result = '';\n        let className = {\n            name: 'table',\n            headerColor: props.color ? props.color : '',\n            empty: props.items.length === 0 ? 'empty' : '',\n            alignment: props.alignment ? props.alignment : '',\n            noHover: props.noHover ? 'no-hover' : '',\n            stripped: props.stripped ? 'stripped' : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    const handleColumnSort = (colIndex, sortType) => {\n        setColIndex(colIndex)\n        setSortType(sortType)\n    }\n\n    const isSelected = (_item) => {\n        let result = false\n        for (const item of selected) {\n            if (item[props.selectKey] === _item[props.selectKey]) return true\n        }\n        return result\n    }\n\n    const onSelect = (item) => {\n        for (let i = 0; i < selected.length; i++) {\n            if (selected[i][props.selectKey] === item[props.selectKey]) {\n                if (i === 0) {\n                    setSelected(selected.slice(1))\n                    props.onSelect(selected.slice(1))\n                } else if (i === selected.length - 1) {\n                    setSelected(selected.slice(0, -1))\n                    props.onSelect(selected.slice(0, -1))\n                } else if (i > 0) {\n                    setSelected([\n                        ...selected.slice(0, i),\n                        ...selected.slice(i + 1)])\n                    props.onSelect([\n                        ...selected.slice(0, i),\n                        ...selected.slice(i + 1)])\n                }\n                return\n            }\n        }\n        setSelected([...selected, item])\n        props.onSelect([...selected, item])\n    }\n\n    const isAllChecked = () => {\n        if (selected.length === getItems().length) return true\n        return false\n    }\n\n    const onSelectAll = () => {\n        if (selected.length > 0) {\n            setSelected([])\n            props.onSelect([])\n        } else {\n            setSelected(getItems())\n            props.onSelect(getItems())\n        }\n    }\n\n    const prepareHeaders = () => {\n        if (props.sortable && !props.checkbox) {\n            return (\n                <tr>\n                    {headers.map((item, index) => \n                        <th key={index}>\n                            <div className=\"row align-center\">\n                                {item.name} \n                                <Icon \n                                    className=\"ml-8\" \n                                    name={item.sort === 'desc' ? 'sort-descending' : 'sort-ascending'}\n                                    onClick={() => {\n                                        item.sort = item.sort === 'asc' ? 'desc' : 'asc'\n                                        handleColumnSort(index, item.sort)\n                                    }}\n                                    size={16} \n                                    color={props.color ? \n                                        (colIndex === index ? '#fff' : '') : \n                                        (colIndex === index ? 'gray' : 'lightgray')    \n                                    }/>\n                            </div>\n                        </th>\n                    )}\n                </tr>\n            )\n        } else if (props.sortable && props.checkbox) {\n            return (\n                <tr>\n                    <th style={{ maxWidth: 40, width: 40 }}>\n                        <Checkbox \n                            color={props.color ? props.color : ''}\n                            onChange={() => onSelectAll()} \n                            checked={isAllChecked()}/>\n                    </th>\n                    {headers.map((item, index) => \n                        <th key={index}>\n                            <div className=\"row align-center\">\n                                {item.name} \n                                <Icon \n                                    className=\"ml-8\" \n                                    name={item.sort === 'desc' ? 'sort-descending' : 'sort-ascending'}\n                                    onClick={() => {\n                                        item.sort = item.sort === 'asc' ? 'desc' : 'asc'\n                                        handleColumnSort(index, item.sort)\n                                    }}\n                                    size={16} \n                                    color={props.color ? \n                                        (colIndex === index ? '#fff' : '') : \n                                        (colIndex === index ? 'gray' : 'lightgray')    \n                                    }/>\n                            </div>\n                        </th>\n                    )}\n                </tr>\n            )\n        } else if (props.checkbox) {\n           return (\n                <tr>\n                    <th><Checkbox color={props.color ? props.color : ''}/></th>\n                    {headers.map((item, index) => \n                        <th key={index}>{item}</th>\n                    )}\n                    <th></th>\n                </tr>\n           )\n        } else {\n            return (\n                <tr>\n                    {headers.map((item, index) => \n                        <th key={index}>{item}</th>\n                    )}\n                </tr>\n            )\n        }\n    }\n\n    const getItemKey = () => {\n        return props.itemTitles[colIndex];\n    }\n\n    const getItems = () => {\n        if (props.pagination) {\n            return props.items\n                .slice((perPage * currentPage) - perPage, perPage * currentPage)\n                .sort((a, b) => compare(a, b, getItemKey(), sortType))\n        } else {\n            return props.items.sort((a, b) => compare(a, b, getItemKey(), sortType))\n        }\n    }\n\n    return (\n        <div className={tableContainerClass()}>\n            <table className={tableClass()}>\n                <thead>{prepareHeaders()}</thead>\n                <tbody>\n                    {getItems().map((item, index) => \n                        <tr key={index}>\n                            {props.checkbox ? <td>\n                                <Checkbox\n                                    checked={isSelected(item)} \n                                    color={props.color ? props.color : ''} \n                                    onChange={() => onSelect(item)}/>\n                            </td> : <React.Fragment/>}\n                            {props.index ? <td>{index + 1}</td> : <React.Fragment/>}\n                            {props.itemTitles.map((title, iter) => \n                                <td key={iter}>{item[title]}</td>\n                            )}\n                            {props.controls ? <td>\n                                {props.controls}\n                            </td> : <React.Fragment/>}\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n            {props.footer || props.checkbox ? \n                (\n                    props.checkbox ? \n                    <div className=\"table__footer row space-between\">\n                        <span>{props.selectedText ? props.selectedText : 'Selected: '} <strong>{selected.length}</strong></span>\n                        {props.footer}\n                    </div> : \n                    <div className=\"table__footer\">{props.footer}</div>\n                ) : \n            ''}\n            {props.items.length === 0 && !props.loading ?\n                <div className=\"table__placeholder\"><Empty/></div> : ''}\n            {props.loading ? \n                <div className={props.loading ? 'table__placeholder loading' : 'table__placeholder'}>\n                    <Loading/>\n                </div> \n            : ''}\n            {props.pagination ? \n                <Pagination\n                    onChange={page => setCurrentPage(page)}\n                    perPageVariants={props.perPageVariants}\n                    perPage={perPage}\n                    perPageText={props.perPageText}\n                    onPerPageSelect={value => setPerPage(value)}\n                    itemsCount={props.itemsTotal ? props.itemsTotal : 0}\n                    color={props.color ? props.color : ''}\n                    size={props.paginationSize ? props.paginationSize : ''}\n                    current={props.currentPage ? props.currentPage : 1}\n                    rounded={props.paginationRounded ? props.paginationRounded : false}/> : ''\n            }\n        </div>\n    )\n}\n","import React from 'react';\nimport { Icon } from '../icon';\n\nexport const Tag = (props) => {\n    const tagClass = () => {\n        let result = '';\n        let className = {\n            btn: 'tag',\n            lifted: props.lifted ? 'lifted' : '',\n            uppercase: props.uppercase ? 'uppercase' : '',\n            smooth: props.smooth && !props.rounded ? 'smooth' : '',\n            rounded: props.rounded && !props.smooth ? 'rounded' : '',\n            color: props.color && !props.disabled && !props.light && !props.dark ? props.color : '',\n            small: props.small ? 'small' : '',\n            outlined: props.outlined ? 'outlined' : '',\n            className: props.className ? props.className : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    return (\n        <div className={tagClass()} style={{ width: props.width ? props.width : ''}}>\n            {props.iconLeft ? <Icon name={props.iconLeft}/> : ''}\n            {props.value}\n            {props.iconRight ? <Icon name={props.iconRight}/> : ''}\n        </div>\n    )\n}\n","import React, { useEffect, useState, createRef } from 'react'\nimport { Button } from '../button';\nimport { CSSTransition } from 'react-transition-group';\nimport { Tooltip } from '../tooltip';\n\nexport const BackTopBtn = (props) => {\n    const [visible, setVisible] = useState(false);\n    const [breakpoint] = useState(props.breakpoint ? props.breakpoint : 60);\n    const blockRef = createRef();\n\n    const handleScroll = (e) => {\n        if (e.srcElement.scrollTop > breakpoint) setVisible(true)\n        else setVisible(false)\n    }\n\n    useEffect(() => {\n        document.addEventListener('scroll', handleScroll, true);\n        return () => document.removeEventListener('scroll', handleScroll, true);\n    }, ['scroll', document])\n\n    const goTop = () => {\n        if (props.setRef.current) {\n            props.setRef.current.scrollIntoView({\n                behavior: \"smooth\",\n                block: 'start'\n            })\n        }\n    }\n\n    const btnBackTopClass = () => {\n        let result = '';\n        let className = {\n            name: 'btn-back-top',\n            dark: props.dark ? 'dark' : ''\n        }\n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    return (\n        <div \n            className={btnBackTopClass()}\n            ref={blockRef}\n            style={{ \n                right: props.offsetX ? props.offsetX : 25, \n                bottom: props.offsetY ? props.offsetY : 25\n            }}>\n            <CSSTransition\n                in={visible}\n                timeout={500}\n                classNames=\"btn-back-top\"\n                unmountOnExit>\n                {props.tooltip ?\n                    <Tooltip tooltip={props.tooltip}>\n                        <Button \n                            icon=\"arrow-up-bold\"\n                            lifted\n                            size={props.size ? props.size : ''}\n                            onClick={() => goTop()} \n                            light={!props.dark ? true : false}\n                            dark={props.dark ? true : false}/>\n                    </Tooltip> : \n                    <Button \n                        icon=\"arrow-up-bold\"\n                        lifted\n                        size={props.size ? props.size : ''}\n                        onClick={() => goTop()} \n                        light={!props.dark ? true : false}\n                        dark={props.dark ? true : false}/>\n                }\n            </CSSTransition>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { Icon } from '../icon';\nimport { Tooltip } from '../tooltip';\nimport { CSSTransition } from 'react-transition-group';\n\nexport const Collapse = (props) => {\n    const [visible, setVisible] = useState(props.defaultState ? props.defaultState : false);\n\n    const collapseClass = () => {\n        let result = '';\n        let className = {\n            name: 'collapse',\n            border: props.border ? 'bordered' : '',\n            title: props.title ? 'titled' : '',\n            position: !props.title ? (props.position ? props.position : 'right') : '',\n            className: props.className ? props.className : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    return (\n        <div className={collapseClass()}>\n            <div className=\"collapse-trigger\">\n                {props.title ? <span>{props.title}</span> : ''}\n                {props.tooltip ?\n                    <Tooltip tooltip={props.tooltip}>\n                        <Icon name={props.icon ? props.icon : 'chevron-down'}\n                            size={props.iconSize ? props.iconSize : ''}\n                            color={props.iconColor ? props.iconColor : 'gray'}\n                            className={visible ? 'reverse' : ''} \n                            onClick={() => setVisible(!visible)}/>\n                    </Tooltip> : \n                    <Icon name={props.icon ? props.icon : 'chevron-down'}\n                        size={props.iconSize ? props.iconSize : ''}\n                        color={props.iconColor ? props.iconColor : 'gray'}\n                        className={visible ? 'reverse' : ''} \n                        onClick={() => setVisible(!visible)}/>\n                }\n            </div>\n            <CSSTransition\n                in={visible}\n                timeout={150}\n                classNames=\"collapse\"\n                unmountOnExit>\n                <div className=\"collapse-content\"\n                    style={{...props.contentStyles}}>\n                    {props.children}\n                </div>\n            </CSSTransition>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { Button } from '../index';\n\nexport const ButtonGroup = (props) => {\n    const [active, setActive] = useState(props.default);\n\n    const componentClass = () => {\n        let result = '';\n        let className = {\n            btn: 'btn-group',\n            lifted: props.lifted ? 'lifted' : '',\n            icons: props.icon ? 'icons' : '',\n            size: props.size ? props.size : '',\n            className: props.className ? props.className : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    const isActive = (index) => {\n        return index === active ? 'active' : ''\n    }\n\n    const handleChange = (item, index) => {\n        if (props.onChange) props.onChange(item, index)\n        setActive(index)\n    }\n\n    return (\n        <div className={componentClass()}>\n            {props.options.map((item, index) => \n                <Button \n                    key={index}\n                    size={props.size ? props.size : ''}\n                    className={isActive(index)}\n                    name={!props.icon ? item : ''}\n                    icon={props.icon ? item : ''} \n                    color={props.color ? props.color : ''}\n                    onClick={() => handleChange(item, index)}\n                    outlined={props.outlined ? true : false}/>\n            )}\n        </div>\n    )\n}\n","import React from 'react';\nimport { Tag, Icon, Card } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nexport const HomePage = () => {\n    const codeInstallation = \n`# Install package from NPM\n% npm install @assenti/rui-components -S\n\n               or\n\n% yarn add @assenti/rui-components\n`\n    const stylesInstallation = \n`// Import styles in index.js (or your main.js file)\nimport '@assenti/react-ui-components/build/css/main.css';`;\n\n    const codeUsage = \n`import React from 'react';\nimport { Card, Button } from '@assenti/react-ui-components';\n\nfunction App() {\n    return (\n        <div>\n            <Card outlined color=\"primary\" title=\"Button\">\n                <Button color=\"primary\" name=\"Button\" icon=\"search\"/>\n            </Card>\n        </div>\n    );\n} \nexport default App;`\n\n    return (\n        <React.Fragment>\n            <h2 className=\"text-primary\">Welcome to React UI Components</h2>\n            <div className=\"row align-center wrap\">\n                <Tag value={<strong>Main Goal</strong>} color=\"info\"/>\n                <div className=\"col fz-12 fw-bold py-10 px-5\" style={{ minWidth: 400 }}>Create a lot of usefull and maximum reusable UI components for React apps</div>\n            </div>\n            <Tag iconLeft=\"hammer\" value=\"Work in progress...\"/>\n            <Card outlined color=\"primary\" title=\"Install\" className=\"mt-15\">\n                <SyntaxHighlighter language=\"bash\" style={prism}>\n                    {codeInstallation}\n                </SyntaxHighlighter>\n                <br/>\n                <SyntaxHighlighter language=\"js\" style={prism}>\n                    {stylesInstallation}\n                </SyntaxHighlighter>\n            </Card>\n            <Card outlined color=\"primary\" title=\"Usage (A-la-carte)\" className=\"mt-20\">\n                <SyntaxHighlighter language=\"jsx\" style={prism}>\n                    {codeUsage}\n                </SyntaxHighlighter>\n            </Card>\n        </React.Fragment>\n    )\n}\n","import React, { useState, createRef } from 'react';\nimport { Button, Table, Card, Switch, BackTopBtn, Collapse, Tooltip } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst keys = ['property', 'description', 'default', 'type', 'value'];\n    const items = [\n        { \n            property: 'onClick', \n            description: 'Handle button click', \n            default: '', \n            type: 'function',\n            value: 'return a button click event object'\n        },\n        { \n            property: 'name', \n            description: 'Set button name (can be set with icon)', \n            default: '', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'lifted', \n            description: 'Lift up the button', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'color', \n            description: 'Set background and border color of button from list', \n            default: '', \n            type: 'string',\n            value: 'primary | info | success | error | black | secondary'\n        },\n        { \n            property: 'disabled',\n            description: 'Make Button disabled', \n            default: 'false',\n            type: 'boolean', \n            value: 'true | false'\n        },\n        { \n            property: 'loading',\n            description: 'Activate loading and make Button disabled', \n            default: 'false',\n            type: 'boolean', \n            value: 'true | false'\n        },\n        { \n            property: 'rounded', \n            description: 'Make border radius rounded',\n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'smooth',\n            description: 'Set button borders more smooth', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'outlined', \n            description: 'Make button background transparent and outline borders', \n            default: 'false',\n            type: 'boolean', \n            value: 'true | false'\n        },\n        { \n            property: 'uppercase',\n            description: 'Transform text to upper case', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'block', \n            description: 'Fills the parent component width',\n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'size', \n            description: 'Set button size',\n            default: '', \n            type: 'string',\n            value: 'medium | large'},\n        { \n            property: 'icon',\n            description: 'Set icon in a button and give circle shape to it (can be set with name)', \n            default: '', \n            type: 'string',\n            value: 'home | search | etc.'\n        },\n        { \n            property: 'iconLeft',\n            description: 'Change icon position to the left from name', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'iconAllotted',\n            description: 'Allot an icon (has effect with outlined prop)', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'dark',\n            description: 'Set dark mode (can not be used with light prop)', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'light',\n            description: 'Set light mode (can not be used with dark prop)', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'className',\n            description: 'Set a custom css class to component', \n            default: '', \n            type: 'string',\n            value: ''\n        }\n    ]\n\n    const buttonTypes = \n`// Usage examples\nimport React from 'react';\nimport { Button } from '@assenti/react-ui-components';\n\nfunction Example() {\n    return (\n        <div className=\"row align-center\">\n            <Button\n                className=\"mr-5\"\n                color=\"primary\"\n                lifted\n                name=\"Primary\"\n                />\n            <Button\n                smooth\n                className=\"mr-5\"\n                color=\"primary\"\n                name=\"Smooth\"\n                />\n            <Button\n                className=\"mr-5\"\n                outlined\n                color=\"primary\"\n                name=\"Outlined\"\n                />\n            <Button\n                className=\"mr-5\"\n                outlined\n                uppercase\n                color=\"primary\"\n                name=\"uppercase\"\n                />\n            <Button\n                className=\"mr-5\"\n                outlined\n                rounded\n                color=\"primary\"\n                name=\"Rounded\"\n                />\n        </div>\n    )\n}\n`\n\n    const buttonSizes = \n`// Usage examples\nimport React from 'react';\nimport { Button } from '@assenti/react-ui-components';\n\nfunction Example() {\n    return(\n        <div className=\"row align-center\">\n            <Button\n                className=\"mr-5\"\n                color=\"info\"\n                name=\"Default\"\n                />\n            <Button\n                className=\"mr-5\"\n                color=\"info\"\n                size=\"medium\"\n                name=\"Medium\"\n                />\n            <Button\n                className=\"mr-5\"\n                size=\"large\"\n                color=\"info\"\n                name=\"Large\"\n                /> \n            <Button\n                rounded\n                className=\"mr-5\"\n                color=\"info\"\n                name=\"Default\"\n                />\n            <Button\n                rounded\n                outlined\n                uppercase\n                className=\"mr-5\"\n                color=\"info\"\n                size=\"medium\"\n                name=\"Medium\"\n                />\n            <Button\n                rounded\n                uppercase\n                size=\"large\"\n                color=\"info\"\n                name=\"Large\"\n                /> \n        </div>\n    )\n}\n`\n\nconst buttonColors = \n`// Usage examples\nimport React from 'react';\nimport { Button } from '@assenti/react-ui-components';\n\nfunction Example() {\n    return(\n        <div>\n            <Button\n                className=\"mr-5\"\n                color=\"primary\"\n                name=\"Primary\"\n                />\n            <Button\n                className=\"mr-5\"\n                color=\"info\"\n                name=\"Info\"\n                />  \n            <Button\n                className=\"mr-5\"\n                color=\"error\"\n                name=\"Error\"\n                /> \n            <Button\n                className=\"mr-5\"\n                color=\"success\"\n                name=\"Success\"\n                /> \n            <Button\n                className=\"mr-5\"\n                color=\"secondary\"\n                name=\"Secondary\"\n                /> \n            <Button\n                className=\"mr-5\"\n                color=\"black\"\n                name=\"Black\"\n                /> \n            <Button\n                disabled\n                color=\"success\"\n                name=\"Disabled\"\n                />  \n        </div>\n    )\n}\n`\n\n    const blockButtons =\n`// Usage examples\nimport React from 'react';\nimport { Button } from '@assenti/rui-components';\n\nfunction Example() {\n    return (\n        <div style={{ width: 300 }} className=\"mb-10\">\n            <Button\n                block\n                className=\"my-5\"\n                color=\"primary\"\n                name=\"Block button\"\n                />\n            <Button\n                block\n                className=\"my-10\"\n                color=\"primary\"\n                outlined\n                name=\"Block button\"\n                />\n            <Button\n                block\n                rounded\n                outlined\n                className=\"my-5\"\n                color=\"error\"\n                name=\"Block button\"\n                />   \n        </div>\n    )\n}\n`\n\n    const usageIcon =\n`// Usage examples\nimport React from 'react';\nimport { Button, Tooltip } from '@assenti/rui-components';\n\nfunction Example() {\n    return (\n        <div>\n            <div className=\"row align-center my-5\">\n                <Tooltip tooltip=\"Search\">\n                    <Button\n                        className=\"mr-10\"\n                        color=\"primary\"\n                        icon=\"search\"\n                        />\n                </Tooltip>\n                <Tooltip tooltip=\"Menu\">\n                    <Button\n                        outlined\n                        className=\"mr-10\"\n                        color=\"primary\"\n                        icon=\"menu\"\n                        />\n                </Tooltip>\n                <Tooltip tooltip=\"Search\">\n                    <Button\n                        light\n                        className=\"mr-10\"\n                        icon=\"search\"\n                        />\n                </Tooltip>\n            </div>\n            <div className=\"row align-center my-5\">\n                <Button\n                    className=\"mr-10\"\n                    color=\"primary\"\n                    name=\"Search\"\n                    icon=\"search\"\n                    />\n                <Button\n                    className=\"mr-10\"\n                    color=\"info\"\n                    name=\"Home\"\n                    icon=\"home\"\n                    iconLeft\n                    />\n            </div>\n            <div className=\"row align-center my-5\">\n                <Button\n                    iconAllotted\n                    outlined\n                    className=\"mr-10\"\n                    color=\"primary\"\n                    name=\"Search\"\n                    icon=\"search\"\n                    />\n                <Button\n                    iconAllotted\n                    outlined\n                    className=\"mr-10\"\n                    color=\"secondary\"\n                    name=\"Search\"\n                    icon=\"search\"\n                    />\n            </div>\n        </div>\n    )\n}\n`\n\n    const loadingButtons =\n`// Usage examples\nimport React, { useState } from 'react';\nimport { Button, Switch } from '@assenti/rui-components';\n\nfunction Example() {\n    const [loading, setLoading] = useState(true);\n\n    return (\n        <div className=\"row align-center py-20\">\n            <label>Toggle loaders</label>\n            <Switch \n                check={loading} \n                color=\"info\" \n                className=\"ml-10\"\n                onChange={() => setLoading(!loading)}/>\n        </div>\n        <div className=\"row align-center\">\n            <Button\n                outlined\n                className=\"mr-10\"\n                color=\"primary\"\n                loading={loading}\n                icon=\"search\"\n                />\n            <Button\n                className=\"mr-10\"\n                light\n                loading={loading}\n                icon=\"search\"\n                />\n            <Button\n                className=\"mx-10\"\n                color=\"info\"\n                name=\"Home\"\n                icon=\"home\"\n                loading={loading}\n                iconLeft\n                />\n            <Button\n                className=\"mx-10\"\n                color=\"info\"\n                loading={loading}\n                rounded\n                name=\"Button\"\n                />\n            <Button\n                className=\"mx-10\"\n                color=\"info\"\n                loading={loading}\n                rounded\n                outlined\n                name=\"Button\"\n                />\n        </div>\n    )\n}\n`\n\nexport const ButtonPage = () => {\n    const [loading, setLoading] = useState(true);\n    const parentRef = createRef();\n    const api = createRef();\n\n    const goToApi = () => {\n        if (api.current) api.current.scrollIntoView({ behavior: 'smooth', block: 'start' })\n    }\n\n    return (\n        <div className=\"page\" ref={parentRef}>\n            <div className=\"row align-center space-between\">\n                <div className=\"page-title\">Button Component</div>\n                <div onClick={goToApi} className=\"link fz-13 fw-bold\">API</div>\n            </div>\n            <Card outlined color=\"primary\" title=\"Button types\">\n                <div className=\"row wrap align-center\">\n                    <Button\n                        className=\"mr-5\"\n                        color=\"primary\"\n                        lifted\n                        name=\"Primary\"\n                        />\n                    <Button\n                        smooth\n                        className=\"mr-5\"\n                        color=\"primary\"\n                        name=\"Smooth\"\n                        />\n                    <Button\n                        className=\"mr-5\"\n                        outlined\n                        color=\"primary\"\n                        name=\"Outlined\"\n                        />\n                    <Button\n                        className=\"mr-5\"\n                        outlined\n                        uppercase\n                        color=\"primary\"\n                        name=\"uppercase\"\n                        />\n                    <Button\n                        className=\"mr-5\"\n                        outlined\n                        rounded\n                        color=\"primary\"\n                        name=\"Rounded\"\n                        />\n                </div>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {buttonTypes}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <br/>\n            <Card outlined color=\"primary\" title=\"Button sizes\">\n                <div className=\"row wrap align-center\">\n                    <Button\n                        className=\"mr-5\"\n                        color=\"info\"\n                        name=\"Default\"\n                        />\n                    <Button\n                        className=\"mr-5\"\n                        color=\"info\"\n                        size=\"medium\"\n                        name=\"Medium\"\n                        />\n                    <Button\n                        className=\"mr-5\"\n                        size=\"large\"\n                        color=\"info\"\n                        name=\"Large\"\n                        /> \n                    <Button\n                        rounded\n                        className=\"mr-5\"\n                        color=\"info\"\n                        name=\"Default\"\n                        />\n                    <Button\n                        rounded\n                        outlined\n                        uppercase\n                        className=\"mr-5\"\n                        color=\"info\"\n                        size=\"medium\"\n                        name=\"Medium\"\n                        />\n                    <Button\n                        rounded\n                        uppercase\n                        size=\"large\"\n                        color=\"info\"\n                        name=\"Large\"\n                        /> \n                </div>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {buttonSizes}\n                    </SyntaxHighlighter>\n                </Collapse> \n            </Card>\n            <br/>\n            <Card outlined color=\"primary\" title=\"Button colors\">\n                <Button\n                    className=\"mr-5\"\n                    color=\"primary\"\n                    name=\"Primary\"\n                    />\n                <Button\n                    className=\"mr-5\"\n                    color=\"info\"\n                    name=\"Info\"\n                    />  \n                <Button\n                    className=\"mr-5\"\n                    color=\"error\"\n                    name=\"Error\"\n                    /> \n                <Button\n                    className=\"mr-5\"\n                    color=\"success\"\n                    name=\"Success\"\n                    /> \n                <Button\n                    className=\"mr-5\"\n                    color=\"secondary\"\n                    name=\"Secondary\"\n                    /> \n                <Button\n                    className=\"mr-5\"\n                    color=\"black\"\n                    name=\"Black\"\n                    /> \n                <Button\n                    disabled\n                    color=\"success\"\n                    name=\"Disabled\"\n                    /> \n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {buttonColors}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <br/>\n            <Card outlined color=\"primary\" title=\"Block button\">\n                <div style={{ width: 300 }} className=\"mb-10\">\n                    <Button\n                        block\n                        className=\"my-5\"\n                        color=\"primary\"\n                        name=\"Block button\"\n                        />\n                    <Button\n                        block\n                        className=\"my-10\"\n                        color=\"primary\"\n                        outlined\n                        name=\"Block button\"\n                        />\n                    <Button\n                        block\n                        rounded\n                        outlined\n                        className=\"my-5\"\n                        color=\"error\"\n                        name=\"Block button\"\n                        />   \n                </div>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {blockButtons}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <br/>\n            <Card outlined color=\"primary\" title=\"Icon buttons and buttons with icons\">\n                <div className=\"row align-center my-5\">\n                    <Tooltip tooltip=\"Search\">\n                        <Button\n                            className=\"mr-10\"\n                            color=\"primary\"\n                            icon=\"search\"\n                            />\n                    </Tooltip>\n                    <Tooltip tooltip=\"Menu\">\n                        <Button\n                            outlined\n                            className=\"mr-10\"\n                            color=\"primary\"\n                            icon=\"menu\"\n                            />\n                    </Tooltip>\n                    <Tooltip tooltip=\"Search\">\n                        <Button\n                            light\n                            className=\"mr-10\"\n                            icon=\"search\"\n                            />\n                    </Tooltip>\n                </div>\n                <div className=\"row align-center my-5\">\n                    <Button\n                        className=\"mr-10\"\n                        color=\"primary\"\n                        name=\"Search\"\n                        icon=\"search\"\n                        />\n                    <Button\n                        className=\"mr-10\"\n                        color=\"info\"\n                        name=\"Home\"\n                        icon=\"home\"\n                        iconLeft\n                        />\n                </div>\n                <div className=\"row align-center my-5\">\n                    <Button\n                        iconAllotted\n                        iconLeft\n                        outlined\n                        className=\"mr-10\"\n                        color=\"primary\"\n                        name=\"Search\"\n                        icon=\"search\"\n                        />\n                    <Button\n                        iconAllotted\n                        outlined\n                        className=\"mr-10\"\n                        color=\"secondary\"\n                        name=\"Search\"\n                        icon=\"search\"\n                        />\n                </div>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usageIcon}\n                    </SyntaxHighlighter> \n                </Collapse>\n            </Card>\n            <br/>\n            <Card outlined color=\"primary\" title=\"Loading\">\n                <div className=\"row align-center py-20\">\n                    <label>Toggle loaders</label>\n                    <Switch \n                        check={loading} \n                        color=\"info\" \n                        className=\"ml-10\"\n                        onChange={() => setLoading(!loading)}/>\n                </div>\n                <div className=\"row align-center\">\n                    <Button\n                        outlined\n                        className=\"mr-10\"\n                        color=\"primary\"\n                        loading={loading}\n                        icon=\"search\"\n                        />\n                    <Button\n                        className=\"mr-10\"\n                        light\n                        loading={loading}\n                        icon=\"search\"\n                        />\n                    <Button\n                        className=\"mx-10\"\n                        color=\"info\"\n                        name=\"Home\"\n                        icon=\"home\"\n                        loading={loading}\n                        iconLeft\n                        />\n                    <Button\n                        className=\"mx-10\"\n                        color=\"info\"\n                        loading={loading}\n                        rounded\n                        name=\"Button\"\n                        />\n                    <Button\n                        className=\"mx-10\"\n                        color=\"info\"\n                        loading={loading}\n                        rounded\n                        outlined\n                        name=\"Button\"\n                        />\n                </div>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {loadingButtons}\n                    </SyntaxHighlighter>\n                </Collapse> \n            </Card>\n            <BackTopBtn setRef={parentRef} dark/>\n            <h2 ref={api}>API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n","import React, { useState, createRef } from 'react';\nimport { List, ListItem, Button, Checkbox, Table, Card, Tag, Collapse, BackTopBtn } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst simpleList =\n`// Usage examples\nimport React, { useState } from 'react';\nimport { List, ListItem } from '@assenti/rui-components';\nconst names = [\n    { name: 'John Doe', active: false },\n    { name: 'Peter Parker', active: true },\n    { name: 'Tony Stark', active: false },\n    { name: 'Bruce Benner', active: false }\n];\n\nfunction Example() {\n    const [item, setItem] = useState('');\n\n    return (\n        <div>\n            <List>\n                {names.map((item, index) => \n                    <ListItem\n                        isActiveItem={item => item.active} \n                        key={index} \n                        item={item}\n                        itemTitle=\"name\"/>\n                )}\n            </List>\n            <br/>\n            <List size=\"medium\" header=\"Medium size\">\n                {names.map((item, index) => \n                    <ListItem\n                        isActiveItem={item => item.active} \n                        key={index} \n                        item={item}\n                        itemTitle=\"name\"/>\n                )}\n            </List>\n            <br/>\n            <List size=\"large\" header=\"Large size\">\n                {names.map((item, index) => \n                    <ListItem\n                        isActiveItem={item => item.active} \n                        key={index} \n                        item={item}\n                        itemTitle=\"name\"/>\n                )}\n            </List>\n        </div>\n    )\n}\n`\n\n    const darkMode =\n`// Usage examples\nimport React, { useState } from 'react';\nimport { List, ListItem, Card } from '@assenti/rui-components';\nconst heroes = [\n    { hero: 'Captain America', icon: 'shield-account' }, \n    { hero: 'Spider man', icon: 'shield-account' }, \n    { hero: 'Iron man', icon: 'shield-account' }, \n    { hero: 'Hulk', icon: 'shield-account' }\n];\n\nfunction Example() {\n    return (\n        <Card \n            color=\"primary\" \n            title=\"Simple list with dark mode, hover and icons\" \n            dark\n            header=\"Marvel Avengers\"\n            className=\"px-0\">\n            <List items={itemsComplex} itemTitle=\"hero\" dark hover>\n                {heroes.map((item, index) => \n                    <ListItem \n                        key={index} \n                        item={item}\n                        icon={item.icon}\n                        itemTitle=\"hero\"\n                        hover/>\n                )}\n            </List>\n        </Card>\n    )\n}\n`\n\n    const checkboxList =\n`// Usage examples\nimport React, { useState } from 'react';\nimport { List, ListItem, Checkbox } from '@assenti/rui-components';\nconst names = [\n    { name: 'Steve Rogers', hero: 'Captain America', check: false }, \n    { name: 'Peter Parker', hero: 'Spider man', check: false }, \n    { name: 'Tony Stark', hero: 'Iron man', check: false }, \n    { name: 'Bruce Benner', hero: 'Hulk', check: false }\n];\n\nfunction Example() {\n    const [selected, setSelected] = useState([]);\n\n    const selectOne = (item) => {\n        if (isSelected(item, 'hero')) {\n            setSelected(selected => selected.filter(_item => _item.hero !== item.hero))\n        } else setSelected([...selected, item]);\n    }\n\n    const isSelected = (item, prop) => {\n        let result = false\n        if (prop) {\n            for (const select of selected) {\n                if (item[prop] === select[prop]) result = true \n            }\n        }\n        return result\n    }\n\n    return (\n        <div>\n            <List header={'Selected Marvel avengers: ' + selected.length}>\n                {names.map((item, index) => \n                    <ListItem \n                        key={index} \n                        item={item}\n                        itemTitle=\"hero\"\n                        isActiveItem={item => isSelected(item, 'hero')}\n                        hover\n                        checkbox={<Checkbox \n                            checked={isSelected(item, 'hero')}\n                            onChange={() => selectOne(item)}/>}/>\n                )}\n            </List>\n        </div>\n    )\n}\n`\n\n    const controlsList =\n`// Usage examples\nimport React, { useState } from 'react';\nimport { List, ListItem, Button, Tag } from '@assenti/rui-components';\nconst names = [\n    { name: 'Steve Rogers', hero: 'Captain America', icon: 'shield-account' }, \n    { name: 'Peter Parker', hero: 'Spider man', icon: 'shield-account' }, \n    { name: 'Tony Stark', hero: 'Iron man', icon: 'shield-account' }, \n    { name: 'Bruce Benner', hero: 'Hulk', icon: 'shield-account' }\n];\n\nfunction Example() {\n    return (\n        <div>\n            <List>\n                {names.map((item, index) => \n                    <ListItem \n                        key={index} \n                        item={item}\n                        icon={item.icon} \n                        itemTitle=\"name\"\n                        subTitle={<Tag small color=\"info\" value={item.hero}/>}\n                        controls={\n                            <React.Fragment>\n                                <Button small color=\"light\" className=\"mr-10\" icon=\"edit\"/>\n                                <Button small color=\"light\" icon=\"close\"/>\n                            </React.Fragment>\n                        }/>\n                )}\n            </List>\n        </div>\n    )\n}\n`\n\nconst names = [\n    { name: 'John Doe', active: false },\n    { name: 'Peter Parker', active: true },\n    { name: 'Tony Stark', active: false },\n    { name: 'Bruce Benner', active: false }\n];\n\nconst itemsComplexInitial = [\n    { name: 'Steve Rogers', hero: 'Captain America', icon: 'shield-account', check: false }, \n    { name: 'Peter Parker', hero: 'Spider man', icon: 'shield-account', check: false }, \n    { name: 'Tony Stark', hero: 'Iron man', icon: 'shield-account', check: false }, \n    { name: 'Bruce Benner', hero: 'Hulk', icon: 'shield-account', check: false }\n];\n\nconst keys = ['property', 'description', 'default', 'type', 'value'];\nconst items = [\n    { \n        property: 'header', \n        description: 'Set list header',\n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'size', \n        description: 'Set list item size',\n        default: '', \n        type: 'string',\n        value: 'medium | large'\n    },\n    { \n        property: 'dark',\n        description: 'Set dark mode (can not be used with light prop)', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'className',\n        description: 'Set a custom css class to component', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n]\n\nconst items2 = [\n    { \n        property: 'render', \n        description: 'You can pass your own custom element', \n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'itemTitle', \n        description: 'If you pass items as array of objects pass the key of field that you want to display', \n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'subTitle', \n        description: 'Set subtitle in list item (It can be just text or Tag and etc.)', \n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'isActiveItem', \n        description: 'Define the active item and set active class (return boolean)', \n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'roundedActive', \n        description: 'Set hover and active list item rounded', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'checkbox',\n        description: 'A placeholder for checkbox (Expect a checkbox element or Component)', \n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'icon',\n        description: 'Set icon before the text in list item', \n        default: '', \n        type: 'string',\n        value: 'home | search | etc. (see icon names list in docs)'\n    },\n    { \n        property: 'controls',\n        description: 'A placeholder for item controls like buttons or etc.', \n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'noDivider',\n        description: 'Remove the divider line between items', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'hover',\n        description: 'Set background color on item hover', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'className',\n        description: 'Set a custom css class to component', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n]\n\nexport const ListPage = () => {\n    const [itemsComplex] = useState(itemsComplexInitial);\n    const [selected, setSelected] = useState([]);\n    const listApi = createRef();\n    const listItemApi = createRef();\n    const parent = createRef();\n\n    const goListApi = () => {\n        if (listApi.current) listApi.current.scrollIntoView({ behavior: 'smooth', block: 'start' })\n    }\n\n    const goListItemApi = () => {\n        if (listItemApi.current) listItemApi.current.scrollIntoView({ behavior: 'smooth', block: 'start' })\n    }\n\n    const selectOne = (item) => {\n        if (isSelected(item, 'hero')) {\n            setSelected(selected => selected.filter(_item => _item.hero !== item.hero))\n        } else setSelected([...selected, item]);\n    }\n\n    const isSelected = (item, prop) => {\n        let result = false\n        if (prop) {\n            for (const select of selected) {\n                if (item[prop] === select[prop]) result = true \n            }\n        }\n        return result\n    }\n    \n    return (\n        <div className=\"page\" ref={parent}>\n            <div className=\"row align-center space-between\">\n                <div className=\"page-title\">List, ListItem Components</div>\n                <div className=\"row\">\n                    <div className=\"link fz-13 fw-bold mr-10\" onClick={() => goListApi()}>List API</div>\n                    <div className=\"link fz-13 fw-bold\" onClick={() => goListItemApi()}>ListItem API</div>\n                </div>\n            </div>\n            <Card \n                outlined \n                className=\"px-0\"\n                color=\"primary\" \n                title=\"Simple list with active item\">\n                <List header=\"Default size\">\n                    {names.map((item, index) => \n                        <ListItem\n                            isActiveItem={item => item.active} \n                            key={index} \n                            item={item}\n                            itemTitle=\"name\"/>\n                    )}\n                </List>\n                <br/>\n                <List size=\"medium\" header=\"Medium size\">\n                    {names.map((item, index) => \n                        <ListItem\n                            isActiveItem={item => item.active} \n                            key={index} \n                            item={item}\n                            itemTitle=\"name\"/>\n                    )}\n                </List>\n                <br/>\n                <List size=\"large\" header=\"Large size\">\n                    {names.map((item, index) => \n                        <ListItem\n                            isActiveItem={item => item.active} \n                            key={index} \n                            item={item}\n                            itemTitle=\"name\"/>\n                    )}\n                </List>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {simpleList}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <br/>\n            <Card outlined color=\"primary\" title=\"Dark mode\">\n                <Card \n                    color=\"primary\" \n                    title=\"Simple list with dark mode, hover and icons\" \n                    dark\n                    className=\"px-0\">\n                    <List header=\"Marvel Avengers\" items={itemsComplex} itemTitle=\"hero\" dark hover>\n                        {itemsComplex.map((item, index) => \n                            <ListItem \n                                key={index} \n                                item={item}\n                                icon={item.icon}\n                                itemTitle=\"hero\"\n                                hover/>\n                        )}\n                    </List>\n                </Card>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {darkMode}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <br/>\n            <Card \n                outlined \n                color=\"primary\" \n                title=\"List with checkbox\"\n                className=\"px-0\">\n                <List header={'Selected Marvel avengers: ' + selected.length}>\n                    {itemsComplex.map((item, index) => \n                        <ListItem \n                            key={index} \n                            item={item}\n                            itemTitle=\"hero\"\n                            isActiveItem={item => isSelected(item, 'hero')}\n                            hover\n                            checkbox={<Checkbox \n                                checked={isSelected(item, 'hero')}\n                                onChange={() => selectOne(item)}/>}/>\n                    )}\n                </List>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {checkboxList}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <br/>\n            <Card outlined color=\"primary\" title=\"List with controls and subtitles\">\n                <List>\n                    {itemsComplex.map((item, index) => \n                        <ListItem \n                            key={index} \n                            item={item}\n                            icon={item.icon} \n                            itemTitle=\"name\"\n                            subTitle={<Tag small color=\"info\" value={item.hero}/>}\n                            controls={\n                                <React.Fragment>\n                                    <Button small color=\"light\" className=\"mr-10\" icon=\"edit\"/>\n                                    <Button small color=\"light\" icon=\"close\"/>\n                                </React.Fragment>\n                            }/>\n                    )}\n                </List>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {controlsList}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <h2 ref={listApi}>List API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n            <h2 ref={listItemApi}>ListItem API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items2}\n                index={true}\n                itemTitles={keys}/>\n            <BackTopBtn setRef={parent} dark size=\"medium\"/>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Tooltip, Button, Card, Table, Collapse } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\n    const usage = \n`// Usage examples\nimport React from 'react';\nimport { Tooltip, Button } from '@assenti/react-ui-components';\n\nfunction Example() {\n    return (\n        <div className=\"row align-center\">\n            <Tooltip tooltip=\"Search\" className=\"mr-10\">\n                <Button icon=\"search\" color=\"info\"/>\n            </Tooltip>\n            <Tooltip tooltip=\"Button\">\n                <Button color=\"info\" name=\"Button\" onAction={() =>{}}/>\n            </Tooltip>\n        </div>\n    )\n}\n`\nconst keys = ['property', 'description', 'default', 'type', 'value'];\nconst items = [\n    { \n        property: 'tooltip',\n        description: 'Set tooltip text', \n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'position', \n        description: 'Set tooltip position', \n        default: 'top', \n        type: 'string',\n        value: 'top | bottom | right | left'\n    },\n    { \n        property: 'className',\n        description: 'Set a custom css class to component', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n]\n\nexport const TooltipPage = () => {\n    return (\n        <div className=\"page\">\n            <div className=\"row align-center space-between\">\n                <div className=\"page-title\">Tooltip Component</div>\n            </div>\n            <Card outlined color=\"primary\" title=\"Tooltips\">\n                <div className=\"row align-center py-20\">\n                    <Tooltip tooltip=\"Top position\" className=\"mr-20\">\n                        <Button icon=\"search\" color=\"info\"/>\n                    </Tooltip>\n                    <Tooltip tooltip=\"Bottom position\" position=\"bottom\" className=\"mr-20\">\n                        <Button color=\"info\" name=\"Button\" onAction={() =>{}}/>\n                    </Tooltip>\n                    <Tooltip tooltip=\"Left position\" position=\"left\" className=\"mr-20\">\n                        <Button icon=\"menu\" light/>\n                    </Tooltip>\n                    <Tooltip tooltip=\"Right position\" position=\"right\">\n                        <Button icon=\"rocket\" color=\"error\"/>\n                    </Tooltip>\n                </div>\n                <br/>\n                <Collapse \n                    icon=\"code\" \n                    iconSize={18}\n                    contentStyles={{ padding: 0 }}\n                    tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usage}\n                    </SyntaxHighlighter> \n                </Collapse>\n            </Card>\n            <h2 id=\"tooltip-api\">API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n","import React, { useState, createRef } from 'react';\nimport { Pagination, InputField, Table, Card, Collapse, BackTopBtn } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst keys = ['property', 'description', 'default', 'type', 'value'];\nconst items = [\n    { \n        property: 'itemsCount', \n        description: 'Pass items count', \n        default: '', \n        type: 'number',\n        value: ''\n    },\n    { \n        property: 'perPageVariants', \n        description: 'Set per page preset variants', \n        default: '[10, 20, 50, 100]', \n        type: 'number[]',\n        value: ''\n    },\n    { \n        property: 'perPage', \n        description: 'Set per page value', \n        default: '10', \n        type: 'number',\n        value: ''\n    },\n    { \n        property: 'onPerPageSelect', \n        description: 'Invokes on per page selection (return perPage value)', \n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'perPageText', \n        description: 'Set \"10 / page\" text', \n        default: 'page', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'current', \n        description: 'Set pagination default current page', \n        default: '1', \n        type: 'number',\n        value: ''\n    },\n    { \n        property: 'color', \n        description: 'Set color of pagination from list', \n        default: 'primary', \n        type: 'string',\n        value: 'primary | info | success | error'\n    },\n    { \n        property: 'rounded', \n        description: 'Make border radius rounded',\n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'size', \n        description: 'Set pagination size',\n        default: '', \n        type: 'string',\n        value: 'medium | large'\n    },\n    { \n        property: 'className',\n        description: 'Set a custom css class to component', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n]\n\nconst defaultUsage =\n`// Usage examples\nimport React, { useState } from 'react';\nimport { Pagination, InputField } from '@assenti/rui-components';\n\nfunction Example() {\n    const [itemsCount, setItemsCount] = useState(100);\n\n    return (\n        <div>\n            <InputField \n                value={itemsCount}\n                color=\"info\"\n                type=\"number\"\n                width={150}\n                label=\"Input items count\" \n                onChange={e => setItemsCount(e.target.value)}/>\n            <Pagination\n                itemsCount={itemsCount}\n                color=\"primary\"\n                className=\"pa-5\"\n                pageText=\"module\"/>\n            <Pagination\n                itemsCount={itemsCount}\n                color=\"info\"\n                current={2}\n                className=\"pa-5\"\n                perPage={20}/>\n            <Pagination\n                itemsCount={itemsCount}\n                color=\"success\"\n                className=\"pa-5\"\n                current={3}\n                perPage={20}/>\n            <Pagination\n                itemsCount={itemsCount}\n                color=\"error\"\n                className=\"pa-5\"\n                current={4}/> \n        </div>\n    )\n}\n`\n\nconst mediumSize =\n`// Usage examples\nimport React from 'react';\nimport { Pagination } from '@assenti/rui-components';\n\nfunction Example() {\n    return (\n        <div>\n            <Pagination\n                itemsCount={itemsCount}\n                color=\"info\"\n                className=\"pa-5\"\n                size=\"medium\"\n                rounded/>\n        </div>\n    )\n}\n`\n\nconst largeSize =\n`// Usage examples\nimport React from 'react';\nimport { Pagination } from '@assenti/rui-components';\n\nfunction Example() {\n    return (\n        <div>\n            <Pagination\n                itemsCount={itemsCount}\n                color=\"info\"\n                className=\"pa-5\"\n                size=\"large\"/>\n        </div>\n    )\n}\n`\n\nexport const PaginationPage = () => {\n    const [itemsCount, setItemsCount] = useState(100);\n    const api = createRef();\n    const parent = createRef();\n\n    const goToApi = () => {\n        if (api.current) api.current.scrollIntoView({ behavior: 'smooth', block: 'start' })\n    }\n\n    return (\n        <div className=\"page\" ref={parent}>\n            <div className=\"row align-center space-between\">\n                <div className=\"page-title\">Pagination Component</div>\n                <div onClick={goToApi} className=\"link fz-13 fw-bold\">API</div>\n            </div>\n            <Card outlined color=\"primary\" title=\"Default pagination (in different colors)\">\n                <InputField \n                    value={itemsCount}\n                    color=\"info\"\n                    type=\"number\"\n                    width={150}\n                    label=\"Input items count\" \n                    onChange={e => setItemsCount(e.target.value)}/>\n                <Pagination\n                    itemsCount={itemsCount}\n                    color=\"primary\"\n                    className=\"pa-5\"\n                    pageText=\"module\"/>\n                <Pagination\n                    itemsCount={itemsCount}\n                    color=\"info\"\n                    current={2}\n                    className=\"pa-5\"\n                    perPage={20}/>\n                <Pagination\n                    itemsCount={itemsCount}\n                    color=\"success\"\n                    className=\"pa-5\"\n                    current={3}\n                    perPage={20}/>\n                <Pagination\n                    itemsCount={itemsCount}\n                    color=\"error\"\n                    className=\"pa-5\"\n                    current={4}/>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {defaultUsage}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <br/>\n            <Card outlined color=\"primary\" title=\"Medium size rounded pagination\">\n                <Pagination\n                    itemsCount={itemsCount}\n                    color=\"info\"\n                    className=\"pa-5\"\n                    size=\"medium\"\n                    rounded/>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {mediumSize}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <br/>\n            <Card outlined color=\"primary\" title=\"Large size pagination\">\n                <Pagination\n                    itemsCount={itemsCount}\n                    color=\"info\"\n                    className=\"pa-5\"\n                    size=\"large\"/>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {largeSize}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <BackTopBtn size=\"medium\" dark setRef={parent}/>\n            <h2 ref={api}>API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { Checkbox, Table, Collapse, Card } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst keys = ['property', 'description', 'default', 'type', 'value'];\nconst items = [\n    { \n        property: 'checked', \n        description: 'define the checkbox state', \n        default: '', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'onChange', \n        description: 'handle checkbox change', \n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'disable', \n        description: 'Make checkbox disabled', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'color', \n        description: 'Set color of checkbox from list', \n        default: '', \n        type: 'string',\n        value: 'primary | info | success | error'\n    },\n    { \n        property: 'label', \n        description: 'Set checkbox label', \n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'className', \n        description: 'Set a custom css class to component', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n]\n\n    const usage =\n`// Usage examples\nimport React, { useState } from 'react';\nimport { Checkbox } from '@assenti/rui-components';\n\nfunction Example() {\n    const [check, setCheck] = useState(true);\n\n    return (\n        <div className=\"row\">\n            <Checkbox\n                className=\"mr-20\" \n                checked={check} \n                onChange={() => setCheck(!check)}/>\n            <Checkbox\n                className=\"mr-20\" \n                checked={check} \n                color=\"primary\" \n                onChange={() => setCheck(!check)}/>\n            <Checkbox \n                className=\"mr-20\"\n                checked={check} \n                color=\"info\" \n                onChange={() => setCheck(!check)}/>\n            <Checkbox \n                className=\"mr-20\"\n                checked={check} \n                color=\"error\" \n                onChange={() => setCheck(!check)}/>\n            <Checkbox \n                className=\"mr-20\"\n                checked={check} \n                disabled\n                onChange={() => setCheck(!check)}/>\n        </div>\n    )\n}\n`\n\n    const usageLabel =\n`// Usage examples\nimport React, { useState } from 'react';\nimport { Checkbox } from '@assenti/rui-components';\n\nfunction Example() {\n    const [checkLabel, setCheckLabel] = useState(true);\n\n    return (\n        <div className=\"row\">\n            <Checkbox\n                className=\"mr-20\"\n                label=\"Checkbox\"\n                color=\"primary\" \n                checked={checkLabel} \n                onChange={() => setCheckLabel(!checkLabel)}/>\n            <Checkbox\n                label=\"Checkbox\"\n                color=\"info\" \n                checked={checkLabel} \n                onChang e={() => setCheckLabel(!checkLabel)}/>\n        </div>\n    )\n}\n`\n\nexport const CheckboxPage = () => {\n    const [check, setCheck] = useState(true);\n    const [checkLabel, setCheckLabel] = useState(true);\n\n    return (\n        <div className=\"page\">\n            <div className=\"page-title\">Checkbox Component</div>\n            <Card outlined color=\"primary\" title=\"Simple checkboxes\">\n                <div className=\"row\">\n                    <Checkbox\n                        className=\"mr-20\" \n                        checked={check} \n                        onChange={() => setCheck(!check)}/>\n                    <Checkbox\n                        className=\"mr-20\" \n                        checked={check} \n                        color=\"primary\" \n                        onChange={() => setCheck(!check)}/>\n                    <Checkbox \n                        className=\"mr-20\"\n                        checked={check} \n                        color=\"info\" \n                        onChange={() => setCheck(!check)}/>\n                    <Checkbox \n                        className=\"mr-20\"\n                        checked={check} \n                        color=\"error\" \n                        onChange={() => setCheck(!check)}/>\n                    <Checkbox \n                        className=\"mr-20\"\n                        checked={check} \n                        disabled\n                        onChange={() => setCheck(!check)}/>\n                </div>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usage}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <br/>\n            <Card outlined color=\"primary\" title=\"Checkboxes with label\">\n                <div className=\"row\">\n                    <Checkbox\n                        className=\"mr-20\"\n                        label=\"Checkbox\"\n                        color=\"primary\" \n                        checked={checkLabel} \n                        onChange={() => setCheckLabel(!checkLabel)}/>\n                    <Checkbox\n                        label=\"Checkbox\"\n                        color=\"info\" \n                        checked={checkLabel} \n                        onChange={() => setCheckLabel(!checkLabel)}/>\n                </div>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usageLabel}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            \n            <h2>API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n","import React, { createRef } from 'react';\nimport { Card, List, ListItem, Table, Icon, Collapse, BackTopBtn } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst itemsComplexInitial = [\n    { name: 'Steve Rogers', hero: 'Captain America', icon: 'account', check: false }, \n    { name: 'Peter Parker', hero: 'Spider man', icon: 'account', check: false }, \n    { name: 'Tony Stark', hero: 'Iron man', icon: 'account', check: false }, \n    { name: 'Bruce Benner', hero: 'Hulk', icon: 'account', check: false }\n];\n\nconst keys = ['property', 'description', 'default', 'type', 'value'];\nconst items = [\n    { \n        property: 'header', \n        description: 'Set card header',\n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'footer',\n        description: 'Set card footer', \n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'width',\n        description: 'Set card width', \n        default: '', \n        type: 'string | number',\n        value: '100, \"100%\", \"100px\"'\n    },\n    { \n        property: 'padding',\n        description: 'Set card padding', \n        default: '15px', \n        type: 'string | number',\n        value: ''\n    },\n    { \n        property: 'img',\n        description: 'Set card image', \n        default: '', \n        type: 'string | base64',\n        value: ''\n    },\n    { \n        property: 'flat', \n        description: 'Remove card box shadow',\n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'dark',\n        description: 'Set dark mode', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'outlined',\n        description: 'Set card borders outlined', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'color',\n        description: 'Set card borders color from colors list', \n        default: '', \n        type: 'string',\n        value: 'primary | info | success | error'\n    },\n    { \n        property: 'title',\n        description: 'Set outlined card title (has effect only with outlined prop)', \n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'className',\n        description: 'Set a custom css class to component', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n]\n\n    const usage =\n`// Usage examples\nimport React from 'react';\nimport { Card, List, ListItem } from '@assenti/rui-components';\n\nconst names = [\n    { name: 'Steve Rogers', hero: 'Captain America', icon: 'account' }, \n    { name: 'Peter Parker', hero: 'Spider man', icon: 'account' }, \n    { name: 'Tony Stark', hero: 'Iron man', icon: 'account' }, \n    { name: 'Bruce Benner', hero: 'Hulk', icon: 'account' }\n];\n\nfunction Example() {\n    return (\n        <Card header=\"Marvel heroes\">\n            <List>\n                {names.map((item, index) => \n                    <ListItem \n                        key={index}\n                        item={item}\n                        hover\n                        itemTitle=\"name\"/>\n                )}\n            </List>\n        </Card>\n    )\n}\n`\n\n    const usageFlat =\n`// Usage examples\nimport React from 'react';\nimport { Card, List, ListItem } from '@assenti/rui-components';\n\nconst names = [\n    { name: 'Steve Rogers', hero: 'Captain America', icon: 'account' }, \n    { name: 'Peter Parker', hero: 'Spider man', icon: 'account' }, \n    { name: 'Tony Stark', hero: 'Iron man', icon: 'account' }, \n    { name: 'Bruce Benner', hero: 'Hulk', icon: 'account' }\n];\n\nfunction Example() {\n    return (\n        <Card header=\"Marvel heroes\" flat>\n            <List>\n                {names.map((item, index) => \n                    <ListItem \n                        key={index}\n                        item={item}\n                        hover\n                        itemTitle=\"name\"/>\n                )}\n            </List>\n        </Card>\n    )\n}\n`\n\n    const usageImage =\n`// Usage examples\nimport React from 'react';\nimport { Card, Icon } from '@assenti/rui-components';\n\nlet cards = [1,2,3];\n\nfunction Example() {\n    return (\n        <div className=\"row space-around\">\n            {cards.map((item, index) => \n                <Card \n                    key={index}\n                    className=\"ma-5 col\"\n                    width={200} \n                    img={<div className=\"row justify-center\">\n                            <Icon name=\"react\" size={50} color=\"#42a5f5\"/>\n                        </div>}\n                    footer={'Some description ' + item}>\n                    <p>Some title {item}</p>\n                </Card>\n            )}\n        </div>\n    )\n}\n`\n\n    const usageOutlined =\n`// Usage examples\nimport React from 'react';\nimport { Card, List, ListItem } from '@assenti/rui-components';\n\nconst names = [\n    { name: 'Steve Rogers', hero: 'Captain America', icon: 'account' }, \n    { name: 'Peter Parker', hero: 'Spider man', icon: 'account' }, \n    { name: 'Tony Stark', hero: 'Iron man', icon: 'account' }, \n    { name: 'Bruce Benner', hero: 'Hulk', icon: 'account' }\n];\n\nfunction Example() {\n    return (\n        <Card outlined title=\"Marvel Avengers\" color=\"primary\">\n            <List>\n                {names.map((item, index) => \n                    <ListItem \n                        key={index}\n                        item={item}\n                        hover\n                        itemTitle=\"name\"/>\n                )}\n            </List>\n        </Card>\n    )\n}\n`\n\nexport const CardPage = () => {\n    const api = createRef();\n    const parentRef = createRef();\n\n    const imageCards = () => {\n        let cards = [1,2,3]\n        return (\n            <div className=\"row space-around\">\n                {cards.map((item, index) => \n                    <Card \n                        key={index}\n                        className=\"ma-5 col\"\n                        width={200} \n                        img={<div className=\"row justify-center\"><Icon name=\"react\" size={50} color=\"#42a5f5\"/></div>}\n                        footer={'Some description ' + item}>\n                        <p>Some title {item}</p>\n                    </Card>\n                )}\n            </div>\n        )\n    }\n\n    const goToApi = () => {\n        if (api.current) api.current.scrollIntoView({ behavior: 'smooth', block: 'start' })\n    }\n\n    return (\n        <div className=\"page\" ref={parentRef}>\n            <div className=\"row align-center space-between\">\n                <div className=\"page-title\">Card Component</div>\n                <a className=\"fz-13 fw-bold\" onClick={goToApi}>API</a>\n            </div>\n            <h3>Card with header</h3>\n            <Card header=\"Marvel heroes\">\n                <List>\n                    {itemsComplexInitial.map((item, index) => \n                        <ListItem \n                            key={index}\n                            item={item}\n                            hover\n                            itemTitle=\"name\"/>\n                    )}\n                </List>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usage}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <h3>Card flat</h3>\n            <Card header=\"Marvel heroes\" flat>\n                <List>\n                    {itemsComplexInitial.map((item, index) => \n                        <ListItem \n                            key={index}\n                            item={item}\n                            hover\n                            itemTitle=\"name\"/>\n                    )}\n                </List>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usageFlat}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <h3>Card with image</h3>\n            {imageCards()}\n            <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                <SyntaxHighlighter language=\"jsx\" style={prism}>\n                    {usageImage}\n                </SyntaxHighlighter>\n            </Collapse>\n            <h3>Outlined Cards with titles</h3>\n            <Card outlined title=\"Marvel Avengers\" color=\"primary\">\n                <List>\n                    {itemsComplexInitial.map((item, index) => \n                        <ListItem \n                            key={index}\n                            item={item}\n                            hover\n                            itemTitle=\"name\"/>\n                    )}\n                </List>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usageOutlined}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <BackTopBtn dark setRef={parentRef}/>\n            <h2 ref={api}>API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { Badge, Card, Table, Icon, Button, Collapse } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst keys = ['property', 'description', 'default', 'type', 'value'];\n    const items = [\n        { \n            property: 'value', \n            description: 'Set badge value', \n            default: '', \n            type: 'string | number',\n            value: ''\n        },\n        { \n            property: 'color', \n            description: 'Set badge color', \n            default: '', \n            type: 'string',\n            value: 'primary | info | success | error'\n        },\n        { \n            property: 'rounded', \n            description: 'Set rounded badge borders', \n            default: '', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'parent', \n            description: 'Parent component for badge', \n            default: '', \n            type: 'any',\n            value: ''\n        },\n        { \n            property: 'visible', \n            description: 'Badge visible state', \n            default: '', \n            type: 'boolean',\n            value: 'true | false'\n        }\n    ]\n\n    const usage =\n`// Usage examples\nimport React from 'react';\nimport { Badge, Button } from '@assenti/rui-components';\n\nfunction Example() {\n    const [badge, setBadge] = useState(true);\n\n    return (\n        <div className=\"row align-center\">\n            <Badge \n                color=\"info\" \n                value={100} \n                className=\"mr-20\"\n                parent={<Icon size={24} name=\"account\"/>}/>\n            <Badge \n                color=\"error\" \n                value={10} \n                rounded\n                className=\"mr-20\"\n                parent={<Icon size={24} name=\"smartphone\"/>}/>\n            <Badge \n                color=\"error\" \n                value={10} \n                rounded\n                visible={badge}\n                className=\"mr-20\"\n                parent={<Icon size={24} name=\"smartphone\"/>}/>\n            <Button name=\"Toggle badge\" color=\"info\" onClick={() => setBadge(!badge)}/>\n        </div>\n    )\n}\n`\n\nexport const BadgePage = () => {\n    const [badge, setBadge] = useState(true);\n\n    return (\n        <div className=\"page\">\n            <div className=\"page-title\">Badge Component</div>\n            <Card>\n                <div className=\"row align-center\">\n                    <Badge \n                        color=\"info\" \n                        value={100} \n                        className=\"mr-20\"\n                        parent={<Icon size={24} name=\"account\"/>}/>\n                    <Badge \n                        color=\"error\" \n                        value={10} \n                        rounded\n                        className=\"mr-20\"\n                        parent={<Icon size={24} name=\"smartphone\"/>}/>\n                    <Badge \n                        color=\"error\" \n                        value={10} \n                        rounded\n                        visible={badge}\n                        className=\"mr-20\"\n                        parent={<Icon size={24} name=\"smartphone\"/>}/>\n                    <Button name=\"Toggle badge\" color=\"info\" onClick={() => setBadge(!badge)}/>\n                </div>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usage}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <h2>API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n","import React, { createRef, useState } from 'react';\nimport { Table, Icon, Card, Collapse, Tooltip, InputField } from '../components';\nimport { description } from '../../package.json';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst icons = [\n    'delete', \n    'search', \n    'home', \n    'edit', \n    'github', \n    'close', \n    'chevron-double-right', \n    'chevron-double-left',\n    'code',\n    'chip',\n    'account',\n    'person',\n    'shield-account',\n    'chevron-down',\n    'chevron-up',\n    'chevron-next', \n    'chevron-back', \n    'sun',\n    'moon',\n    'star',\n    'star-outline',\n    'smartphone',\n    'hammer',\n    'city',\n    'empty',\n    'download',\n    'menu',\n    'file-outline' ,\n    'email',\n    'rocket',\n    'key',\n    'exit-to-app',\n    'arrow-up-bold',\n    'format-align-left',\n    'format-align-center',\n    'format-align-right',\n    'brush',\n    'lock',\n    'filter',\n    'sort-ascending',\n    'sort-descending',\n    'content-copy',\n    'toy-brick'\n]\n\nconst keys = ['property', 'description', 'default', 'type', 'value'];\nconst items = [\n    { \n        property: 'name', \n        description: 'Set icon name', \n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'onClick', \n        description: 'Handle click event', \n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'title', \n        description: 'Set title', \n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'color', \n        description: 'Set icon color', \n        default: '', \n        type: 'string',\n        value: 'hex | rgb() | css preset colors'\n    },\n    { \n        property: 'size', \n        description: 'Set icon size',\n        default: '24', \n        type: 'number',\n        value: ''\n    },\n    { \n        property: 'className',\n        description: 'Set a custom css class to component', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n]\n\n    const usage = \n`// Usage examples\nimport React from 'react';\nimport { Icon } from '@assenti/rui-components';\n\nfuncation Example() {\n    return (\n        <div>\n            <Icon name=\"search\" size={20} color=\"red\"/>\n            <Icon name=\"home\" size={20} color=\"#1976d2\"/>\n            <Icon name=\"account\" size={20} color=\"#rgb(0,0,5)\"/>\n        </div>\n    )\n}\n`\n\nexport const IconPage = () => {\n    const api = createRef();\n    const [search, setSearch] = useState('');\n\n    const goToApi = () => {\n        if (api.current) api.current.scrollIntoView({ behavior: 'smooth', block: 'start' })\n    }\n\n    const filteredIcons = () => {\n        if (search) {\n            return icons.filter(item => item.toLowerCase().includes(search.toLowerCase()))\n        } else {\n            return icons\n        }\n    }\n\n    return (\n        <div className=\"page\">\n            <div className=\"row align-center space-between\">\n                <div className=\"page-title\">Icon Component</div>\n                <a onClick={goToApi} className=\"fz-13 fw-bold\">API</a>\n            </div>\n            <p><strong>{description}</strong> use primarily\n                <a href=\"https://materialdesignicons.com/\"\n                    target=\"blank_\"\n                    className=\"ml-5\">Material Design Icons</a>\n            </p>\n            <br/>\n            <Card outlined color=\"primary\" title=\"Icons collection\">\n                <div className=\"pa-10\">\n                    <InputField \n                        value={search}\n                        prefix={<Icon name=\"search\"/>}\n                        placeholder=\"Search icons\"\n                        color=\"primary\"\n                        onChange={e => setSearch(e.target.value)}/>\n                </div>\n                {filteredIcons().map((item, index) => \n                    <div key={index} \n                        style={{ width: 35, height: 35 }}\n                        className=\"row-inline text-center column justify-center align-center pa-5 ma-10 hoverable\">\n                        <Tooltip tooltip={item}>\n                            <Icon name={item}/>\n                        </Tooltip>\n                        {/* <div className=\"mt-5 fz-8\">{item}</div> */}\n                    </div>\n                )}\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usage}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <h2 ref={api}>API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Card, Collapse, Table } from '../components'\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\n    const usage = \n`// Usage examples\nimport React from 'react';\nimport { Collapse } from '@assenti/react-ui-components';\n\nfunction Example() {\n    return (\n        <div>\n            <Collapse defaultState={true}>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n                    tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\n                    quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\n                    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\n                    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non\n                    proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n                </p>\n            </Collapse>\n        </div>\n    )\n}\n`\nconst keys = ['property', 'description', 'default', 'type', 'value'];\nconst items = [\n    { \n        property: 'defaultState',\n        description: 'Set default state of collapse', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'border',\n        description: 'Set border and highlight trigger area', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'title',\n        description: 'Set collapse title', \n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'icon',\n        description: 'Set icon from icons list', \n        default: 'chevron-down', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'iconPosition', \n        description: 'Set collapse icon position', \n        default: 'right', \n        type: 'string',\n        value: 'right | left'\n    },\n    { \n        property: 'iconColor',\n        description: 'Set icon color', \n        default: 'gray', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'iconSize',\n        description: 'Set icon size', \n        default: '24px', \n        type: 'number',\n        value: ''\n    },\n    { \n        property: 'className',\n        description: 'Set a custom css class to component', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n]\n\nexport const CollapsePage = () => {\n    return (\n        <div className=\"page\">\n            <div className=\"row align-center space-between\">\n                <div className=\"page-title\">Collapse Component</div>\n                <a href=\"#collapse-api\" className=\"fz-13 fw-bold\">API</a>\n            </div>\n            <Card outlined color=\"primary\" title=\"Collapse Component usage\">\n                <Collapse defaultState={true} border>\n                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n                        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\n                        quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\n                        consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\n                        cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non\n                        proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n                    </p>\n                </Collapse>\n                <br/>\n                <Collapse \n                    icon=\"code\" \n                    iconSize={18}\n                    contentStyles={{ padding: 0 }}\n                    tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usage}\n                    </SyntaxHighlighter> \n                </Collapse>\n            </Card>\n            <h2 id=\"collapse-api\">API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n","import React from 'react';\nimport { ButtonGroup, Card, Table, Collapse } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\n    const types = \n`// Usage examples\nimport React from 'react';\nimport { ButtonGroup } from '@assenti/react-ui-components';\n\nconst langs = ['KZ', 'RU', 'EN'];\nconst nums = [1, 2, 3];\nconst icons = ['format-align-left', 'format-align-center', 'format-align-right'];\n\nfunction Example() {\n    return (\n        <div className=\"row align-center my-10\">\n            <ButtonGroup \n                default={0} \n                options={langs} \n                color=\"secondary\"\n                outlined\n                className=\"mr-10\"/>\n            <ButtonGroup \n                default={0} \n                options={nums} \n                color=\"info\" \n                className=\"mr-10\"/>\n            <ButtonGroup \n                default={0} \n                icon\n                options={icons} \n                color=\"black\" \n                outlined/>\n        </div>\n    )\n}\n`\n\n    const sizes = \n`// Usage examples\nimport React from 'react';\nimport { ButtonGroup } from '@assenti/react-ui-components';\n\nconst icons = ['format-align-left', 'format-align-center', 'format-align-right'];\n\nfunction Example() {\n    return (\n        <div>\n            <ButtonGroup \n                options={icons}\n                default={0} \n                lifted\n                icon color=\"secondary\" \n                className=\"ma-10\"/>\n            <ButtonGroup \n                options={icons}\n                default={0} \n                lifted\n                size=\"medium\"\n                className=\"ma-10\"\n                icon color=\"secondary\"/>\n            <ButtonGroup \n                options={icons}\n                default={0} \n                lifted\n                size=\"large\"\n                className=\"ma-10\"\n                icon color=\"secondary\"/>\n        </div>\n    )\n}\n`\n\nconst keys = ['property', 'description', 'default', 'type', 'value'];\nconst items = [\n    { \n        property: 'options',\n        description: 'Button group options', \n        default: '', \n        type: 'string[] | number[]',\n        value: ''\n    },\n    { \n        property: 'onChange', \n        description: 'Handle selection (return item and index)', \n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'default',\n        description: 'Set default active item', \n        default: '', \n        type: 'number',\n        value: ''\n    },\n    { \n        property: 'size',\n        description: 'Set buttons group size', \n        default: '', \n        type: 'string',\n        value: 'medium | large'\n    },\n    { \n        property: 'icon', \n        description: 'Set group type to icon', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'color', \n        description: 'Set buttons color', \n        default: '', \n        type: 'string',\n        value: 'primary | info | success | error | secondary | black'\n    },\n    { \n        property: 'outlined', \n        description: 'Make buttons group background transparent and outline borders', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'lifted', \n        description: 'Lift up the button group', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'className',\n        description: 'Set a custom css class to component', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n];\nconst langs = ['KZ', 'RU', 'EN'];\nconst nums = [1, 2, 3];\nconst icons = ['format-align-left', 'format-align-center', 'format-align-right'];\n\n\nexport const ButtonGroupPage = () => {\n    return (\n        <div className=\"page\">\n            <div className=\"row align-center space-between\">\n                <div className=\"page-title\">ButtonGroup Component</div>\n            </div>\n            <Card outlined color=\"primary\" title=\"ButtonGroup types\">\n                <div className=\"row align-center my-10\">\n                    <ButtonGroup \n                        default={0} \n                        options={langs} \n                        color=\"secondary\"\n                        outlined\n                        className=\"mr-10\"/>\n                    <ButtonGroup \n                        default={0} \n                        options={nums} \n                        color=\"info\" \n                        className=\"mr-10\"/>\n                    <ButtonGroup \n                        default={0} \n                        icon\n                        options={icons} \n                        color=\"black\" \n                        outlined/>\n                </div>\n                <Collapse \n                    icon=\"code\" \n                    iconSize={18}\n                    contentStyles={{ padding: 0 }}\n                    tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {types}\n                    </SyntaxHighlighter> \n                </Collapse>\n            </Card>\n            <br/>\n            <Card outlined color=\"primary\" title=\"ButtonGroup sizes\">\n                <ButtonGroup \n                    options={icons}\n                    default={0} \n                    lifted\n                    icon color=\"secondary\" \n                    className=\"ma-10\"/>\n                <ButtonGroup \n                    options={icons}\n                    default={0} \n                    lifted\n                    size=\"medium\"\n                    className=\"ma-10\"\n                    icon color=\"secondary\"/>\n                <ButtonGroup \n                    options={icons}\n                    default={0} \n                    lifted\n                    size=\"large\"\n                    className=\"ma-10\"\n                    icon color=\"secondary\"/>\n                <Collapse \n                    icon=\"code\" \n                    iconSize={18}\n                    contentStyles={{ padding: 0 }}\n                    tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {sizes}\n                    </SyntaxHighlighter> \n                </Collapse>\n            </Card>\n            <h2>API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Card, Table } from '../components';\n\nconst colors = [\n    { name: 'primary', value: '#1678c2' },\n    { name: 'info', value: '#42a5f5' },\n    { name: 'error', value: '#f44336' },\n    { name: 'success', value: '#1aaa55' },\n    { name: 'yellow', value: '#feda24' },\n    { name: 'warning', value: '#ff3d00' },\n    { name: 'night', value: '#303846' },\n    { name: 'light', value: '#fafafa' },\n    { name: 'lightgray', value: '#f0f2f5' },\n    { name: 'dark', value: '#4d4d4d' },\n    { name: 'gray', value: '#e0e0e0' }\n]\n\nconst keys = ['Color', 'Name', 'HEX']\n\nexport const ColorsPage = () => {\n    return (\n        <div>\n            <div className=\"row align-center space-between\">\n                <div className=\"page-title\">Colors set</div>\n            </div>\n            <Card outlined color=\"primary\" title=\"Colors set\">\n                <p>Colors set that used in styles.</p>\n                <Table\n                    bordered\n                    headers={keys}\n                    items={colors}\n                    itemTitles={[<div style={{\n                        backgroundColor: '#1678c2',\n                        width: 80,\n                        height: 40\n                    }}></div>, 'name', 'value']}/>\n            </Card>\n        </div>\n    )\n}\n","import { HomePage } from './pages/HomePage';\nimport { ButtonPage } from './pages/ButtonPage';\nimport { DropdownPage } from './pages/DropdownPage';\nimport { ListPage } from './pages/ListPage';\nimport { InputsPage } from './pages/InputsPage';\nimport { DrawerPage } from './pages/DrawerPage';\nimport { TooltipPage } from './pages/TooltipPage';\nimport { PaginationPage } from './pages/PaginationPage';\nimport { SelectPage } from './pages/SelectPage';\nimport { TablePage } from './pages/TablePage';\nimport { ModalPage } from './pages/ModalPage';\nimport { CheckboxPage } from './pages/CheckboxPage';\nimport { CardPage } from './pages/CardPage';\nimport { SwitchPage } from './pages/SwitchPage';\nimport { TagPage } from './pages/TagPage';\nimport { BadgePage } from './pages/BadgePage';\nimport { RadioPage } from './pages/RadioPage';\nimport { IconPage } from './pages/IconPage';\nimport { PreloaderPage } from './pages/PreloaderPage';\nimport { BackTopBtnPage } from './pages/BackTopBtnPage';\nimport { CollapsePage } from './pages/CollapsePage';\nimport { ButtonGroupPage } from './pages/ButtonGroupPage';\nimport { ColorsPage } from './pages/ColorsPage';\n\nexport const routes = [\n    { path: '/', name: 'Get started', Component: HomePage, icon: 'rocket' },\n    { path: '/btns', name: 'Button', Component: ButtonPage },\n    { path: '/icon', name: 'Icon', Component: IconPage },\n    { path: '/dropdown', name: 'Dropdown', Component: DropdownPage },\n    { path: '/lists', name: 'List', Component: ListPage },\n    { path: '/inputs', name: 'Input', Component: InputsPage },\n    { path: '/drawer', name: 'Drawer', Component: DrawerPage },\n    { path: '/tooltip', name: 'Tooltip', Component: TooltipPage },\n    { path: '/pagination', name: 'Pagination', Component: PaginationPage },\n    { path: '/select', name: 'Select', Component: SelectPage },\n    { path: '/table', name: 'Table', Component: TablePage },\n    { path: '/modal', name: 'Modal', Component: ModalPage },\n    { path: '/checkbox', name: 'Checkbox', Component: CheckboxPage },\n    { path: '/radio', name: 'Radio Group', Component: RadioPage },\n    { path: '/switch', name: 'Switch', Component: SwitchPage },\n    { path: '/card', name: 'Card', Component: CardPage },\n    { path: '/tag', name: 'Tag', Component: TagPage },\n    { path: '/badge', name: 'Badge', Component: BadgePage },\n    { path: '/preloader', name: 'Preloader', Component: PreloaderPage },\n    { path: '/backtopbtn', name: 'BackTopBtn', Component: BackTopBtnPage },\n    { path: '/collapse', name: 'Collapse', Component: CollapsePage },\n    { path: '/buttonGroup', name: 'ButtonGroup', Component: ButtonGroupPage },\n    { path: '/colors', name: 'Colors', Component: ColorsPage }\n]","import React, { useState, createRef } from 'react';\nimport { Dropdown, Button, InputField, Card, Table, Tag, Icon, List, ListItem, BackTopBtn, Collapse } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nexport const DropdownPage = () => {\n    const [item, setItem] = useState('');\n    const [item2, setItem2] = useState('');\n    const parentRef = createRef();\n\n    const keys = ['property', 'description', 'default', 'type', 'value'];\n    const items = [\n        { \n            property: 'content', \n            description: 'Dropdown content', \n            default: '', \n            type: 'any',\n            value: ''\n        },\n        { \n            property: 'trigger', \n            description: 'Trigger element (Button, InputField & etc.)',\n            default: '', \n            type: 'any',\n            value: ''\n        },\n        { \n            property: 'width', \n            description: 'Set Dropdown content width',\n            default: '', \n            type: 'string | number',\n            value: ''\n        },\n        { \n            property: 'minWidth', \n            description: 'Set Dropdown content minWidth',\n            default: '', \n            type: 'string | number',\n            value: ''\n        },\n        { \n            property: 'position', \n            description: 'Set Dropdown content position',\n            default: 'left', \n            type: 'string',\n            value: 'centered | right'\n        },\n        { \n            property: 'leftOffset', \n            description: 'Set Dropdown content offset from left side',\n            default: '0', \n            type: 'number',\n            value: ''\n        },\n        { \n            property: 'rightOffset', \n            description: 'Set Dropdown content offset from right side',\n            default: '0', \n            type: 'number',\n            value: ''\n        },\n        { \n            property: 'className',\n            description: 'Set a custom css class to component', \n            default: '', \n            type: 'string',\n            value: ''\n        }\n    ]\n\n    const heroes = [\n        { name: 'Steve Rogers', hero: 'Captain America', icon: 'account', check: false }, \n        { name: 'Peter Parker', hero: 'Spider man', icon: 'account', check: false }, \n        { name: 'Tony Stark', hero: 'Iron man', icon: 'account', check: false }, \n        { name: 'Bruce Benner', hero: 'Hulk', icon: 'account', check: false }\n    ];\n\n    const usage =\n`// Usage examples\nimport React, { useState } from 'react';\nimport { Dropdown, Button, Tag } from '@assenti/rui-components';\nconst heroes = [\n    { hero: 'Captain America' }, \n    { hero: 'Spider man' }, \n    { hero: 'Iron man' }, \n    { hero: 'Hulk' }\n];\n\nfunction Example() {\n    const [item, setItem] = useState('');\n\n    return (\n        <div>\n            <Dropdown\n                width={250}\n                content={\n                    <List dense>\n                        {heroes.map((item, index) => \n                            <ListItem\n                                key={index}\n                                hover \n                                onClick={() => setItem(item.hero)}\n                                item={item}\n                                itemTitle=\"hero\"/>\n                        )}\n                    </List>\n                }\n                itemTitle=\"name\"\n                trigger={<Button\n                    color=\"info\"\n                    name=\"Button\"/>}\n                    />\n            <Tag value={\\`Your select: \\${item}\\`} color={item ? 'error' : ''} className=\"ml-10\"/>\n        </div>\n    )\n}\n`\n\n    const usageInput =\n`// Usage examples\nimport React, { useState } from 'react';\nimport { Dropdown, InputField, Icon, List, ListItem } from '@assenti/rui-components';\nconst heroes = [\n    { hero: 'Captain America' }, \n    { hero: 'Spider man' }, \n    { hero: 'Iron man' }, \n    { hero: 'Hulk' }\n];\n\nfunction Example() {\n    const [item, setItem] = useState('');\n\n    return (\n        <div>\n            <Dropdown\n                content={\n                    <List dense>\n                        {heroes.map((item, index) => \n                            <ListItem\n                                key={index}\n                                hover \n                                onClick={() => setItem(item.hero)}\n                                item={item}\n                                itemTitle=\"hero\"/>\n                        )}\n                    </List>\n                }\n                trigger={<InputField\n                        color=\"info\"\n                        prefix={<Icon name=\"shield-account\"/>}\n                            value={item}\n                            placeholder=\"Choose a hero\"/>}\n                            />\n        </div>\n    )\n}\n`\n\n    const usageIcon =\n`// Usage examples\nimport React from 'react';\nimport { Dropdown, Button, Icon } from '@assenti/rui-components';\n\nfunction Example() {\n    return (\n        <div className=\"row space-around\">\n            <Dropdown\n                width={180}\n                content={\n                    <div className=\"row column align-center justify-center px-15 pt-15 pb-20\">\n                        <Icon name=\"account\" color=\"gray\" size={80}/>\n                        <span className=\"text-center text-gray fz-9 pt-5\">John Doe</span>\n                        <hr className=\"my-10 full-width\"/>\n                        <Button name=\"Sign out\" color=\"error\" icon=\"exit-to-app\" iconLeft/>\n                    </div>\n                }\n                trigger={<Button\n                            light\n                            icon=\"account\"/>}/>\n            <Dropdown\n                width={180}\n                position=\"centered\"\n                content={\n                    <div className=\"row column align-center justify-center px-15 pt-15 pb-20\">\n                        <Icon name=\"account\" color=\"gray\" size={80}/>\n                        <span className=\"text-center text-gray fz-9 pt-5\">John Doe</span>\n                        <hr className=\"my-10 full-width\"/>\n                        <Button name=\"Sign out\" color=\"error\" icon=\"exit-to-app\" iconLeft/>\n                    </div>\n                }\n                trigger={<Button\n                            light\n                            icon=\"account\"/>}/>\n            <Dropdown\n                width={180}\n                position=\"right\"\n                content={\n                    <div className=\"row column align-center justify-center px-15 pt-15 pb-20\">\n                        <Icon name=\"account\" color=\"gray\" size={80}/>\n                        <span className=\"text-center text-gray fz-9 pt-5\">John Doe</span>\n                        <hr className=\"my-10 full-width\"/>\n                        <Button name=\"Sign out\" color=\"error\" icon=\"exit-to-app\" iconLeft/>\n                    </div>\n                }\n                trigger={<Button\n                            light\n                            icon=\"account\"/>}/>\n        </div>\n    )\n}\n`\n\n    return (\n        <div className=\"page\" ref={parentRef}>\n            <div className=\"row align-center space-between\">\n                <div className=\"page-title\">Dropdown Component</div>\n                <a href=\"#dropdown-api\" className=\"fz-13 fw-bold\">API</a>\n            </div>\n            <Card outlined color=\"primary\" title=\"Dropdown on Button\">\n                <div className=\"row align-center\">\n                    <Dropdown\n                        width={250}\n                        content={\n                            <List dense>\n                                {heroes.map((item, index) => \n                                    <ListItem\n                                        key={index}\n                                        hover \n                                        onClick={() => setItem(item.hero)}\n                                        item={item}\n                                        itemTitle=\"hero\"/>\n                                )}\n                            </List>\n                        }\n                        itemTitle=\"name\"\n                        trigger={<Button\n                            color=\"info\"\n                            name=\"Button\"/>}/>\n                    <Tag value={`Your select: ${item}`} color={item ? 'error' : ''} className=\"ml-10\"/>\n                </div>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usage}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <br/>\n            <Card outlined color=\"primary\" title=\"Dropdown on InputField\">\n                <div className=\"row mb-10\">\n                    <Dropdown\n                        content={\n                            <List dense>\n                                {heroes.map((item, index) => \n                                    <ListItem\n                                        key={index}\n                                        hover \n                                        onClick={() => setItem2(item.hero)}\n                                        item={item}\n                                        itemTitle=\"hero\"/>\n                                )}\n                            </List>\n                        }\n                        trigger={<InputField\n                                color=\"info\"\n                                prefix={<Icon name=\"shield-account\"/>}\n                                value={item2}\n                                placeholder=\"Choose a hero\"/>}/>\n                </div>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usageInput}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <br/>\n            <Card outlined color=\"primary\" title=\"Dropdown on Icon button\">\n                <div className=\"row space-around\">\n                    <Dropdown\n                        width={180}\n                        content={\n                            <div className=\"row column align-center justify-center px-15 pt-15 pb-20\">\n                                <Icon name=\"account\" color=\"gray\" size={80}/>\n                                <span className=\"text-center text-gray fz-9 pt-5\">John Doe</span>\n                                <hr className=\"my-10 full-width\"/>\n                                <Button name=\"Sign out\" color=\"error\" icon=\"exit-to-app\" iconLeft/>\n                            </div>\n                        }\n                        trigger={<Button\n                                    light\n                                    icon=\"account\"/>}/>\n                    <Dropdown\n                        width={180}\n                        position=\"centered\"\n                        content={\n                            <div className=\"row column align-center justify-center px-15 pt-15 pb-20\">\n                                <Icon name=\"account\" color=\"gray\" size={80}/>\n                                <span className=\"text-center text-gray fz-9 pt-5\">John Doe</span>\n                                <hr className=\"my-10 full-width\"/>\n                                <Button name=\"Sign out\" color=\"error\" icon=\"exit-to-app\" iconLeft/>\n                            </div>\n                        }\n                        trigger={<Button\n                                    light\n                                    icon=\"account\"/>}/>\n                    <Dropdown\n                        width={180}\n                        position=\"right\"\n                        content={\n                            <div className=\"row column align-center justify-center px-15 pt-15 pb-20\">\n                                <Icon name=\"account\" color=\"gray\" size={80}/>\n                                <span className=\"text-center text-gray fz-9 pt-5\">John Doe</span>\n                                <hr className=\"my-10 full-width\"/>\n                                <Button name=\"Sign out\" color=\"error\" icon=\"exit-to-app\" iconLeft/>\n                            </div>\n                        }\n                        trigger={<Button\n                                    light\n                                    icon=\"account\"/>}/>\n                </div>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usageIcon}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <BackTopBtn setRef={parentRef} dark/>\n            <h2 id=\"dropdown-api\">API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { InputField, Uploader, Icon, Card, Button, Table, Collapse } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nexport const InputsPage = () => {\n    const [first, setFirst] = useState('');\n    const [second, setSecond] = useState('');\n    const [files, setFiles] = useState('');\n\n    const keys = ['property', 'description', 'default', 'type', 'value'];\n    const items = [\n        { \n            property: 'onChange', \n            description: 'Handle input value change', \n            default: '', \n            type: 'function',\n            value: 'return a input change event object'\n        },\n        { \n            property: 'value', \n            description: 'Input value', \n            default: '', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'lifted', \n            description: 'Lift up the input field', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'color', \n            description: 'Set color of input field from list', \n            default: '', \n            type: 'string',\n            value: 'primary | info | success | error | black'\n        },\n        { \n            property: 'disabled',\n            description: 'Make input field disabled', \n            default: 'false',\n            type: 'boolean', \n            value: 'true | false'},\n        { \n            property: 'rounded', \n            description: 'Make border radius rounded',\n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'smooth',\n            description: 'Set input field borders more smooth', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'uppercase',\n            description: 'Transform text to upper case', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'size', \n            description: 'Set input field size',\n            default: '', \n            type: 'string',\n            value: 'medium | large'\n        },\n        { \n            property: 'prefix',\n            description: 'Set prefix', \n            default: '', \n            type: 'any',\n            value: ''\n        },\n        { \n            property: 'suffix',\n            description: 'Set suffix', \n            default: '', \n            type: 'any',\n            value: ''\n        },\n        { \n            property: 'width',\n            description: 'Set InputField width', \n            default: '', \n            type: 'string | number',\n            value: ''\n        },\n        { \n            property: 'required',\n            description: 'Set input required', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'readOnly',\n            description: 'Set input readOnly', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'className',\n            description: 'Set a custom css class to component', \n            default: '', \n            type: 'string',\n            value: ''\n        }\n    ]\n\n    const itemsUploader = [\n        { \n            property: 'onChange', \n            description: 'Handle files values', \n            default: '', \n            type: 'function',\n            value: 'Return array of files'\n        },\n        { \n            property: 'value', \n            description: 'State value that holds uploaded file(-s)', \n            default: '', \n            type: 'File[]',\n            value: ''\n        },\n        { \n            property: 'lifted', \n            description: 'Lift up the uploader', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'color', \n            description: 'Set color from list', \n            default: '', \n            type: 'string',\n            value: 'primary | info | success | error'\n        },\n        { \n            property: 'disabled',\n            description: 'Make uploader disabled', \n            default: 'false',\n            type: 'boolean', \n            value: 'true | false'},\n        { \n            property: 'rounded', \n            description: 'Make border radius rounded',\n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'smooth',\n            description: 'Set input field borders more smooth', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'size', \n            description: 'Set input field size',\n            default: '', \n            type: 'string',\n            value: 'medium | large'\n        },\n        { \n            property: 'multiple', \n            description: 'Allow choosing multiple files',\n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'accept', \n            description: 'Set accepted MIME types for files',\n            default: '', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'width',\n            description: 'Set Uploader width', \n            default: '', \n            type: 'string | number',\n            value: ''\n        },\n        { \n            property: 'required',\n            description: 'Set Uploader required', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'title',\n            description: 'Set Uploader title', \n            default: '', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'className',\n            description: 'Set a custom css class to component', \n            default: '', \n            type: 'string',\n            value: ''\n        }\n    ]\n\n    const handleFileDelete = (name) => {\n        setFiles(files => files.filter(item => item.name !== name))\n    }\n\n    const inputTypes = \n`// Usage examples\nimport React, { useState } from 'react';\nimport { InputField } from '@assenti/react-ui-components';\n\nfunction Example() {\n    const [first, setFirst] = useState('');\n\n    return (\n        <div className=\"row wrap\">\n            <div className=\"col\">\n                <InputField\n                    label=\"Standard input with clear button and hint\"\n                    placeholder=\"Input a text\" \n                    value={first}\n                    color=\"primary\"\n                    width=\"300px\"\n                    hint=\"Some hint\"\n                    onClear={() => setFirst('')} \n                    onChange={e => setFirst(e.target.value)}/>\n                <InputField\n                    label=\"Smooth input with prefix, clear button with lifted prop\"\n                    placeholder=\"Input a text\" \n                    value={first}\n                    smooth\n                    lifted\n                    color=\"primary\"\n                    prefix={<Icon name=\"search\"/>}\n                    width=\"300px\"\n                    onClear={() => setFirst('')} \n                    onChange={e => setFirst(e.target.value)}/>\n                <InputField\n                    label=\"Rounded input field with prefix, suffix and clear button\"\n                    placeholder=\"Defaul size input field\" \n                    value={first}\n                    rounded\n                    prefix={<Icon name=\"search\"/>}\n                    suffix={<Icon name=\"edit\"/>}\n                    color=\"info\"\n                    width=\"300px\"\n                    onClear={() => setFirst('')} \n                    onChange={e => setFirst(e.target.value)}/>\n                <InputField\n                    label=\"Disabled input field\"\n                    placeholder=\"Defaul size rounded input field\" \n                    value={first}\n                    rounded\n                    disabled\n                    prefix={<Icon name=\"account\"/>}\n                    color=\"info\"\n                    width=\"300px\"\n                    onClear={() => setFirst('')} \n                    onChange={e => setFirst(e.target.value)}/>\n            </div>\n            <div className=\"col\">\n                <InputField\n                    label=\"Standard input field with suffix button\"\n                    placeholder=\"Search...\" \n                    value={first}\n                    color=\"primary\"\n                    width=\"100%\"\n                    prefix={<Icon name=\"search\"/>}\n                    suffix={<Button name=\"Search\" color=\"primary\" onClick={() => {}}/>}\n                    onClear={() => setFirst('')} \n                    onChange={e => setFirst(e.target.value)}/>\n                <InputField\n                    label=\"Smooth input field with suffix button\"\n                    placeholder=\"Search...\" \n                    value={first}\n                    color=\"primary\"\n                    width=\"100%\"\n                    smooth\n                    prefix={<Icon name=\"search\"/>}\n                    suffix={<Button name=\"Search\" color=\"primary\" onClick={() => {}}/>}\n                    onClear={() => setFirst('')} \n                    onChange={e => setFirst(e.target.value)}/>\n                <InputField\n                    label=\"Rounded input field with suffix button\"\n                    placeholder=\"Search...\" \n                    value={first}\n                    color=\"error\"\n                    width=\"100%\"\n                    rounded\n                    prefix={<Icon name=\"search\"/>}\n                    suffix={<Button name=\"Search\" color=\"error\" onClick={() => {}}/>}\n                    onClear={() => setFirst('')} \n                    onChange={e => setFirst(e.target.value)}/>\n            </div>\n        </div>\n    )\n}\n`\n\n    return (\n        <div className=\"page\">\n            <div className=\"row align-center space-between\">\n                <div className=\"page-title\">InputField, Uploader Components</div>\n                <div className=\"row\">\n                    <a href=\"#input-field-api\" className=\"fz-13 fw-bold mr-10\">InputField API</a>\n                    <a href=\"#uploader-api\" className=\"fz-13 fw-bold\">Uploader API</a>\n                </div>\n            </div>\n            <h3>Input types</h3>\n            <Card>\n                <div className=\"row wrap\">\n                    <div className=\"col\">\n                        <InputField\n                            label=\"Standard input with clear button and hint\"\n                            placeholder=\"Input a text\" \n                            value={first}\n                            color=\"primary\"\n                            width=\"300px\"\n                            hint=\"Some hint\"\n                            onClear={() => setFirst('')} \n                            onChange={e => setFirst(e.target.value)}/>\n                        <InputField\n                            label=\"Smooth input with prefix, clear button with lifted prop\"\n                            placeholder=\"Input a text\" \n                            value={first}\n                            smooth\n                            lifted\n                            color=\"primary\"\n                            prefix={<Icon name=\"search\"/>}\n                            width=\"300px\"\n                            onClear={() => setFirst('')} \n                            onChange={e => setFirst(e.target.value)}/>\n                        <InputField\n                            label=\"Rounded input field with prefix, suffix and clear button\"\n                            placeholder=\"Defaul size input field\" \n                            value={first}\n                            rounded\n                            prefix={<Icon name=\"search\"/>}\n                            suffix={<Icon name=\"edit\"/>}\n                            color=\"info\"\n                            width=\"300px\"\n                            onClear={() => setFirst('')} \n                            onChange={e => setFirst(e.target.value)}/>\n                        <InputField\n                            label=\"Disabled input field\"\n                            placeholder=\"Defaul size rounded input field\" \n                            value={first}\n                            rounded\n                            disabled\n                            prefix={<Icon name=\"account\"/>}\n                            color=\"info\"\n                            width=\"300px\"\n                            onClear={() => setFirst('')} \n                            onChange={e => setFirst(e.target.value)}/>\n                    </div>\n                    <div className=\"col\">\n                        <InputField\n                            label=\"Standard input field with suffix button\"\n                            placeholder=\"Search...\" \n                            value={first}\n                            color=\"primary\"\n                            width=\"100%\"\n                            prefix={<Icon name=\"search\"/>}\n                            suffix={<Button name=\"Search\" color=\"primary\" onClick={() => {}}/>}\n                            onClear={() => setFirst('')} \n                            onChange={e => setFirst(e.target.value)}/>\n                        <InputField\n                            label=\"Smooth input field with suffix button\"\n                            placeholder=\"Search...\" \n                            value={first}\n                            color=\"primary\"\n                            width=\"100%\"\n                            smooth\n                            prefix={<Icon name=\"search\"/>}\n                            suffix={<Button name=\"Search\" color=\"primary\" onClick={() => {}}/>}\n                            onClear={() => setFirst('')} \n                            onChange={e => setFirst(e.target.value)}/>\n                        <InputField\n                            label=\"Rounded input field with suffix button\"\n                            placeholder=\"Search...\" \n                            value={first}\n                            color=\"error\"\n                            width=\"100%\"\n                            rounded\n                            prefix={<Icon name=\"search\"/>}\n                            suffix={<Button name=\"Search\" color=\"error\" onClick={() => {}}/>}\n                            onClear={() => setFirst('')} \n                            onChange={e => setFirst(e.target.value)}/>\n                    </div>\n                </div>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {inputTypes}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <h3>Input sizes</h3>\n            <Card>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <InputField\n                            color=\"info\"\n                            placeholder=\"777 777 77 77\" \n                            value={second} \n                            label=\"Default input field with label and prefix\"\n                            width=\"300px\"\n                            prefix={<Icon name=\"smartphone\"/>}\n                            onClear={() => setSecond('')} \n                            onChange={e => setSecond(e.target.value)}/>\n                        <InputField\n                            size=\"medium\"\n                            color=\"info\"\n                            label=\"Medium input field with label and prefix\"\n                            prefix={<Icon name=\"smartphone\"/>}\n                            placeholder=\"777 777 77 77\" \n                            value={second} \n                            width=\"300px\"\n                            onClear={() => setSecond('')} \n                            onChange={e => setSecond(e.target.value)}/>\n                        <InputField\n                            size=\"large\"\n                            color=\"info\"\n                            label=\"Large input field with label and prefix\"\n                            prefix={<Icon name=\"smartphone\"/>}\n                            placeholder=\"777 777 77 77 \" \n                            value={second} \n                            width=\"300px\"\n                            onClear={() => setSecond('')} \n                            onChange={e => setSecond(e.target.value)}/>\n                    </div>\n                    <div className=\"col\">\n                        <InputField\n                            color=\"info\"\n                            placeholder=\"777 777 77 77\" \n                            value={second}\n                            rounded \n                            label=\"Rounded default size input field with label and prefix\"\n                            width=\"300px\"\n                            prefix={<Icon name=\"smartphone\"/>}\n                            onClear={() => setSecond('')} \n                            onChange={e => setSecond(e.target.value)}/>\n                        <InputField\n                            size=\"medium\"\n                            color=\"info\"\n                            rounded \n                            label=\"Rounded medium size input field with label and prefix\"\n                            prefix={<Icon name=\"smartphone\"/>}\n                            placeholder=\"777 777 77 77\" \n                            value={second} \n                            width=\"300px\"\n                            onClear={() => setSecond('')} \n                            onChange={e => setSecond(e.target.value)}/>\n                        <InputField\n                            size=\"large\"\n                            color=\"info\"\n                            rounded \n                            label=\"Rounded large size input field with label and prefix\"\n                            prefix={<Icon name=\"smartphone\"/>}\n                            placeholder=\"777 777 77 77 \" \n                            value={second} \n                            width=\"300px\"\n                            onClear={() => setSecond('')} \n                            onChange={e => setSecond(e.target.value)}/>\n                    </div>\n                </div>\n            </Card>\n            <h3>Uploader</h3>\n            <Card>\n                <span>Rounded Uploader</span>\n                <Uploader\n                    label=\"File upload\"\n                    value={files}\n                    rounded\n                    title=\"Сhoose a file please\"\n                    color=\"info\"\n                    multiple\n                    onDelete={handleFileDelete}\n                    width={300}\n                    onChange={files => setFiles(files)}/>\n                <br/>\n                <Uploader\n                    label=\"File upload\"\n                    value={files}\n                    rounded\n                    title=\"Сhoose a file please\"\n                    color=\"success\"\n                    multiple\n                    onDelete={handleFileDelete}\n                    width={300}\n                    onChange={files => setFiles(files)}/>\n                <br/>\n                <span>Medium size Uploader</span>\n                <Uploader\n                    label=\"File upload\"\n                    value={files}\n                    title=\"Сhoose a file please\"\n                    size=\"medium\"\n                    color=\"info\"\n                    multiple\n                    onDelete={handleFileDelete}\n                    width={300}\n                    onChange={files => setFiles(files)}/>\n                <br/>\n                <span>Disabled lifted Uploader</span>\n                <Uploader\n                    label=\"File upload\"\n                    value={files}\n                    title=\"Сhoose a file please\"\n                    color=\"info\"\n                    disabled\n                    lifted\n                    onDelete={handleFileDelete}\n                    width={300}\n                    onChange={files => setFiles(files)}/>\n            </Card>\n            {/* <h3>Textareas</h3>\n            <Card>\n                <TextareaField\n                    label=\"Textarea field\"\n                    placeholder=\"Textarea field\" \n                    value={first}\n                    width=\"300px\"\n                    onClear={() => setFirst('')} \n                    onChange={e => setFirst(e.target.value)}/>\n\n                <TextareaField\n                    rows={4}\n                    color=\"error\"\n                    width=\"300px\"\n                    label=\"Textarea field\"\n                    placeholder=\"Textarea field\" \n                    value={first}\n                    onClear={() => setFirst('')} \n                    onChange={e => setFirst(e.target.value)}/>\n            </Card> */}\n            <h2 id=\"input-field-api\">InputField API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n            <h2 id=\"uploader-api\">Uploader API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={itemsUploader}\n                index={true}\n                itemTitles={keys}/>\n            \n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { Drawer, List, ListItem, Button, Tooltip, Table, Card } from '../components';\n\nexport const DrawerPage = () => {\n    const [drawer, setDrawer] = useState(true);\n    const [drawerMin, setDrawerMin] = useState(false);\n    const [content, setContent] = useState('');\n\n    const stack = [\n        { name: 'JavaScript', icon: 'code' }, \n        { name: 'TypeScript', icon: 'code' },\n        { name: 'React', icon: 'code' },\n        { name: 'React Router', icon: 'code' },\n        { name: 'React Redux', icon: 'code' }\n    ]\n\n    const keys = ['property', 'description', 'default', 'type', 'value'];\n    const items = [\n        { \n            property: 'drawer', \n            description: 'Drawer visibilty state', \n            default: '', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'collapsable', \n            description: 'Make drawer collapsable', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'min', \n            description: 'Set drawer width to minimum size', \n            default: '', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'onResize', \n            description: 'Handle drawer min prop toggling', \n            default: '', \n            type: 'function',\n            value: ''\n        },\n        { \n            property: 'onClose', \n            description: 'Handle drawer state', \n            default: '', \n            type: 'function',\n            value: ''\n        },\n        { \n            property: 'fullHeight', \n            description: 'Set drawer height to full screen height', \n            default: '', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'header', \n            description: 'Set drawer header', \n            default: '', \n            type: 'any',\n            value: ''\n        },\n        { \n            property: 'headerCentered', \n            description: 'Set drawer header content position to center', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'dark', \n            description: 'Set dark mode', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'absolute', \n            description: 'Set drawer position to absolute', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n    ]\n\n    return (\n        <div className=\"page\">\n            <div className=\"page-title\">Drawer</div>\n            <Card flat className=\"overflow-y pa-0\">\n                <div className=\"app\" style={{ minHeight: 260 }}>\n                    <Drawer\n                        drawer={drawer}\n                        min={drawerMin}\n                        onClose={() => setDrawer(false)}\n                        header=\"Title\"\n                        smooth\n                        collapsable\n                        headerCentered\n                        onResize={() => setDrawerMin(!drawerMin)}>\n                        {drawerMin ? \n                            <List>\n                                {stack.map(({name, icon}, index) => \n                                    <Tooltip key={index}    \n                                        tooltip={name}\n                                        position=\"right\">\n                                        <Button\n                                            light \n                                            onClick={() => setContent(name)} \n                                            icon={icon}/>\n                                    </Tooltip>\n                                )}\n                            </List> : \n                            <List>\n                                {stack.map((item, index) => \n                                    <ListItem \n                                        key={index}    \n                                        item={item}\n                                        hover\n                                        itemTitle=\"name\" />\n                                )}\n                            </List>\n                        }\n                    </Drawer>\n                    <div className=\"px-20\">\n                        <p>Drawer in light mode with collapsable prop</p>\n                        <Button \n                            name=\"Toggle\" \n                            color=\"info\"\n                            onClick={() => setDrawer(!drawer)}/>\n                        <p>{content}</p>\n                    </div>\n                </div>\n            </Card>\n            <h2>API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { Select, Table } from '../components';\n\nexport const SelectPage = () => {\n    const items = [\n        { country: 'Kazakhstan', cities: [ 'Nur-Sultan', 'Almaty', 'Shymkent' ] }, \n        { country: 'Russia', cities: ['Moscow', 'St. Petersburg', 'Krasnodar'] }, \n        { country: 'USA', cities: ['Washington, D.C.', 'New York City', 'San Francisco'] }, \n        { country: 'United Kingdom', cities: ['London', 'York', 'Manchester'] }, \n        { country: 'China', cities: ['Beijing', 'Shanghai', 'Shenzhen'] }\n    ]\n    const [selected, setSelected] = useState('');\n    const [selectedCascader, setSelectedCascader] = useState('');\n    const [selectedCascaderSubItem, setSelectedCascaderSubItem] = useState('');\n\n    const keys = ['property', 'description', 'default', 'type', 'value'];\n    const rows = [\n        { \n            property: 'items', \n            description: 'Select options', \n            default: '', \n            type: 'string[] | object[]',\n            value: ''\n        },\n        { \n            property: 'selectedItem', \n            description: 'Selected option', \n            default: '', \n            type: 'string | number',\n            value: ''\n        },\n        { \n            property: 'onSelect', \n            description: 'Handle selected value', \n            default: '', \n            type: 'function',\n            value: ''\n        },\n        { \n            property: 'itemName', \n            description: 'Set if you pass items as array of objects', \n            default: '', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'addSubItem', \n            description: 'Set second additional prop of object if you pass items as array of objects', \n            default: '', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'width', \n            description: 'Set select width', \n            default: 'auto', \n            type: 'string | number',\n            value: '100px | 100% | 100'\n        },\n        { \n            property: 'minWidth', \n            description: 'Set select min width', \n            default: 'auto', \n            type: 'string | number',\n            value: '100px | 100% | 100'\n        },\n        { \n            property: 'labelName', \n            description: 'Set select label', \n            default: '', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'placeholder', \n            description: 'Set placeholder', \n            default: '', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'color', \n            description: 'Set color of pagination from list', \n            default: '', \n            type: 'string',\n            value: 'primary | info | success | error'\n        },\n        { \n            property: 'rounded', \n            description: 'Make border radius rounded',\n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'subItem', \n            description: 'Set item name in subitems menu',\n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'size', \n            description: 'Set select size',\n            default: '', \n            type: 'string',\n            value: 'medium | large'\n        },\n        { \n            property: 'className',\n            description: 'Set a custom css class to component', \n            default: '', \n            type: 'string',\n            value: ''\n        }\n    ]\n\n    return (\n        <div className=\"page\">\n            <div className=\"page-title\">Selects</div>\n            <h3>Simple Selects</h3>\n            <Select\n                items={items}\n                color=\"primary\"\n                width={200}\n                itemName=\"country\"\n                placeholder=\"Countries\"\n                selectedItem={selected}\n                onSelect={v => setSelected(v)}/>\n            <Select\n                items={items}\n                labelName=\"Rounded select\"\n                width={200}\n                color=\"info\"\n                rounded\n                itemName=\"country\"\n                placeholder=\"Countries\"\n                selectedItem={selected}\n                onSelect={v => setSelected(v)}/>\n            <Select\n                items={items}\n                width={200}\n                color=\"success\"\n                itemName=\"country\"\n                placeholder=\"Countries\"\n                selectedItem={selected}\n                onSelect={v => setSelected(v)}/>\n            <Select\n                items={items}\n                width={200}\n                color=\"error\"\n                itemName=\"country\"\n                placeholder=\"Countries\"\n                selectedItem={selected}\n                onSelect={v => setSelected(v)}/>\n            <Select\n                placeholder=\"Select a country\" \n                items={items}\n                width={200}\n                size=\"medium\"\n                itemName=\"country\"\n                labelName=\"Medium size select\"\n                selectedItem={selected}\n                onSelect={v => setSelected(v)}/>\n            <Select\n                placeholder=\"Select a country\" \n                items={items}\n                width={200}\n                size=\"medium\"\n                rounded\n                color=\"info\"\n                itemName=\"country\"\n                labelName=\"Rounded medium size select\"\n                selectedItem={selected}\n                onSelect={v => setSelected(v)}/>\n            <Select\n                placeholder=\"Select a country\" \n                items={items}\n                width={200}\n                size=\"large\"\n                itemName=\"country\"\n                labelName=\"Large size select\"\n                selectedItem={selected}\n                onSelect={v => setSelected(v)}/>\n            <h3>Selects with subitems</h3>\n            <Select\n                items={items}\n                width={200}\n                selectedItem={selectedCascader}\n                placeholder=\"Select a country and a capital\" \n                itemName=\"country\"\n                subItemsField=\"cities\"\n                color=\"info\"\n                labelName=\"Countries and capitals\"\n                onSelect={v => setSelectedCascader(v)}/>\n            <h3>Selects with subitems (show only subitem value)</h3>\n            <Select\n                items={items}\n                width={200}\n                selectedItem={selectedCascaderSubItem}\n                placeholder=\"Select a country and a capital\" \n                itemName=\"country\"\n                subItemsField=\"cities\"\n                subTitle\n                showSubItemOnly={true}\n                labelName=\"Countries and capitals\"\n                color=\"info\"\n                onSelect={v => setSelectedCascaderSubItem(v)}/>\n            <Select\n                items={items}\n                width={200}\n                selectedItem={selectedCascaderSubItem}\n                placeholder=\"Select a country and a capital\" \n                itemName=\"country\"\n                subItemsField=\"cities\"\n                subTitle\n                rounded\n                showSubItemOnly={true}\n                labelName=\"Countries and capitals\"\n                color=\"info\"\n                onSelect={v => setSelectedCascaderSubItem(v)}/>\n            <h2>API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={rows}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n        \n    )\n}\n","import React, { useState } from 'react';\nimport { Modal, Button } from '../components';\n\nexport const ModalPage = () => {\n    const [modal, setModal] = useState(false);\n\n    return (\n        <div className=\"page\">\n            <div className=\"page-title\">Modals</div>\n            <Button\n                color=\"info\"\n                size=\"medium\"\n                name=\"Open modal\"\n                onClick={() => setModal(true)}/>\n            <Modal\n                closable\n                onClose={() => setModal(false)} \n                visible={modal} \n                header={<div>Modal title</div>}\n                footer={\n                    <React.Fragment>\n                        <Button\n                            className=\"mr-10\"\n                            color=\"secondary\"\n                            name=\"Cancel\"\n                            onClick={() => setModal(false)}/>\n                        <Button\n                            color=\"info\"\n                            name=\"Confirm\"\n                            onClick={() => setModal(false)}/>\n                    </React.Fragment>\n                }>\n                    <p>Modal content...</p>\n                </Modal>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { RadioGroup, InputField, Icon, Table, Button } from '../components';\n\nexport const RadioPage = () => {\n    const [cityUS, setCityUS] = useState('');\n    const [city, setCity] = useState('');\n    const [isDisabled, setIsDisabled] = useState(true);\n    const cities = ['Nur-Sultan', 'Almaty', 'Shymkent'];\n    const citiesUS = ['Washington, D.C.', 'New York City', 'Chicago'];\n\n    const keys = ['property', 'description', 'default', 'type', 'value'];\n    const items = [\n        { \n            property: 'onChange', \n            description: 'Handle radio change', \n            default: '', \n            type: 'function',\n            value: 'return a radio value'\n        },\n        { \n            property: 'name', \n            description: 'Set radio group name', \n            default: '', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'value', \n            description: 'Chosen value', \n            default: '', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'disabled',\n            description: 'Make button disabled', \n            default: 'false',\n            type: 'boolean', \n            value: 'true | false'\n        },\n        { \n            property: 'vertical',\n            description: 'Make position vertical', \n            default: 'false',\n            type: 'boolean', \n            value: 'true | false'\n        },\n        { \n            property: 'className',\n            description: 'Set a custom css class to component', \n            default: '', \n            type: 'string',\n            value: ''\n        }\n    ]\n\n    return (\n        <div className=\"page\">\n            <div className=\"page-title\">Radio Group</div>\n            <h3>Horizontal position with label</h3>\n            <RadioGroup \n                value={city}\n                name=\"town\" \n                onChange={(value) => setCity(value)}\n                options={cities}/>\n            <InputField \n                value={city} \n                placeholder=\"Choose a city\" \n                readOnly\n                color=\"info\"\n                prefix={<Icon name=\"city\"/>}\n                width={270}/>\n            <h3>Vertical position with label</h3>\n            <RadioGroup \n                value={cityUS} \n                vertical\n                name=\"city\"\n                onChange={(value) => setCityUS(value)}\n                options={citiesUS}/>\n            <InputField \n                value={cityUS} \n                placeholder=\"Choose a city\" \n                readOnly\n                color=\"info\"\n                rounded\n                prefix={<Icon name=\"city\"/>}\n                width={270}/>\n            <div className=\"row align-center\">\n                <h3>Disabled</h3>\n                <Button \n                    className=\"ml-15\"\n                    color=\"info\"\n                    name=\"Toggle disabling\" \n                    onClick={() => setIsDisabled(!isDisabled)}/>\n            </div>\n            <RadioGroup \n                value={cityUS} \n                vertical\n                name=\"city\"\n                disabled={isDisabled}\n                onChange={(value) => setCityUS(value)}\n                options={citiesUS}/>\n            <h2>API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { Switch, Table } from '../components';\n\nexport const SwitchPage = () => {\n    const [check, setCheck] = useState(true);\n    const [check1, setCheck1] = useState(true);\n    const [check2, setCheck2] = useState(true);\n    const [check3, setCheck3] = useState(true);\n    const [check4, setCheck4] = useState(false);\n\n    const keys = ['property', 'description', 'default', 'type', 'value'];\n    const items = [\n        { \n            property: 'check', \n            description: 'define the switch state', \n            default: '', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'onChange', \n            description: 'handle switch change', \n            default: '', \n            type: 'function',\n            value: ''\n        },\n        { \n            property: 'disable', \n            description: 'Make switch disabled', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'position', \n            description: 'Change switch position', \n            default: 'horizontal', \n            type: 'string',\n            value: 'vertical'\n        },\n        { \n            property: 'color', \n            description: 'Set color of switch from list', \n            default: '', \n            type: 'string',\n            value: 'primary | info | success | error'\n        },\n        { \n            property: 'leftLabel', \n            description: 'Set left side label', \n            default: '', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'rightLabel', \n            description: 'Set right side label', \n            default: '', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'leftIcon', \n            description: 'Set left side icon', \n            default: '', \n            type: 'string',\n            value: 'moon | home | etc. (see icons list)'\n        },\n        { \n            property: 'rightIcon', \n            description: 'Set right side icon', \n            default: '', \n            type: 'string',\n            value: 'moon | home | etc. (see icons list)'\n        },\n        { \n            property: 'leftIconColor', \n            description: 'Set left side icon color', \n            default: '', \n            type: 'string',\n            value: 'hex | rgba | css standard preset'\n        },\n        { \n            property: 'rightIconColor', \n            description: 'Set right side icon color', \n            default: '', \n            type: 'string',\n            value: 'hex | rgba | css standard preset'\n        },\n        { \n            property: 'className', \n            description: 'Set css custom class', \n            default: '', \n            type: 'string',\n            value: ''\n        }\n    ]\n\n    return (\n        <div className=\"page\">\n            <div className=\"page-title\">Switches</div>\n            <h3>Simple switches</h3>\n            <div className=\"row\">\n                <Switch check={check} onChange={() => setCheck(!check)}/>\n                <Switch check={check} color=\"primary\" onChange={() => setCheck(!check)}/>\n                <Switch check={check} color=\"info\" onChange={() => setCheck(!check)}/>\n                <Switch check={check} color=\"success\" onChange={() => setCheck(!check)}/>\n                <Switch check={check} color=\"error\" onChange={() => setCheck(!check)}/>\n                <Switch check={check2} color=\"error\" disabled onChange={() => setCheck2(!check2)}/>\n\n            </div>\n            <h3>Switches with icons and labels</h3>\n            <Switch color=\"info\" \n                check={check1}\n                leftLabel=\"Off\"\n                rightLabel=\"On\" \n                onChange={() => setCheck1(!check1)}/>\n            <br/><br/>\n            <Switch color=\"primary\" \n                check={check1}\n                leftIcon=\"moon\"\n                leftIconColor=\"darkblue\"\n                rightIcon=\"sun\" \n                rightIconColor=\"#feda24\"\n                onChange={() => setCheck1(!check1)}/>\n            <h3>Switches positions</h3>\n            <div className=\"row align-center\">\n                <Switch color=\"primary\" \n                    check={check3}\n                    position=\"vertical\"\n                    onChange={() => setCheck3(!check3)}/>\n                <Switch color=\"error\" \n                    check={check4}\n                    position=\"vertical\"\n                    leftLabel=\"Off\"\n                    rightLabel=\"On\" \n                    onChange={() => setCheck4(!check4)}/>\n                <Switch color=\"info\" \n                    check={check3}\n                    position=\"vertical\"\n                    leftIcon=\"moon\"\n                    rightIcon=\"sun\" \n                    onChange={() => setCheck3(!check3)}/>\n            </div>\n            <h2>API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Tag, Card, Table } from '../components';\n\nexport const TagPage = () => {\n    const keys = ['property', 'description', 'default', 'type', 'value'];\n    const items = [\n        { \n            property: 'value', \n            description: 'Tag value', \n            default: '', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'lifted', \n            description: 'Lift up the input field', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'color', \n            description: 'Set color of input field from list', \n            default: '', \n            type: 'string',\n            value: 'primary | info | success | error | black'\n        },\n        { \n            property: 'rounded', \n            description: 'Make border radius rounded',\n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'smooth',\n            description: 'Set input field borders more smooth', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'uppercase',\n            description: 'Transform text to upper case', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'small', \n            description: 'Set tag size',\n            default: '', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'iconLeft', \n            description: 'Set icon before the value',\n            default: '', \n            type: 'string',\n            value: 'home | search | etc. (see icon names list in docs)'\n        },\n        { \n            property: 'iconRight', \n            description: 'Set icon after the value',\n            default: '', \n            type: 'string',\n            value: 'home | search | etc. (see icon names list in docs)'\n        },\n        { \n            property: 'width',\n            description: 'Set a tag width', \n            default: '', \n            type: 'string | number',\n            value: ''\n        },\n        { \n            property: 'className',\n            description: 'Set a custom css class to component', \n            default: '', \n            type: 'string',\n            value: ''\n        }\n    ]\n\n    return (\n        <div className=\"page\">\n            <div className=\"page-title\">Tags</div>\n            <h3>Tag colors</h3>\n            <Card>\n                <Tag value=\"Price: 1000\" />\n                <Tag value=\"Price: 1000\" color=\"yellow\"/>\n                <Tag value=\"Price: 1000\" color=\"primary\"/>\n                <Tag value=\"Price: 1000\" color=\"info\"/>\n                <Tag value=\"Price: 1000\" color=\"success\"/>\n                <Tag value=\"Price: 1000\" color=\"error\"/>\n            </Card>\n            <h3>Tag types</h3>\n            <Card>\n                <Tag value=\"Price: 1000\" rounded color=\"yellow\"/>\n                <Tag value=\"Price: 1000\" rounded outlined color=\"primary\"/>\n                <Tag value=\"Price: 1000\" rounded lifted color=\"primary\"/>\n                <Tag value=\"Price: 1000\" outlined color=\"primary\"/>\n                <Tag value=\"Price: 1000\" smooth color=\"success\"/>\n            </Card>\n            <h3>Tag sizes</h3>\n            <Card>\n                <Tag value=\"Defaul tag\" color=\"yellow\"/>\n                <Tag value=\"Small tag\" small color=\"yellow\"/>\n                <Tag value=\"Small tag\" small rounded color=\"yellow\"/>\n            </Card>\n            <h3>Tag with icons</h3>\n            <Card>\n                <Tag iconLeft=\"smartphone\" value=\"777 777 77 77\" color=\"primary\"/>\n                <Tag iconLeft=\"star\" value=\"1020\" small color=\"yellow\"/>\n                <Tag iconLeft=\"account\" value=\"John Doe\" color=\"info\"/>\n                <Tag iconLeft=\"account\" value=\"John Doe\" />\n            </Card>\n            <h2>API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { Button, Preloader, Table } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nexport const PreloaderPage = () => {\n    const [loading, setLoading] = useState(false);\n\n    const handleClick = () => {\n        setLoading(true)\n        setTimeout(() => setLoading(false), 3000)\n    }\n\n    const keys = ['property', 'description', 'default', 'type', 'value'];\n    const items = [\n        { \n            property: 'visible', \n            description: 'Preloader visibile state', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'preloader', \n            description: 'Pass your own custom preloader element', \n            default: 'Moving ellipsis', \n            type: 'any',\n            value: ''\n        },\n        { \n            property: 'backgroundColor', \n            description: 'Set preloader background color', \n            default: 'transparent', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'color', \n            description: 'Set preloader default ellipsis color', \n            default: '', \n            type: 'string',\n            value: ''\n        }\n    ]\n\n    const usage = \n`// Usage examples\nimport React, { useState } from 'react';\nimport { Preloader } from '@assenti/rui-components';\n\nfunction Example() {\n    const [loading, setLoading] = useState(false);\n\n    return (\n        <div>\n            <Preloader visible={loading}/>\n        </div>\n    )\n}\n`\n\n    return (\n        <div className=\"page\">\n            <div className=\"page-title\">Preloader Component</div>\n            <p>Launch full page preloader and make all actions on screen disabled</p>\n            <div className=\"py-10\">\n                <Button name=\"Activate\" color=\"info\" onClick={handleClick}/>\n                <SyntaxHighlighter language=\"jsx\" style={prism}>\n                    {usage}\n                </SyntaxHighlighter>\n            </div>\n            <Preloader visible={loading}/>\n            <h2>API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n","import React, { createRef } from 'react';\nimport { BackTopBtn, Card, Table, Collapse } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nexport const BackTopBtnPage = () => {\n    const blockref = createRef();\n    const api = createRef();\n    const rows = []\n    for (let i = 0; i < 20; i++) {\n        rows.push(i)\n    }\n\n    const keys = ['property', 'description', 'default', 'type', 'value'];\n    const items = [\n        { \n            property: 'setRef', \n            description: 'Pass the reference of parent element to component',\n            default: '', \n            type: '',\n            value: ''\n        },\n        { \n            property: 'breakpoint', \n            description: 'Set scrollY breakpoint when button should appear',\n            default: '60px', \n            type: 'number',\n            value: ''\n        },\n        { \n            property: 'size', \n            description: 'Set button size',\n            default: '', \n            type: 'string',\n            value: 'medium | large'\n        },\n        { \n            property: 'tooltip', \n            description: 'Set button tooltip',\n            default: '', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'offsetX', \n            description: 'Set offset from right',\n            default: '25px', \n            type: 'number | string',\n            value: ''\n        },\n        { \n            property: 'offsetY', \n            description: 'Set offset from bottom',\n            default: '25px', \n            type: 'number | string',\n            value: ''\n        },\n        { \n            property: 'dark',\n            description: 'Set dark mode', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'className',\n            description: 'Set a custom css class to component', \n            default: '', \n            type: 'string',\n            value: ''\n        }\n    ]\n\n    const simpleList =\n`// Usage examples\nimport React, { createRef } from 'react';\nimport { BackTopBtn } from '@assenti/rui-components';\n\nfunction Example() {\n    const parentRef = createRef();\n    const rows = []\n    for (let i = 0; i < 20; i++) {\n        rows.push(i)\n    }\n\n    return (\n        <div ref={parentRef}>\n            {rows.map(item => \n                <p key={item}>\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n                    tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\n                    quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\n                    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\n                    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non\n                    proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n                </p>\n            )}\n            <BackTopBtn setRef={parentRef} dark/>\n        </div>\n    )\n}\n`\n    const goToApi = () => {\n        if (api.current) api.current.scrollIntoView({ behavior: 'smooth', block: 'start' })\n    }\n\n    return (\n        <div className=\"page\" ref={blockref}>\n            <div className=\"row align-center space-between\">\n                <div className=\"page-title\">BackTopBtn Component</div>\n                <a className=\"fz-13 fw-bold\" onClick={goToApi}>API</a>\n            </div>\n            <p>Set the scroll to top button when scroll down the page</p>\n            <Card outlined color=\"primary\" title=\"BackTopBtn\" className=\"mt-20\">\n                {rows.map(item => \n                    <p key={item}>\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n                        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\n                        quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\n                        consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\n                        cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non\n                        proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n                    </p>\n                )}\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {simpleList}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <BackTopBtn dark setRef={blockref} size=\"medium\" tooltip=\"Up\"/>\n            <h2 ref={api}>API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n\n\n","import React from 'react';\n\nexport const Header = (props) => {\n    return (\n        <div className=\"header\">\n            <div className=\"header-left\">\n                {props.imgPath ? \n                <img className=\"header-logo\" src={props.imgPath} alt=\"React logo\"/> : ''}\n                <div className=\"header-title\">{props.title}</div>\n            </div>\n            <div className=\"header-right\">\n                {props.rightSide}\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Header } from './Header';\nimport { Tooltip, Button } from '../components';\nimport { version, description } from '../../package.json';\n\nexport const Content = (props) => {\n    const github = 'https://github.com/Assenti/react-ui-components';\n\n    return (\n        <div className=\"content\">\n            <Header title={<div className=\"row align-center\">\n                    <Button icon=\"menu\" dark onClick={() => props.onDrawerToggle()}/>\n                    <span className=\"fz-10 ml-5\">{description}</span>\n                </div>}\n                rightSide={\n                <div className=\"row align-center\">\n                    <div className=\"text-lightgray mr-20\">\n                        <a href=\"https://github.com/Assenti/react-ui-components/blob/master/CHANGELOG.md\" \n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\">\n                            <small>v {version}</small>\n                        </a>\n                    </div>\n                    <Tooltip tooltip=\"Visit Github repo\" position=\"left\">\n                        <Button \n                            dark\n                            icon=\"github\" \n                            onClick={e => { \n                            e.preventDefault()\n                            window.open(github, '_blank')}}/>\n                    </Tooltip>\n                </div>\n            }/>\n            <div className=\"content-inner\">\n                {props.children}\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport { List, ListItem, Icon, Drawer, InputField, Dropdown, Button, Collapse } from '../components';\nimport { HomePage } from '../pages/HomePage';\n\nconst compare = (a, b) => {\n    if (a.name > b.name) return 1;\n    if (b.name > a.name) return -1;\n    return 0;\n}\n\nexport const DrawerContent = (props) => {\n    const history = useHistory();\n    const [search, setSearch] = useState('');\n    const [list, setList] = useState(true);\n\n    const handleItemClick = (item) => {\n        history.push(item.path)\n    }\n\n    const searchedItems = () => {\n        if (search) {\n            return props.items.filter(item => item.name.toLowerCase().includes(search.toLowerCase()))\n        } else {\n            return []\n        }\n    }\n\n    const handleKeyUp = (e) => {\n        if (e.key === 'Escape') setSearch('')\n    }\n\n    const sortedRoutes = () => {\n        let filtered = props.items\n                            .sort(compare)\n                            .filter(item => item.path !== '/' && item.path !== '/colors')\n        // filtered.unshift({ path: '/colors', name: 'Colors', Component: HomePage, icon: 'brush' })\n        // filtered.unshift({ path: '/', name: 'Get started', Component: HomePage, icon: 'rocket' })\n        return filtered;\n    }\n    \n    return (\n        <div>\n            <Drawer\n                drawer={props.drawer}\n                fullHeight\n                dark\n                onClose={() => props.onClose()}\n                headerCentered\n                header={<Icon name=\"react\" color=\"white\" size={30}/>}>\n                <div className=\"row py-5 justify-center\">\n                    <Dropdown\n                        className=\"full-width mx-10\"\n                        content={\n                            <React.Fragment>\n                                <div className=\"fz-8 text-gray pa-10\">Let's find your component</div>\n                                <List dense>\n                                    {searchedItems().map((item, index) => \n                                        <ListItem\n                                            key={index}\n                                            hover\n                                            render={<Link to={item.path} \n                                                onClick={() => setSearch('')}>{item.name}</Link>}/>\n                                    )}\n                                </List>\n                                {searchedItems().length > 0 ?\n                                    <div className=\"fz-8 text-gray pa-10 text-right\">\n                                        {searchedItems().length} results</div> : ''\n                                }\n                            </React.Fragment>\n                        }\n                        trigger={<InputField\n                                    color=\"info\"\n                                    width=\"100%\"\n                                    onKeyUp={handleKeyUp}\n                                    prefix={<Icon name=\"search\"/>}\n                                    value={search}\n                                    className=\"full-width\"\n                                    onChange={e => setSearch(e.target.value)}\n                                    placeholder=\"Search components\"/>}/>\n                </div>\n                <List size=\"medium\" dark>\n                    <ListItem\n                        right\n                        icon=\"rocket\"\n                        isActiveItem={() => '/' === window.location.pathname}\n                        onClick={() => handleItemClick({ path: '/', name: 'Get started', Component: HomePage, icon: 'rocket' })}\n                        itemTitle=\"name\"\n                        hover\n                        item={{ path: '/', name: 'Get started', Component: HomePage, icon: 'rocket' }}/>\n                    <ListItem\n                        icon=\"toy-brick\"\n                        onClick={() => setList(!list)}\n                        hover\n                        item=\"Components\"\n                        controls={<Icon color=\"#fff\" size={20} name={list ? 'chevron-up' : 'chevron-down'}/>}/>\n                </List>\n                {list ? <List dark className=\"pl-30\">\n                    {sortedRoutes().map((item, index) => \n                        <ListItem\n                            key={index}\n                            right\n                            noDivider\n                            icon={item.icon ? item.icon : ''}\n                            roundedActive\n                            isActiveItem={current => current.path === window.location.pathname}\n                            onClick={() => handleItemClick(item)}\n                            itemTitle=\"name\"\n                            className=\"no-select\"\n                            hover\n                            item={item}/>\n                    )}\n                </List> : ''}\n            </Drawer>\n        </div>\n    )\n}\n","/**\n@license MIT\n\nCopyright (c) 2020 Asset Sultanov\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport { routes } from './routes';\nimport { Content } from './layouts/Content';\nimport { DrawerContent } from './layouts/DrawerContent';\nimport { description } from '../package.json';\n\nconst App = () => {\n    const [drawer, setDrawer] = useState(true);\n\n    useEffect(() => {\n        document.title = description\n    }, [])\n    \n    return (\n        <div className=\"app\">\n            <Router>\n                <DrawerContent \n                    drawer={drawer}\n                    onClose={() => setDrawer(false)} \n                    items={routes}/>\n                <Switch>\n                    {routes.map(({path, Component}, index) => \n                        <Route key={index} exact path={path}>\n                            {({ match }) => (\n                                <CSSTransition\n                                in={match != null}\n                                timeout={300}\n                                classNames=\"page\"\n                                unmountOnExit>\n                                <div className=\"page\">\n                                    <Content onDrawerToggle={() => setDrawer(!drawer)}>\n                                        <Component />\n                                    </Content>\n                                </div>\n                                </CSSTransition>\n                            )}\n                        </Route>\n                    )}\n                    <Route path=\"*\">\n                        <Redirect to=\"/\"/>\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nReactDOM.render(<App />, document.querySelector('#rui-components'));\n"],"sourceRoot":""}