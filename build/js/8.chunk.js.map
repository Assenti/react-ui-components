{"version":3,"sources":["pages/CardPage.js"],"names":["itemsComplexInitial","name","hero","icon","check","keys","items","property","description","default","type","value","CardPage","api","createRef","parentRef","className","ref","onClick","current","scrollIntoView","behavior","block","outlined","title","header","map","item","index","key","hover","dark","iconSize","tooltip","language","style","prism","flat","width","img","size","color","footer","setRef","bordered","headers","itemTitles"],"mappings":"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","file":"js/8.chunk.js","sourcesContent":["import React, { createRef } from 'react';\nimport { Card, List, ListItem, Table, Icon, Collapse, BackTopBtn } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst itemsComplexInitial = [\n    { name: 'Steve Rogers', hero: 'Captain America', icon: 'account', check: false }, \n    { name: 'Peter Parker', hero: 'Spider man', icon: 'account', check: false }, \n    { name: 'Tony Stark', hero: 'Iron man', icon: 'account', check: false }, \n    { name: 'Bruce Benner', hero: 'Hulk', icon: 'account', check: false }\n];\n\nconst keys = ['property', 'description', 'default', 'type', 'value'];\nconst items = [\n    { \n        property: 'header', \n        description: 'Set card header',\n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'footer',\n        description: 'Set card footer', \n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'width',\n        description: 'Set card width', \n        default: '', \n        type: 'string | number',\n        value: '100, \"100%\", \"100px\"'\n    },\n    { \n        property: 'padding',\n        description: 'Set card padding', \n        default: '15px', \n        type: 'string | number',\n        value: ''\n    },\n    { \n        property: 'img',\n        description: 'Set card image', \n        default: '', \n        type: 'string | base64',\n        value: ''\n    },\n    { \n        property: 'flat', \n        description: 'Remove card box shadow',\n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'dark',\n        description: 'Set dark mode', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'hover',\n        description: 'Lift up the card on hover', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'outlined',\n        description: 'Set card borders outlined', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'color',\n        description: 'Set card borders color from colors list', \n        default: '', \n        type: 'string',\n        value: 'primary | info | success | error'\n    },\n    { \n        property: 'title',\n        description: 'Set outlined card title (has effect only with outlined prop)', \n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'className',\n        description: 'Set a custom css class to component', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n]\n\n    const usage =\n`// Usage examples\nimport React from 'react';\nimport { Card, List, ListItem } from '@assenti/rui-components';\n\nconst names = [\n    { name: 'Steve Rogers', hero: 'Captain America', icon: 'account' }, \n    { name: 'Peter Parker', hero: 'Spider man', icon: 'account' }, \n    { name: 'Tony Stark', hero: 'Iron man', icon: 'account' }, \n    { name: 'Bruce Benner', hero: 'Hulk', icon: 'account' }\n];\n\nfunction Example() {\n    return (\n        <div>\n            <Card header=\"Marvel heroes\">\n                <List>\n                    {names.map((item, index) => \n                        <ListItem \n                            key={index}\n                            item={item.name}\n                            hover/>\n                    )}\n                </List>\n            </Card>\n            <Card dark header=\"Marvel heroes\">\n                <List dark>\n                    {names.map((item, index) => \n                        <ListItem \n                            key={index}\n                            item={item.name}\n                            hover/>\n                    )}\n                </List>\n            </Card>\n        </div>\n    )\n}\n`\n\n    const usageFlat =\n`// Usage examples\nimport React from 'react';\nimport { Card, List, ListItem } from '@assenti/rui-components';\n\nconst names = [\n    { name: 'Steve Rogers', hero: 'Captain America', icon: 'account' }, \n    { name: 'Peter Parker', hero: 'Spider man', icon: 'account' }, \n    { name: 'Tony Stark', hero: 'Iron man', icon: 'account' }, \n    { name: 'Bruce Benner', hero: 'Hulk', icon: 'account' }\n];\n\nfunction Example() {\n    return (\n        <Card header=\"Marvel heroes\" flat>\n            <List>\n                {names.map((item, index) => \n                    <ListItem \n                        key={index}\n                        item={item}\n                        hover\n                        itemTitle=\"name\"/>\n                )}\n            </List>\n        </Card>\n    )\n}\n`\n\nconst usageImage =\n`// Usage examples\nimport React from 'react';\nimport { Card, Icon } from '@assenti/rui-components';\n\nlet cards = [1,2,3];\n\nfunction Example() {\n    return (\n        <div className=\"row space-around\">\n            {cards.map((item, index) => \n                <Card \n                    key={index}\n                    hover\n                    className=\"ma-5 col\"\n                    width={200} \n                    img={<div className=\"row justify-center\">\n                            <Icon name=\"react\" size={50} color=\"#42a5f5\"/>\n                        </div>}\n                    footer={'Some description ' + item}>\n                    <p>Some title {item}</p>\n                </Card>\n            )}\n        </div>\n    )\n}\n`\n\nconst usageOutlined =\n`// Usage examples\nimport React from 'react';\nimport { Card, List, ListItem } from '@assenti/rui-components';\n\nconst names = [\n    { name: 'Steve Rogers', hero: 'Captain America', icon: 'account' }, \n    { name: 'Peter Parker', hero: 'Spider man', icon: 'account' }, \n    { name: 'Tony Stark', hero: 'Iron man', icon: 'account' }, \n    { name: 'Bruce Benner', hero: 'Hulk', icon: 'account' }\n];\n\nfunction Example() {\n    return (\n        <Card outlined title=\"Marvel Avengers\" color=\"primary\">\n            <List>\n                {names.map((item, index) => \n                    <ListItem \n                        key={index}\n                        item={item}\n                        hover\n                        itemTitle=\"name\"/>\n                )}\n            </List>\n        </Card>\n    )\n}\n`\n\nconst CardPage = () => {\n    const api = createRef();\n    const parentRef = createRef();\n\n    const imageCards = () => {\n        let cards = [1,2,3]\n        return (\n            <div className=\"row space-around\">\n                {cards.map((item, index) => \n                    <Card \n                        key={index}\n                        hover\n                        className=\"ma-5 col\"\n                        width={200} \n                        img={<div className=\"row justify-center\"><Icon name=\"react\" size={50} color=\"#42a5f5\"/></div>}\n                        footer={'Some description ' + item}>\n                        <p>Some title {item}</p>\n                    </Card>\n                )}\n            </div>\n        )\n    }\n\n    const goToApi = () => {\n        if (api.current) api.current.scrollIntoView({ behavior: 'smooth', block: 'start' })\n    }\n\n    return (\n        <div className=\"rui-page\" ref={parentRef}>\n            <div className=\"row align-center space-between\">\n                <div className=\"rui-page-title\">Card Component</div>\n                <div className=\"rui-link fz-13 fw-bold\" onClick={goToApi}>API</div>\n            </div>\n            <Card outlined title=\"Card with header\">\n                <Card header=\"Marvel heroes\">\n                    <List>\n                        {itemsComplexInitial.map((item, index) => \n                            <ListItem \n                                key={index}\n                                item={item.name}\n                                hover/>\n                        )}\n                    </List>\n                </Card>\n                <br/>\n                <Card dark header=\"Marvel heroes\">\n                    <List dark>\n                        {itemsComplexInitial.map((item, index) => \n                            <ListItem \n                                key={index}\n                                item={item.name}\n                                hover/>\n                        )}\n                    </List>\n                </Card>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usage}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <br/>\n            <Card outlined title=\"Card flat\">\n                <Card header=\"Marvel heroes\" flat>\n                    <List>\n                        {itemsComplexInitial.map((item, index) => \n                            <ListItem \n                                key={index}\n                                item={item.name}\n                                hover/>\n                        )}\n                    </List>\n                </Card>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usageFlat}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <br/>\n            <Card outlined title=\"Card with image and hover\">\n                {imageCards()}\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usageImage}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <br/>\n            <Card outlined title=\"Outlined Cards with titles\">\n                <Card outlined title=\"Marvel Avengers\" color=\"primary\">\n                    <List>\n                        {itemsComplexInitial.map((item, index) => \n                            <ListItem \n                                key={index}\n                                item={item.name}\n                                hover/>\n                        )}\n                    </List>\n                </Card>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usageOutlined}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <BackTopBtn dark setRef={parentRef} size=\"medium\"/>\n            <h2 ref={api}>API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n\nexport default CardPage;\n"],"sourceRoot":""}