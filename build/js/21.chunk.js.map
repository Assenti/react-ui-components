{"version":3,"sources":["pages/InputsPage.js"],"names":["keys","items","property","description","default","type","value","itemsTextarea","InputsPage","useState","login","setLogin","password","setPassword","second","setSecond","search","setSearch","amount","setAmount","text","setText","api","createRef","parent","className","ref","onClick","current","scrollIntoView","behavior","block","outlined","color","title","label","placeholder","autoComplete","hint","borderType","name","width","required","onChange","e","target","min","prefix","clearable","autoFocus","onClear","suffix","console","log","onEnter","icon","iconSize","tooltip","language","style","prism","size","maxRows","rows","setRef","dark","bordered","headers","index","itemTitles"],"mappings":"sMAqJMA,EAAO,CAAC,WAAY,cAAe,UAAW,OAAQ,SACtDC,EAAQ,CACV,CACIC,SAAU,WACVC,YAAa,+DACbC,QAAS,GACTC,KAAM,WACNC,MAAO,IAEX,CACIJ,SAAU,UACVC,YAAa,yEACbC,QAAS,GACTC,KAAM,WACNC,MAAO,IAEX,CACIJ,SAAU,UACVC,YAAa,4CACbC,QAAS,GACTC,KAAM,WACNC,MAAO,IAEX,CACIJ,SAAU,QACVC,YAAa,cACbC,QAAS,GACTC,KAAM,SACNC,MAAO,IAEX,CACIJ,SAAU,eACVC,YAAa,4BACbC,QAAS,QACTC,KAAM,UACNC,MAAO,gBAEX,CACIJ,SAAU,OACVC,YAAa,6DACbC,QAAS,GACTC,KAAM,SACNC,MAAO,IAEX,CACIJ,SAAU,YACVC,YAAa,qCACbC,QAAS,QACTC,KAAM,UACNC,MAAO,gBAEX,CACIJ,SAAU,UACVC,YAAa,8BACbC,QAAS,GACTC,KAAM,WACNC,MAAO,IAEX,CACIJ,SAAU,SACVC,YAAa,0BACbC,QAAS,QACTC,KAAM,UACNC,MAAO,gBAEX,CACIJ,SAAU,YACVC,YAAa,uCACbC,QAAS,QACTC,KAAM,UACNC,MAAO,gBAEX,CACIJ,SAAU,QACVC,YAAa,qCACbC,QAAS,GACTC,KAAM,SACNC,MAAO,oCAEX,CACIJ,SAAU,WACVC,YAAa,4BACbC,QAAS,QACTC,KAAM,UACNC,MAAO,gBAEX,CACIJ,SAAU,aACVC,YAAa,mBACbC,QAAS,GACTC,KAAM,SACNC,MAAO,2BAEX,CACIJ,SAAU,YACVC,YAAa,+BACbC,QAAS,QACTC,KAAM,UACNC,MAAO,gBAEX,CACIJ,SAAU,OACVC,YAAa,uBACbC,QAAS,GACTC,KAAM,SACNC,MAAO,kBAEX,CACIJ,SAAU,SACVC,YAAa,aACbC,QAAS,GACTC,KAAM,MACNC,MAAO,IAEX,CACIJ,SAAU,SACVC,YAAa,aACbC,QAAS,GACTC,KAAM,MACNC,MAAO,IAEX,CACIJ,SAAU,QACVC,YAAa,uBACbC,QAAS,GACTC,KAAM,kBACNC,MAAO,IAEX,CACIJ,SAAU,OACVC,YAAa,iBACbC,QAAS,OACTC,KAAM,SACNC,MAAO,IAEX,CACIJ,SAAU,MACVC,YAAa,iDACbC,QAAS,GACTC,KAAM,SACNC,MAAO,IAEX,CACIJ,SAAU,MACVC,YAAa,iDACbC,QAAS,GACTC,KAAM,SACNC,MAAO,IAEX,CACIJ,SAAU,YACVC,YAAa,wDACbC,QAAS,GACTC,KAAM,SACNC,MAAO,IAEX,CACIJ,SAAU,YACVC,YAAa,wDACbC,QAAS,GACTC,KAAM,SACNC,MAAO,IAEX,CACIJ,SAAU,WACVC,YAAa,qBACbC,QAAS,QACTC,KAAM,UACNC,MAAO,gBAEX,CACIJ,SAAU,WACVC,YAAa,qBACbC,QAAS,QACTC,KAAM,UACNC,MAAO,gBAEX,CACIJ,SAAU,kBACVC,YAAa,sCACbC,QAAS,QACTC,KAAM,UACNC,MAAO,gBAEX,CACIJ,SAAU,YACVC,YAAa,sCACbC,QAAS,GACTC,KAAM,SACNC,MAAO,KAGTC,EAAgB,CAClB,CACIL,SAAU,WACVC,YAAa,4BACbC,QAAS,GACTC,KAAM,WACNC,MAAO,sCAEX,CACIJ,SAAU,QACVC,YAAa,cACbC,QAAS,GACTC,KAAM,SACNC,MAAO,IAEX,CACIJ,SAAU,OACVC,YAAa,0BACbC,QAAS,IACTC,KAAM,SACNC,MAAO,IAEX,CACIJ,SAAU,UACVC,YAAa,4BACbC,QAAS,KACTC,KAAM,SACNC,MAAO,IAEX,CACIJ,SAAU,YACVC,YAAa,qCACbC,QAAS,QACTC,KAAM,UACNC,MAAO,gBAEX,CACIJ,SAAU,UACVC,YAAa,8BACbC,QAAS,GACTC,KAAM,WACNC,MAAO,IAEX,CACIJ,SAAU,SACVC,YAAa,0BACbC,QAAS,QACTC,KAAM,UACNC,MAAO,gBAEX,CACIJ,SAAU,YACVC,YAAa,uCACbC,QAAS,QACTC,KAAM,UACNC,MAAO,gBAEX,CACIJ,SAAU,QACVC,YAAa,qCACbC,QAAS,GACTC,KAAM,SACNC,MAAO,oCAEX,CACIJ,SAAU,WACVC,YAAa,4BACbC,QAAS,QACTC,KAAM,UACNC,MAAO,gBAEX,CACIJ,SAAU,aACVC,YAAa,mBACbC,QAAS,GACTC,KAAM,SACNC,MAAO,iBAEX,CACIJ,SAAU,YACVC,YAAa,+BACbC,QAAS,QACTC,KAAM,UACNC,MAAO,gBAEX,CACIJ,SAAU,SACVC,YAAa,aACbC,QAAS,GACTC,KAAM,MACNC,MAAO,IAEX,CACIJ,SAAU,SACVC,YAAa,aACbC,QAAS,GACTC,KAAM,MACNC,MAAO,IAEX,CACIJ,SAAU,QACVC,YAAa,uBACbC,QAAS,GACTC,KAAM,kBACNC,MAAO,IAEX,CACIJ,SAAU,WACVC,YAAa,qBACbC,QAAS,QACTC,KAAM,UACNC,MAAO,gBAEX,CACIJ,SAAU,WACVC,YAAa,qBACbC,QAAS,QACTC,KAAM,UACNC,MAAO,gBAEX,CACIJ,SAAU,kBACVC,YAAa,sCACbC,QAAS,QACTC,KAAM,UACNC,MAAO,gBAEX,CACIJ,SAAU,YACVC,YAAa,sCACbC,QAAS,GACTC,KAAM,SACNC,MAAO,KAoKAE,UAhKI,WAAO,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,OAEWF,mBAAS,IAFpB,mBAEdG,EAFc,KAEJC,EAFI,OAGOJ,mBAAS,IAHhB,mBAGdK,EAHc,KAGNC,EAHM,OAION,mBAAS,IAJhB,mBAIdO,EAJc,KAINC,EAJM,OAKOR,mBAAS,GALhB,mBAKdS,EALc,KAKNC,EALM,OAMGV,mBAAS,IANZ,mBAMdW,EANc,KAMRC,EANQ,KAOfC,EAAMC,sBACNC,EAASD,sBAMf,OACI,yBAAKE,UAAU,WAAWC,IAAKF,GAC3B,yBAAKC,UAAU,kCACX,yBAAKA,UAAU,kBAAf,wCACA,yBAAKE,QAAS,WAPlBL,EAAIM,SAASN,EAAIM,QAAQC,eAAe,CAAEC,SAAU,SAAUC,MAAO,YAOlCN,UAAU,gCAAzC,QAEJ,kBAAC,IAAD,CAAMO,UAAQ,EAACC,MAAM,OAAOC,MAAM,eAC9B,kBAAC,IAAD,CACIC,MAAM,QACNC,YAAY,mBACZ9B,MAAOI,EACP2B,cAAY,EACZC,KAAK,kCACLC,WAAW,OACXC,KAAK,QACLP,MAAM,UACNQ,MAAO,IACPC,UAAQ,EACRC,SAAU,SAAAC,GAAC,OAAIjC,EAASiC,EAAEC,OAAOvC,UACrC,kBAAC,IAAD,CACI6B,MAAM,WACNC,YAAY,sBACZ9B,MAAOM,EACPP,KAAK,WACLiC,KAAK,qCACLL,MAAM,OACNQ,MAAO,IACPE,SAAU,SAAAC,GAAC,OAAI/B,EAAY+B,EAAEC,OAAOvC,UACxC,kBAAC,IAAD,CACI6B,MAAM,SACNC,YAAY,eACZ9B,MAAOY,EACPb,KAAK,SACLyC,IAAK,EACLP,WAAW,SACXD,KAAK,oCACLL,MAAM,UACNc,OAAQ,kBAAC,IAAD,CAAMP,KAAK,UACnBC,MAAO,IACPE,SAAU,SAAAC,GAAC,OAAIzB,EAAUyB,EAAEC,OAAOvC,UACtC,kBAAC,IAAD,CACI6B,MAAM,QACNC,YAAY,mBACZ9B,MAAOQ,EACPyB,WAAW,UACXD,KAAK,qCACLU,WAAS,EACTC,WAAS,EACTC,QAAS,kBAAMnC,EAAU,KACzBgC,OAAQ,kBAAC,IAAD,CAAMP,KAAK,YACnBP,MAAM,OACNQ,MAAO,IACPE,SAAU,SAAAC,GAAC,OAAI7B,EAAU6B,EAAEC,OAAOvC,UACtC,kBAAC,IAAD,CACI8B,YAAY,YACZ9B,MAAOU,EACPsB,KAAK,sCACLL,MAAM,UACNQ,MAAO,IACPM,OAAQ,kBAAC,IAAD,CAAMP,KAAK,WACnBW,OAAQ,kBAAC,IAAD,CAAQX,KAAK,SAASP,MAAM,UAAUN,QAAS,kBAAMyB,QAAQC,IAAIrC,MACzEsC,QAAS,kBAAMF,QAAQC,IAAIrC,IAC3B2B,SAAU,SAAAC,GAAC,OAAI3B,EAAU2B,EAAEC,OAAOvC,UACtC,kBAAC,IAAD,CAAUiD,KAAK,OAAOC,SAAU,GAAIC,QAAQ,QACxC,kBAAC,IAAD,CAAmBC,SAAS,MAAMC,MAAOC,KAtiB7C,2oFA2iBJ,6BACA,kBAAC,IAAD,CAAM5B,UAAQ,EAACC,MAAM,OAAOC,MAAM,eAC9B,kBAAC,IAAD,CACID,MAAM,OACNG,YAAY,WACZ9B,MAAOQ,EACP2B,MAAO,IACPM,OAAQ,kBAAC,IAAD,CAAMP,KAAK,YACnBG,SAAU,SAAAC,GAAC,OAAI7B,EAAU6B,EAAEC,OAAOvC,UACtC,kBAAC,IAAD,CACIuD,KAAK,SACL5B,MAAM,OACNc,OAAQ,kBAAC,IAAD,CAAMP,KAAK,YACnBJ,YAAY,WACZ9B,MAAOQ,EACP2B,MAAO,IACPE,SAAU,SAAAC,GAAC,OAAI7B,EAAU6B,EAAEC,OAAOvC,UACtC,kBAAC,IAAD,CACIuD,KAAK,QACL5B,MAAM,OACNc,OAAQ,kBAAC,IAAD,CAAMP,KAAK,YACnBJ,YAAY,YACZ9B,MAAOQ,EACP2B,MAAO,IACPE,SAAU,SAAAC,GAAC,OAAI7B,EAAU6B,EAAEC,OAAOvC,UACtC,kBAAC,IAAD,CAAUiD,KAAK,OAAOC,SAAU,GAAIC,QAAQ,QACxC,kBAAC,IAAD,CAAmBC,SAAS,MAAMC,MAAOC,KA3f7C,2nCAggBJ,6BACA,kBAAC,IAAD,CAAM5B,UAAQ,EAACC,MAAM,OAAOC,MAAM,uBAC9B,kBAAC,IAAD,CACIa,OAAQ,kBAAC,IAAD,CAAMP,KAAK,SACnBL,MAAM,iBACNC,YAAY,iBACZ9B,MAAOc,EACP0C,QAAS,GACT7B,MAAM,UACNQ,MAAO,IACPE,SAAU,SAAAC,GAAC,OAAIvB,EAAQuB,EAAEC,OAAOvC,UACpC,kBAAC,IAAD,CACI6B,MAAM,iBACNC,YAAY,iBACZ9B,MAAOc,EACP0C,QAAS,GACT7B,MAAM,OACNM,WAAW,OACXwB,KAAM,EACNtB,MAAO,IACPE,SAAU,SAAAC,GAAC,OAAIvB,EAAQuB,EAAEC,OAAOvC,UACpC,kBAAC,IAAD,CAAUiD,KAAK,OAAOC,SAAU,GAAIC,QAAQ,QACxC,kBAAC,IAAD,CAAmBC,SAAS,MAAMC,MAAOC,KAjf1C,i8BAsfP,kBAAC,IAAD,CAAYI,OAAQxC,EAAQyC,MAAI,EAACJ,KAAK,WACtC,wBAAInC,IAAKJ,GAAT,kBACA,kBAAC,IAAD,CACI4C,UAAQ,EACRC,QAAS,CAAC,WAAY,cAAe,UAAW,OAAQ,SACxDlE,MAAOA,EACPmE,OAAO,EACPC,WAAYrE,IAChB,iDACA,kBAAC,IAAD,CACIkE,UAAQ,EACRC,QAAS,CAAC,WAAY,cAAe,UAAW,OAAQ,SACxDlE,MAAOM,EACP6D,OAAO,EACPC,WAAYrE","file":"js/21.chunk.js","sourcesContent":["import React, { useState, createRef } from 'react';\nimport { InputField, Icon, Card, Button, Table, Collapse, BackTopBtn, TextareaField } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst inputTypes = \n`// Usage examples\nimport React, { useState } from 'react';\nimport { InputField, Icon } from '@assenti/react-ui-components';\n\nfunction Example() {\n    const [login, setLogin] = useState('');\n    const [password, setPassword] = useState('');\n    const [search, setSearch] = useState('');\n    const [second, setSecond] = useState('');\n    const [amount, setAmount] = useState(0);\n\n    return (\n        <div>\n            <InputField\n                label=\"Login\"\n                placeholder=\"Input your login\" \n                value={login}\n                autoComplete\n                hint=\"InputField with tile borderType\"\n                borderType=\"tile\"\n                name=\"login\"\n                color=\"primary\"\n                width={300}\n                required\n                onChange={e => setLogin(e.target.value)}/>\n            <InputField\n                label=\"Password\"\n                placeholder=\"Input your password\" \n                value={password}\n                type=\"password\"\n                hint=\"InputField with default borderType\"\n                color=\"info\"\n                width={300}\n                onChange={e => setPassword(e.target.value)}/>\n            <InputField\n                label=\"Amount\"\n                placeholder=\"Input amount\" \n                value={amount}\n                type=\"number\"\n                min={0}\n                borderType=\"smooth\"\n                hint=\"InputField with smooth borderType\"\n                color=\"primary\"\n                prefix={<Icon name=\"tenge\"/>}\n                width={300}\n                onChange={e => setAmount(e.target.value)}/>\n            <InputField\n                label=\"Login\"\n                placeholder=\"Input your login\" \n                value={first}\n                borderType=\"rounded\"\n                hint=\"InputField with rounded borderType\"\n                clearable\n                autoFocus\n                onClear={() => setFirst('')} \n                prefix={<Icon name=\"account\"/>}\n                color=\"info\"\n                width={300}\n                onChange={e => setFirst(e.target.value)}/>\n            <InputField\n                placeholder=\"Search...\" \n                value={search}\n                hint=\"Let's find something interesting...\"\n                color=\"primary\"\n                width={300}\n                prefix={<Icon name=\"search\"/>}\n                suffix={<Button name=\"Search\" color=\"primary\" onClick={() => console.log(search)}/>}\n                onEnter={() => console.log(search)}\n                onChange={e => setSearch(e.target.value)}/>\n        </div>\n    )\n}`\n\nconst inputSizes =\n`// Usage examples\nimport React, { useState } from 'react';\nimport { InputField, Icon } from '@assenti/react-ui-components';\n\nfunction Example() {\n    const [second, setSecond] = useState('');\n\n    return (\n        <div className=\"row\">\n            <InputField\n                color=\"info\"\n                placeholder=\"John Doe\" \n                value={second} \n                width={300}\n                prefix={<Icon name=\"account\"/>}\n                onChange={e => setSecond(e.target.value)}/>\n            <InputField\n                size=\"medium\"\n                color=\"info\"\n                prefix={<Icon name=\"account\"/>}\n                placeholder=\"John Doe\" \n                value={second} \n                width={300}\n                onChange={e => setSecond(e.target.value)}/>\n            <InputField\n                size=\"large\"\n                color=\"info\"\n                prefix={<Icon name=\"account\"/>}\n                placeholder=\"John Doe \" \n                value={second} \n                width={300}\n                onChange={e => setSecond(e.target.value)}/>\n        </div>\n    )\n}`\n\nconst textareaUsage =\n`// Usage examples\nimport React, { useState } from 'react';\nimport { TextareaField, Icon } from '@assenti/react-ui-components';\n\nfunction Example() {\n    const [text, setText] = useState('');\n\n    return (\n        <div>\n            <TextareaField\n                prefix={<Icon name=\"edit\" />}\n                label=\"Textarea field\"\n                placeholder=\"Textarea field\" \n                value={text}\n                maxRows={20}\n                color=\"primary\"\n                width={300}\n                onChange={e => setText(e.target.value)}/>\n            <TextareaField\n                label=\"Textarea field\"\n                placeholder=\"Textarea field\" \n                value={text}\n                maxRows={20}\n                color=\"info\"\n                borderType=\"tile\"\n                rows={4}\n                width={300}\n                onChange={e => setText(e.target.value)}/>\n        </div>\n    )\n}`\n\nconst keys = ['property', 'description', 'default', 'type', 'value'];\nconst items = [\n    { \n        property: 'onChange', \n        description: 'Handle input value change (return input change event object)', \n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'onKeyUp', \n        description: 'Invokes on InputField any key pressed (return key change event object)', \n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'onEnter', \n        description: 'Invokes on InputField \"Enter\" key pressed', \n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'value', \n        description: 'Input value', \n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'autoComplete', \n        description: 'Enable input autocomplete', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'name', \n        description: 'Set name prop for get all inputted values for autocomplete', \n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'clearable', \n        description: 'Allow clear icon on value inputted', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'onClear', \n        description: 'Invokes on clear icon click', \n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'lifted', \n        description: 'Lift up the input field', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'autoFocus', \n        description: 'Set input focus on component mounted', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'color', \n        description: 'Set color of input field from list', \n        default: '', \n        type: 'string',\n        value: 'primary | info | success | error'\n    },\n    { \n        property: 'disabled',\n        description: 'Make input field disabled', \n        default: 'false',\n        type: 'boolean', \n        value: 'true | false'\n    },\n    { \n        property: 'borderType', \n        description: 'Set borders type', \n        default: '', \n        type: 'string',\n        value: 'tile | smooth | rounded'\n    },\n    { \n        property: 'uppercase',\n        description: 'Transform text to upper case', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'size', \n        description: 'Set input field size',\n        default: '', \n        type: 'string',\n        value: 'medium | large'\n    },\n    { \n        property: 'prefix',\n        description: 'Set prefix', \n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'suffix',\n        description: 'Set suffix', \n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'width',\n        description: 'Set InputField width', \n        default: '', \n        type: 'string | number',\n        value: ''\n    },\n    { \n        property: 'type',\n        description: 'Set input type', \n        default: 'text', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'min',\n        description: 'Set min number (has effect with type=\"number\")', \n        default: '', \n        type: 'number',\n        value: ''\n    },\n    { \n        property: 'max',\n        description: 'Set max number (has effect with type=\"number\")', \n        default: '', \n        type: 'number',\n        value: ''\n    },\n    { \n        property: 'minLength',\n        description: 'Set min length for text (has effect with type=\"text\")', \n        default: '', \n        type: 'number',\n        value: ''\n    },\n    { \n        property: 'maxLength',\n        description: 'Set max length for text (has effect with type=\"text\")', \n        default: '', \n        type: 'number',\n        value: ''\n    },\n    { \n        property: 'required',\n        description: 'Set input required', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'readOnly',\n        description: 'Set input readOnly', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'whiteBackground',\n        description: 'Set input background color to white', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'className',\n        description: 'Set a custom css class to component', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n]\nconst itemsTextarea = [\n    { \n        property: 'onChange', \n        description: 'Handle input value change', \n        default: '', \n        type: 'function',\n        value: 'return a input change event object'\n    },\n    { \n        property: 'value', \n        description: 'Input value', \n        default: '', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'rows',\n        description: 'Set textarea rows count', \n        default: '1', \n        type: 'number',\n        value: ''\n    },\n    { \n        property: 'maxRows',\n        description: 'Set maximum textarea rows', \n        default: '10', \n        type: 'number',\n        value: ''\n    },\n    { \n        property: 'clearable', \n        description: 'Allow clear icon on value inputted', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'onClear', \n        description: 'Invokes on clear icon click', \n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'lifted', \n        description: 'Lift up the input field', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'autoFocus', \n        description: 'Set input focus on component mounted', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'color', \n        description: 'Set color of input field from list', \n        default: '', \n        type: 'string',\n        value: 'primary | info | success | error'\n    },\n    { \n        property: 'disabled',\n        description: 'Make input field disabled', \n        default: 'false',\n        type: 'boolean', \n        value: 'true | false'\n    },\n    { \n        property: 'borderType', \n        description: 'Set borders type', \n        default: '', \n        type: 'string',\n        value: 'tile | smooth'\n    },\n    { \n        property: 'uppercase',\n        description: 'Transform text to upper case', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'prefix',\n        description: 'Set prefix', \n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'suffix',\n        description: 'Set suffix', \n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'width',\n        description: 'Set InputField width', \n        default: '', \n        type: 'string | number',\n        value: ''\n    },\n    { \n        property: 'required',\n        description: 'Set input required', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'readOnly',\n        description: 'Set input readOnly', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'whiteBackground',\n        description: 'Set input background color to white', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'className',\n        description: 'Set a custom css class to component', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n]\n\nconst InputsPage = () => {\n    const [login, setLogin] = useState('');\n    const [password, setPassword] = useState('');\n    const [second, setSecond] = useState('');\n    const [search, setSearch] = useState('');\n    const [amount, setAmount] = useState(0);\n    const [text, setText] = useState('');\n    const api = createRef();\n    const parent = createRef();\n\n    const goToApi = () => {\n        if (api.current) api.current.scrollIntoView({ behavior: 'smooth', block: 'center' })\n    }\n\n    return (\n        <div className=\"rui-page\" ref={parent}>\n            <div className=\"row align-center space-between\">\n                <div className=\"rui-page-title\">InputField, TextareaField Components</div>\n                <div onClick={() => goToApi()} className=\"rui-link fz-13 fw-bold mr-10\">API</div>\n            </div>\n            <Card outlined color=\"gray\" title=\"Input types\">\n                <InputField\n                    label=\"Login\"\n                    placeholder=\"Input your login\" \n                    value={login}\n                    autoComplete\n                    hint=\"InputField with tile borderType\"\n                    borderType=\"tile\"\n                    name=\"login\"\n                    color=\"primary\"\n                    width={300}\n                    required\n                    onChange={e => setLogin(e.target.value)}/>\n                <InputField\n                    label=\"Password\"\n                    placeholder=\"Input your password\" \n                    value={password}\n                    type=\"password\"\n                    hint=\"InputField with default borderType\"\n                    color=\"info\"\n                    width={300}\n                    onChange={e => setPassword(e.target.value)}/>\n                <InputField\n                    label=\"Amount\"\n                    placeholder=\"Input amount\" \n                    value={amount}\n                    type=\"number\"\n                    min={0}\n                    borderType=\"smooth\"\n                    hint=\"InputField with smooth borderType\"\n                    color=\"primary\"\n                    prefix={<Icon name=\"tenge\"/>}\n                    width={300}\n                    onChange={e => setAmount(e.target.value)}/>\n                <InputField\n                    label=\"Login\"\n                    placeholder=\"Input your login\" \n                    value={second}\n                    borderType=\"rounded\"\n                    hint=\"InputField with rounded borderType\"\n                    clearable\n                    autoFocus\n                    onClear={() => setSecond('')} \n                    prefix={<Icon name=\"account\"/>}\n                    color=\"info\"\n                    width={300}\n                    onChange={e => setSecond(e.target.value)}/>\n                <InputField\n                    placeholder=\"Search...\" \n                    value={search}\n                    hint=\"Let's find something interesting...\"\n                    color=\"primary\"\n                    width={300}\n                    prefix={<Icon name=\"search\"/>}\n                    suffix={<Button name=\"Search\" color=\"primary\" onClick={() => console.log(search)}/>}\n                    onEnter={() => console.log(search)}\n                    onChange={e => setSearch(e.target.value)}/>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {inputTypes}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <br/>\n            <Card outlined color=\"gray\" title=\"Input sizes\">\n                <InputField\n                    color=\"info\"\n                    placeholder=\"John Doe\" \n                    value={second} \n                    width={300}\n                    prefix={<Icon name=\"account\"/>}\n                    onChange={e => setSecond(e.target.value)}/>\n                <InputField\n                    size=\"medium\"\n                    color=\"info\"\n                    prefix={<Icon name=\"account\"/>}\n                    placeholder=\"John Doe\" \n                    value={second} \n                    width={300}\n                    onChange={e => setSecond(e.target.value)}/>\n                <InputField\n                    size=\"large\"\n                    color=\"info\"\n                    prefix={<Icon name=\"account\"/>}\n                    placeholder=\"John Doe \" \n                    value={second} \n                    width={300}\n                    onChange={e => setSecond(e.target.value)}/>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {inputSizes}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <br/>\n            <Card outlined color=\"gray\" title=\"TextareaField Usage\">\n                <TextareaField\n                    prefix={<Icon name=\"edit\" />}\n                    label=\"Textarea field\"\n                    placeholder=\"Textarea field\" \n                    value={text}\n                    maxRows={20}\n                    color=\"primary\"\n                    width={300}\n                    onChange={e => setText(e.target.value)}/>\n                <TextareaField\n                    label=\"Textarea field\"\n                    placeholder=\"Textarea field\" \n                    value={text}\n                    maxRows={20}\n                    color=\"info\"\n                    borderType=\"tile\"\n                    rows={4}\n                    width={300}\n                    onChange={e => setText(e.target.value)}/>\n                <Collapse icon=\"code\" iconSize={18} tooltip=\"Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {textareaUsage}\n                    </SyntaxHighlighter>\n                </Collapse>\n            </Card>\n            <BackTopBtn setRef={parent} dark size=\"medium\"/>\n            <h2 ref={api}>InputField API</h2>\n            <Table\n                bordered\n                headers={['Property', 'Description', 'Default', 'Type', 'Value']}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n            <h2>TextareaField API</h2>\n            <Table\n                bordered\n                headers={['Property', 'Description', 'Default', 'Type', 'Value']}\n                items={itemsTextarea}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n\nexport default InputsPage;"],"sourceRoot":""}