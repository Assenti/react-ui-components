{"version":3,"sources":["pages/HeaderPage.js"],"names":["keys","items","property","description","default","type","value","usage","colors","HeaderPage","useState","color","setColor","dark","setDark","smooth","setSmooth","leftControl","setLeftControl","rightSide","setRightSide","className","outlined","title","prefix","name","width","label","onChange","v","check","rightLabel","light","icon","iconSize","extra","defaultText","text","contentStyles","padding","tooltip","language","style","prism","bordered","headers","index","itemTitles"],"mappings":"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","file":"js/21.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Header, Card, Table, Button, Collapse, Select, Icon, Switch, CopyToClipboard } from '../components';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst keys = ['property', 'description', 'default', 'type', 'value'];\nconst items = [\n    { \n        property: 'title',\n        description: 'Set Header title', \n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'height',\n        description: 'Set Header height', \n        default: '50px', \n        type: 'string | number',\n        value: ''\n    },\n    { \n        property: 'color',\n        description: 'Set Header background color', \n        default: '', \n        type: 'string',\n        value: 'primary | info | success | info | black'\n    },\n    { \n        property: 'sticky',\n        description: 'Set Header position sticky', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'dark', \n        description: 'Set dark mode', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'leftControl', \n        description: 'Set control button on left side', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'leftControlIcon', \n        description: 'Set control button icon (see icons list)', \n        default: 'menu', \n        type: 'string',\n        value: ''\n    },\n    { \n        property: 'onLeftControl', \n        description: 'Invokes on left control click', \n        default: '', \n        type: 'function',\n        value: ''\n    },\n    { \n        property: 'rightSide',\n        description: 'Set right side elements', \n        default: '', \n        type: 'any',\n        value: ''\n    },\n    { \n        property: 'smooth',\n        description: 'Make header borders smooth', \n        default: 'false', \n        type: 'boolean',\n        value: 'true | false'\n    },\n    { \n        property: 'className',\n        description: 'Set a custom css class to component', \n        default: '', \n        type: 'string',\n        value: ''\n    }\n]\n\nconst usage = \n`// Usage examples\nimport React, { useState } from 'react';\nimport { Header, Button, Select, Icon, Switch } from '@assenti/react-ui-components';\nconst colors = ['default', 'primary', 'info', 'success', 'error', 'black'];\n\nfunction Example() {\n    const [color, setColor] = useState(colors[0]);\n    const [dark, setDark] = useState(false);\n    const [smooth, setSmooth] = useState(false);\n    const [leftControl, setLeftControl] = useState(true);\n    const [rightSide, setRightSide] = useState(false);\n\n    return (\n        <div>\n            <Select\n                items={colors}\n                prefix={<Icon name=\"brush\"/>}\n                width={200}\n                label=\"Color theme\"\n                color=\"primary\"\n                value={color}\n                onChange={v => setColor(v)}/>\n            <br/>\n            <Switch \n                color=\"primary\" \n                check={dark}\n                rightLabel=\"Dark\"\n                className=\"my-10\"\n                onChange={() => setDark(!dark)}/>\n            <br/>\n            <Switch \n                color=\"primary\" \n                check={smooth}\n                rightLabel=\"Smooth borders\"\n                className=\"my-10\"\n                onChange={() => setSmooth(!smooth)}/>\n            <br/>\n            <Switch \n                color=\"primary\" \n                check={rightSide}\n                rightLabel=\"Right side\"\n                className=\"my-10\"\n                onChange={() => setRightSide(!rightSide)}/>\n            <br/>\n            <Switch \n                color=\"primary\" \n                check={leftControl}\n                rightLabel=\"Left control\"\n                className=\"my-10\"\n                onChange={() => setLeftControl(!leftControl)}/>\n            <br/>\n            <Header\n                color={!dark ? color : null}\n                smooth={smooth}\n                dark={dark}\n                title=\"Header light\" \n                leftControl={leftControl}\n                rightSide={rightSide ?\n                    <Button \n                        dark={dark || (color && color !== 'default')}\n                        light={color === 'default' && !dark}\n                        icon=\"account\"/> : null}/>\n        </div>\n    )\n}`\n\nconst colors = ['default', 'primary', 'info', 'success', 'error', 'black'];\n\nconst HeaderPage = () => {\n    const [color, setColor] = useState(colors[0]);\n    const [dark, setDark] = useState(false);\n    const [smooth, setSmooth] = useState(false);\n    const [leftControl, setLeftControl] = useState(true);\n    const [rightSide, setRightSide] = useState(false);\n\n    return (\n        <div className=\"rui-page\">\n            <div className=\"row align-center space-between\">\n                <div className=\"rui-page-title\">Header Component</div>\n            </div>\n            <Card outlined title=\"Header usage\">\n                <Select\n                    items={colors}\n                    prefix={<Icon name=\"brush\"/>}\n                    width={200}\n                    label=\"Color theme\"\n                    color=\"primary\"\n                    value={color}\n                    onChange={v => setColor(v)}/>\n                <br/>\n                <Switch \n                    color=\"primary\" \n                    check={dark}\n                    rightLabel=\"Dark\"\n                    className=\"my-10\"\n                    onChange={() => setDark(!dark)}/>\n                <br/>\n                <Switch \n                    color=\"primary\" \n                    check={smooth}\n                    rightLabel=\"Smooth borders\"\n                    className=\"my-10\"\n                    onChange={() => setSmooth(!smooth)}/>\n                <br/>\n                <Switch \n                    color=\"primary\" \n                    check={rightSide}\n                    rightLabel=\"Right side\"\n                    className=\"my-10\"\n                    onChange={() => setRightSide(!rightSide)}/>\n                <br/>\n                <Switch \n                    color=\"primary\" \n                    check={leftControl}\n                    rightLabel=\"Left control\"\n                    className=\"my-10\"\n                    onChange={() => setLeftControl(!leftControl)}/>\n                <br/>\n                <Header\n                    color={!dark ? color : null}\n                    smooth={smooth}\n                    dark={dark}\n                    title=\"Header light\" \n                    leftControl={leftControl}\n                    rightSide={rightSide ?\n                        <Button \n                            dark={dark || (color && color !== 'default')}\n                            light={color === 'default' && !dark}\n                            icon=\"account\"/> : null}/>\n                <br/>\n                <Collapse \n                    icon=\"code\" \n                    iconSize={18}\n                    extra={<CopyToClipboard defaultText=\"Copy code\" text={usage} className=\"mr-10\"/>} \n                    contentStyles={{ padding: 0 }}\n                    tooltip=\"Show/Hide Code\">\n                    <SyntaxHighlighter language=\"jsx\" style={prism}>\n                        {usage}\n                    </SyntaxHighlighter> \n                </Collapse>\n            </Card>\n            <h2>API</h2>\n            <Table\n                bordered\n                headers={['Property', 'Description', 'Default', 'Type', 'Value']}\n                items={items}\n                index\n                itemTitles={keys}/>\n        </div>\n    )\n}\nexport default HeaderPage;"],"sourceRoot":""}