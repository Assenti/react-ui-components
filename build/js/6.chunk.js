(this["webpackJsonp@assenti/rui-components"]=this["webpackJsonp@assenti/rui-components"]||[]).push([[6],{287:function(e,t,n){"use strict";n.r(t);var o=n(8),a=n(1),r=n(0),c=n.n(r),l=n(3),i=n(329),s=n(47),m=n(48),d=n(49),p=n.n(d),u=n(52),b=n.n(u),h=n(55),g=n.n(h),f=n(63),y=n.n(f),v='// Usage examples\nimport React, { useState } from \'react\';\nimport { List, ListItem, Card, Select, Icon, Switch, RadioGroup, phoneMask } from \'@assenti/rui-components\';\nconst names = [\n    { name: \'Steve Rogers\', hero: \'Captain America\', phone: \'1234567890\', icon: \'shield-account\', img: manImage, check: false, active: false }, \n    { name: \'Peter Parker\', hero: \'Spider man\', phone: \'1234567890\', icon: \'shield-account\', img: manImage2, check: false, active: true }, \n    { name: \'Tony Stark\', hero: \'Iron man\', phone: \'1234567890\', icon: \'shield-account\', img: manImage3, check: false, active: false }, \n    { name: \'Bruce Benner\', hero: \'Hulk\', phone: \'1234567890\', icon: \'shield-account\', img: manImage4, check: false, active: false }\n];\nconst types = [\'image\', \'icon\', \'none\'];\nconst sizes = [\'default\', \'medium\', \'large\'];\nconst colors = [\'primary\', \'info\', \'success\', \'error\'];\nconst borders = [\'default\', \'rounded\', \'tile\'];\n\nfunction Example() {\n    const [selected, setSelected] = useState([]);\n    const [size, setSize] = useState(sizes[0]);\n    const [border, setBorder] = useState(borders[1]);\n    const [color, setColor] = useState(colors[0]);\n    const [dark, setDark] = useState(false);\n    const [rounded, setRounded] = useState(false);\n    const [divider, setDivider] = useState(false);\n    const [hover, setHover] = useState(false);\n    const [subtitle, setSubtitle] = useState(false);\n    const [left, setLeft] = useState(false);\n    const [checkbox, setCheckbox] = useState(false);\n    const [controls, setControls] = useState(true);\n    const [type, setType] = useState(\'\');\n\n    const selectOne = (item) => {\n        if (isSelected(item)) {\n            setSelected(selected => selected.filter(_item => _item !== item))\n        } else setSelected([...selected, item]);\n    }\n\n    const isSelected = (item) => {\n        let result = false\n        for (const select of selected) {\n            if (item === select) result = true \n        }\n        return result\n    }\n\n    return (\n        <div>\n            <Select\n                items={sizes}\n                prefix={<Icon name="format-size"/>}\n                width={200}\n                label="List size"\n                color="primary"\n                className="pl-10"\n                value={size}\n                onChange={v => setSize(v)}/>\n            <br/>\n            <Select\n                items={borders}\n                prefix={<Icon name="shape"/>}\n                width={200}\n                label="Avatar border type"\n                color="primary"\n                className="pl-10"\n                value={border}\n                onChange={v => setBorder(v)}/>\n            <br/>\n            <Select\n                items={colors}\n                prefix={<Icon name="brush"/>}\n                width={200}\n                label="Active item color"\n                color="primary"\n                className="pl-10"\n                value={color}\n                onChange={v => setColor(v)}/>\n            <br/>\n            <Switch \n                color="primary" \n                check={dark}\n                rightLabel="Dark"\n                className="pl-10 my-10"\n                onChange={() => setDark(!dark)}/>\n            <Switch \n                color="primary" \n                check={hover}\n                rightLabel="Hover"\n                className="pl-10 my-10"\n                onChange={() => setHover(!hover)}/>\n            <Switch \n                color="primary" \n                check={divider}\n                rightLabel="Hide dividers"\n                className="pl-10 my-10"\n                onChange={() => setDivider(!divider)}/>\n            <br/>\n            <RadioGroup\n                options={types} \n                value={type}\n                name="type"\n                className="pl-10 mt-10" \n                onChange={(value) => setType(value)}/>\n            <br/>\n            <Switch \n                color="primary" \n                check={subtitle}\n                rightLabel="Subtitle"\n                className="pl-10 my-10"\n                onChange={() => setSubtitle(!subtitle)}/>\n            <br/>\n            <Switch \n                color="primary" \n                check={rounded}\n                rightLabel="Rounded active item"\n                className="pl-10 my-10"\n                onChange={() => setRounded(!rounded)}/>\n            <Switch \n                color="primary" \n                check={left}\n                rightLabel="Active item left border"\n                className="pl-10 my-10"\n                onChange={() => setLeft(!left)}/>\n            <br/>\n            <Switch \n                color="primary" \n                check={checkbox}\n                rightLabel="Checkbox"\n                className="pl-10 my-10"\n                onChange={() => setCheckbox(!checkbox)}/>\n            <Switch \n                color="primary" \n                check={controls}\n                rightLabel="Controls"\n                className="pl-10 my-10"\n                onChange={() => setControls(!controls)}/>\n            <Card\n                className="ma-10" \n                dark={dark} \n                width={400}>\n                <List\n                    size={size}\n                    dark={dark} \n                    header={\n                        <div className="row align-center space-between">\n                            Selected persons: {selected.length}\n                            {selected.length > 0 ? <Button className="ma-0" light icon="share" size={18}/> : \'\'}\n                        </div>\n                    }>\n                    {names.map((item, index) => \n                        <ListItem\n                            isActiveItem={isSelected(item.hero)}\n                            onClick={() => selectOne(item.hero)}\n                            key={index} \n                            hover={hover}\n                            item={item.name}\n                            color={color}\n                            noDivider={divider}\n                            roundedActive={rounded}\n                            leftBorder={left}\n                            subTitle={subtitle ? item.hero : null}\n                            icon={type === \'icon\' ? item.icon : null}\n                            avatar={type === \'image\' ? item.img : null}\n                            avatarBorderType={border}\n                            checkbox={checkbox}\n                            controls={controls ?\n                                <div className="row align-center fz-9 text-dark">\n                                    <Icon name="smartphone" size={16} className="mr-5"/>\n                                    {phoneMask(item.phone)}\n                                    <Button color="light" \n                                        className="ml-10" \n                                        icon="edit"\n                                        iconSize={16}/>\n                                </div> : null}/>\n                    )}\n                </List>\n            </Card>\n        </div>\n    )\n}',k=[{name:"Steve Rogers",hero:"Captain America",phone:"1234567890",icon:"shield-account",img:p.a,check:!1,active:!1},{name:"Peter Parker",hero:"Spider man",phone:"1234567890",icon:"shield-account",img:b.a,check:!1,active:!0},{name:"Tony Stark",hero:"Iron man",phone:"1234567890",icon:"shield-account",img:g.a,check:!1,active:!1},{name:"Bruce Benner",hero:"Hulk",phone:"1234567890",icon:"shield-account",img:y.a,check:!1,active:!1}],S=["image","icon","none"],x=["property","description","default","type","value"],w=[{property:"header",description:"Set list header",default:"",type:"any",value:""},{property:"size",description:"Set list item size",default:"",type:"string",value:"medium | large"},{property:"dark",description:"Set dark mode (can not be used with light prop)",default:"false",type:"boolean",value:"true | false"},{property:"className",description:"Set a custom css class to component",default:"",type:"string",value:""}],z=[{property:"render",description:"You can pass your own custom element",default:"",type:"any",value:""},{property:"onClick",description:"Invokes on item click",default:"",type:"function",value:""},{property:"item",description:"Set list item",default:"",type:"string | number | object",value:""},{property:"subTitle",description:"Set subtitle in list item (It can be just text or Tag and etc.)",default:"",type:"any",value:""},{property:"tooltip",description:"Set tooltip",default:"",type:"string",value:""},{property:"tooltipPosition",description:"Set tooltip position",default:"top",type:"string",value:"left | right | bottom"},{property:"isActiveItem",description:"Set active list item",default:"false",type:"boolean",value:"true | false"},{property:"roundedActive",description:"Set hover and active list item rounded",default:"false",type:"boolean",value:"true | false"},{property:"color",description:"Set active list item color",default:"",type:"string",value:"primary | info | success | error"},{property:"leftBorder",description:"Set left border highlighting on active item",default:"false",type:"boolean",value:"true | false"},{property:"checkbox",description:"A placeholder for checkbox (Expect a checkbox element or Component)",default:"",type:"any",value:""},{property:"icon",description:"Set icon before the text in list item",default:"",type:"string",value:"home | search | etc. (see icon names list in docs)"},{property:"controls",description:"A placeholder for item controls like buttons or etc.",default:"",type:"any",value:""},{property:"noDivider",description:"Remove the divider line between items",default:"false",type:"boolean",value:"true | false"},{property:"hover",description:"Highlight hovered list item",default:"false",type:"boolean",value:"true | false"},{property:"className",description:"Set a custom css class to component",default:"",type:"string",value:""}],C=["default","medium","large"],E=["primary","info","success","error"],N=["default","rounded","tile"];t.default=function(){var e=Object(r.useState)([]),t=Object(a.a)(e,2),n=t[0],d=t[1],p=Object(r.useState)(C[0]),u=Object(a.a)(p,2),b=u[0],h=u[1],g=Object(r.useState)(N[1]),f=Object(a.a)(g,2),y=f[0],O=f[1],L=Object(r.useState)(E[0]),T=Object(a.a)(L,2),j=T[0],I=T[1],A=Object(r.useState)(!1),B=Object(a.a)(A,2),H=B[0],M=B[1],D=Object(r.useState)(!1),W=Object(a.a)(D,2),R=W[0],P=W[1],K=Object(r.useState)(!1),U=Object(a.a)(K,2),F=U[0],V=U[1],G=Object(r.useState)(!1),_=Object(a.a)(G,2),J=_[0],Y=_[1],q=Object(r.useState)(!1),Q=Object(a.a)(q,2),X=Q[0],Z=Q[1],$=Object(r.useState)(!1),ee=Object(a.a)($,2),te=ee[0],ne=ee[1],oe=Object(r.useState)(!1),ae=Object(a.a)(oe,2),re=ae[0],ce=ae[1],le=Object(r.useState)(!0),ie=Object(a.a)(le,2),se=ie[0],me=ie[1],de=Object(r.useRef)(),pe=Object(r.useRef)(),ue=Object(r.useRef)(),be=Object(r.useState)(""),he=Object(a.a)(be,2),ge=he[0],fe=he[1],ye=function(e){var t=!1,o=!0,a=!1,r=void 0;try{for(var c,l=n[Symbol.iterator]();!(o=(c=l.next()).done);o=!0){e===c.value&&(t=!0)}}catch(i){a=!0,r=i}finally{try{o||null==l.return||l.return()}finally{if(a)throw r}}return t};return c.a.createElement(l.P.Consumer,null,(function(e){return c.a.createElement("div",{className:"rui-page",ref:ue},c.a.createElement("div",{className:"row align-center space-between"},c.a.createElement("div",{className:"rui-page-title"},"<List/>, <ListItem/>"," Components"),c.a.createElement("div",{className:"row"},c.a.createElement("div",{className:"rui-link fz-13 fw-bold mr-10",onClick:function(){de.current&&de.current.scrollIntoView({behavior:"smooth",block:"start"})}},"List API"),c.a.createElement("div",{className:"rui-link fz-13 fw-bold",onClick:function(){pe.current&&pe.current.scrollIntoView({behavior:"smooth",block:"start"})}},"ListItem API"))),c.a.createElement(l.j,{dark:e,header:c.a.createElement("h4",null,"Usage")},c.a.createElement(l.I,{items:C,prefix:c.a.createElement(l.w,{name:"format-size"}),width:200,dark:e,label:"List size",color:"primary",className:"pl-10",value:b,onChange:function(e){return h(e)}}),c.a.createElement("br",null),c.a.createElement(l.I,{items:N,prefix:c.a.createElement(l.w,{name:"shape"}),width:200,dark:e,label:"Avatar border type",color:"primary",className:"pl-10",value:y,onChange:function(e){return O(e)}}),c.a.createElement("br",null),c.a.createElement(l.I,{items:E,prefix:c.a.createElement(l.w,{name:"brush"}),width:200,dark:e,label:"Active item color",color:"primary",className:"pl-10",value:j,onChange:function(e){return I(e)}}),c.a.createElement("br",null),c.a.createElement(l.K,{color:"primary",check:H,rightLabel:"Dark",className:"pl-10 my-10",onChange:function(){return M(!H)}}),c.a.createElement(l.K,{color:"primary",check:J,rightLabel:"Hover",className:"pl-10 my-10",onChange:function(){return Y(!J)}}),c.a.createElement(l.K,{color:"primary",check:F,rightLabel:"Hide dividers",className:"pl-10 my-10",onChange:function(){return V(!F)}}),c.a.createElement("br",null),c.a.createElement(l.G,{options:S,value:ge,name:"type",className:"pl-10 mt-10",onChange:function(e){return fe(e)}}),c.a.createElement("br",null),c.a.createElement(l.K,{color:"primary",check:X,rightLabel:"Subtitle",className:"pl-10 my-10",onChange:function(){return Z(!X)}}),c.a.createElement("br",null),c.a.createElement(l.K,{color:"primary",check:R,rightLabel:"Rounded active item",className:"pl-10 my-10",onChange:function(){return P(!R)}}),c.a.createElement(l.K,{color:"primary",check:te,rightLabel:"Active item left border",className:"pl-10 my-10",onChange:function(){return ne(!te)}}),c.a.createElement("br",null),c.a.createElement(l.K,{color:"primary",check:re,rightLabel:"Checkbox",className:"pl-10 my-10",onChange:function(){return ce(!re)}}),c.a.createElement(l.K,{color:"primary",check:se,rightLabel:"Controls",className:"pl-10 my-10",onChange:function(){return me(!se)}}),c.a.createElement(l.o,null),c.a.createElement("br",null),c.a.createElement(l.j,{className:"ma-10",dark:e,width:400},c.a.createElement(l.z,{size:b,dark:e,header:c.a.createElement("div",{className:"row align-center space-between"},"Selected persons: ",n.length,n.length>0?c.a.createElement(l.g,{className:"ma-0",light:!0,icon:"share",size:18}):"")},k.map((function(t,a){return c.a.createElement(l.A,{isActiveItem:ye(t.hero),onClick:function(){return function(e){ye(e)?d((function(t){return t.filter((function(t){return t!==e}))})):d([].concat(Object(o.a)(n),[e]))}(t.hero)},key:a,hover:J,item:t.name,color:j,noDivider:F,roundedActive:R,leftBorder:te,subTitle:X?t.hero:null,icon:"icon"===ge?t.icon:null,avatar:"image"===ge?t.img:null,avatarBorderType:y,checkbox:re,controls:se?c.a.createElement("div",{className:"row align-center fz-9"},c.a.createElement(l.w,{name:"smartphone",size:16,className:"mr-5",color:e?"lightgray":""}),Object(l.W)(t.phone),c.a.createElement(l.g,{color:"light",className:"ml-10",dark:e,icon:"edit",iconSize:16})):null})})))),c.a.createElement(l.l,{className:"px-15",icon:"code",dark:e,extra:c.a.createElement(l.m,{defaultText:"Copy code",text:v,dark:e,className:"mr-10"}),iconSize:18,tooltip:"Show/Hide Code"},c.a.createElement(i.a,{language:"jsx",style:e?s.a:m.a},v))),c.a.createElement("h2",{ref:de},"List API"),c.a.createElement(l.L,{bordered:!0,dark:e,headers:["Property","Description","Default","Type","Value"],items:w,index:!0,itemTitles:x}),c.a.createElement("h2",{ref:pe},"ListItem API"),c.a.createElement(l.L,{bordered:!0,dark:e,headers:["Property","Description","Default","Type","Value"],items:z,index:!0,itemTitles:x}),c.a.createElement(l.d,{setRef:ue,dark:!0,size:"medium"}))}))}},47:function(e,t,n){"use strict";t.a={'code[class*="language-"]':{color:"#ccc",background:"none",fontFamily:"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace",textAlign:"left",whiteSpace:"pre",wordSpacing:"normal",wordBreak:"normal",wordWrap:"normal",lineHeight:"1.5",MozTabSize:"4",OTabSize:"4",tabSize:"4",WebkitHyphens:"none",MozHyphens:"none",msHyphens:"none",hyphens:"none"},'pre[class*="language-"]':{color:"#ccc",background:"#2d2d2d",fontFamily:"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace",textAlign:"left",whiteSpace:"pre",wordSpacing:"normal",wordBreak:"normal",wordWrap:"normal",lineHeight:"1.5",MozTabSize:"4",OTabSize:"4",tabSize:"4",WebkitHyphens:"none",MozHyphens:"none",msHyphens:"none",hyphens:"none",padding:"1em",margin:".5em 0",overflow:"auto"},':not(pre) > code[class*="language-"]':{background:"#2d2d2d",padding:".1em",borderRadius:".3em",whiteSpace:"normal"},comment:{color:"#999"},"block-comment":{color:"#999"},prolog:{color:"#999"},doctype:{color:"#999"},cdata:{color:"#999"},punctuation:{color:"#ccc"},tag:{color:"#e2777a"},"attr-name":{color:"#e2777a"},namespace:{color:"#e2777a"},deleted:{color:"#e2777a"},"function-name":{color:"#6196cc"},boolean:{color:"#f08d49"},number:{color:"#f08d49"},function:{color:"#f08d49"},property:{color:"#f8c555"},"class-name":{color:"#f8c555"},constant:{color:"#f8c555"},symbol:{color:"#f8c555"},selector:{color:"#cc99cd"},important:{color:"#cc99cd",fontWeight:"bold"},atrule:{color:"#cc99cd"},keyword:{color:"#cc99cd"},builtin:{color:"#cc99cd"},string:{color:"#7ec699"},char:{color:"#7ec699"},"attr-value":{color:"#7ec699"},regex:{color:"#7ec699"},variable:{color:"#7ec699"},operator:{color:"#67cdcc"},entity:{color:"#67cdcc",cursor:"help"},url:{color:"#67cdcc"},bold:{fontWeight:"bold"},italic:{fontStyle:"italic"},inserted:{color:"green"}}},48:function(e,t,n){"use strict";t.a={'code[class*="language-"]':{color:"black",background:"none",fontFamily:"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace",textAlign:"left",whiteSpace:"pre",wordSpacing:"normal",wordBreak:"normal",wordWrap:"normal",lineHeight:"1.5",MozTabSize:"4",OTabSize:"4",tabSize:"4",WebkitHyphens:"none",MozHyphens:"none",msHyphens:"none",hyphens:"none"},'pre[class*="language-"]':{color:"black",background:"none",fontFamily:"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace",textAlign:"left",whiteSpace:"pre",wordSpacing:"normal",wordBreak:"normal",wordWrap:"normal",lineHeight:"1.5",MozTabSize:"4",OTabSize:"4",tabSize:"4",WebkitHyphens:"none",MozHyphens:"none",msHyphens:"none",hyphens:"none",position:"relative",margin:".5em 0",overflow:"visible",padding:"0",backgroundColor:"#fdfdfd",WebkitBoxSizing:"border-box",MozBoxSizing:"border-box",boxSizing:"border-box",marginBottom:"1em"},'pre[class*="language-"]>code':{position:"relative",borderLeft:"10px solid #358ccb",boxShadow:"-1px 0px 0px 0px #358ccb, 0px 0px 0px 1px #dfdfdf",backgroundColor:"#fdfdfd",backgroundImage:"linear-gradient(transparent 50%, rgba(69, 142, 209, 0.04) 50%)",backgroundSize:"3em 3em",backgroundOrigin:"content-box",backgroundAttachment:"local"},'code[class*="language"]':{maxHeight:"inherit",height:"inherit",padding:"0 1em",display:"block",overflow:"auto"},':not(pre) > code[class*="language-"]':{backgroundColor:"#fdfdfd",WebkitBoxSizing:"border-box",MozBoxSizing:"border-box",boxSizing:"border-box",marginBottom:"1em",position:"relative",padding:".2em",borderRadius:"0.3em",color:"#c92c2c",border:"1px solid rgba(0, 0, 0, 0.1)",display:"inline",whiteSpace:"normal"},'pre[class*="language-"]:before':{content:"''",zIndex:"-2",display:"block",position:"absolute",bottom:"0.75em",left:"0.18em",width:"40%",height:"20%",maxHeight:"13em",boxShadow:"0px 13px 8px #979797",WebkitTransform:"rotate(-2deg)",MozTransform:"rotate(-2deg)",msTransform:"rotate(-2deg)",OTransform:"rotate(-2deg)",transform:"rotate(-2deg)"},'pre[class*="language-"]:after':{content:"''",zIndex:"-2",display:"block",position:"absolute",bottom:"0.75em",left:"auto",width:"40%",height:"20%",maxHeight:"13em",boxShadow:"0px 13px 8px #979797",WebkitTransform:"rotate(2deg)",MozTransform:"rotate(2deg)",msTransform:"rotate(2deg)",OTransform:"rotate(2deg)",transform:"rotate(2deg)",right:"0.75em"},':not(pre) > code[class*="language-"]:after':{right:"0.75em",left:"auto",WebkitTransform:"rotate(2deg)",MozTransform:"rotate(2deg)",msTransform:"rotate(2deg)",OTransform:"rotate(2deg)",transform:"rotate(2deg)"},comment:{color:"#7D8B99"},"block-comment":{color:"#7D8B99"},prolog:{color:"#7D8B99"},doctype:{color:"#7D8B99"},cdata:{color:"#7D8B99"},punctuation:{color:"#5F6364"},property:{color:"#c92c2c"},tag:{color:"#c92c2c"},boolean:{color:"#c92c2c"},number:{color:"#c92c2c"},"function-name":{color:"#c92c2c"},constant:{color:"#c92c2c"},symbol:{color:"#c92c2c"},deleted:{color:"#c92c2c"},selector:{color:"#2f9c0a"},"attr-name":{color:"#2f9c0a"},string:{color:"#2f9c0a"},char:{color:"#2f9c0a"},function:{color:"#2f9c0a"},builtin:{color:"#2f9c0a"},inserted:{color:"#2f9c0a"},operator:{color:"#a67f59",background:"rgba(255, 255, 255, 0.5)"},entity:{color:"#a67f59",background:"rgba(255, 255, 255, 0.5)",cursor:"help"},url:{color:"#a67f59",background:"rgba(255, 255, 255, 0.5)"},variable:{color:"#a67f59",background:"rgba(255, 255, 255, 0.5)"},atrule:{color:"#1990b8"},"attr-value":{color:"#1990b8"},keyword:{color:"#1990b8"},"class-name":{color:"#1990b8"},regex:{color:"#e90"},important:{color:"#e90",fontWeight:"normal"},".language-css .token.string":{color:"#a67f59",background:"rgba(255, 255, 255, 0.5)"},".style .token.string":{color:"#a67f59",background:"rgba(255, 255, 255, 0.5)"},bold:{fontWeight:"bold"},italic:{fontStyle:"italic"},".namespace":{Opacity:".7"},"tab:not(:empty):before":{color:"#e0d7d1"},"cr:before":{color:"#e0d7d1"},"lf:before":{color:"#e0d7d1"},'pre[class*="language-"].line-numbers.line-numbers':{paddingLeft:"0"},'pre[class*="language-"].line-numbers.line-numbers code':{paddingLeft:"3.8em"},'pre[class*="language-"].line-numbers.line-numbers .line-numbers-rows':{left:"0"},'pre[class*="language-"][data-line]':{paddingTop:"0",paddingBottom:"0",paddingLeft:"0"},"pre[data-line] code":{position:"relative",paddingLeft:"4em"},"pre .line-highlight":{marginTop:"0"}}},49:function(e,t,n){e.exports=n.p+"static/media/man.e941ef11.png"},52:function(e,t,n){e.exports=n.p+"static/media/hipster.4ca6ae2f.png"},55:function(e,t,n){e.exports=n.p+"static/media/man_.1a05fb23.png"},63:function(e,t,n){e.exports=n.p+"static/media/old.21fd9a1f.png"}}]);