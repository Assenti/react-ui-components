(this["webpackJsonp@assenti/rui-components"]=this["webpackJsonp@assenti/rui-components"]||[]).push([[13],{302:function(e,t,a){"use strict";a.r(t);var n=a(2),r=a(0),i=a.n(r),l=a(3),o=a(52),c=a(47),s=[{property:"items",description:"Select options",default:"",type:"string[] | object[]",value:""},{property:"itemKey",description:"Set if you pass items as array of objects",default:"",type:"string",value:""},{property:"childrenKey",description:"Set if you pass items with children array (pass the key of item that has children array)",default:"",type:"string",value:""},{property:"onChange",description:"Invokes in select option select (return item value)",default:"",type:"function",value:""},{property:"searchable",description:"Enable searching field in select menu (has effect only with one level list)",default:"false",type:"boolean",value:"true | false"},{property:"returnObject",description:"Returns item object on select change (used when items passed as array of objects, works only with one level items)",default:"false",type:"boolean",value:"true | false"},{property:"size",description:"Set select size",default:"",type:"string",value:"medium | large"},{property:"width",description:"Set select width",default:"",type:"string | number",value:""},{property:"maxHeight",description:"Set select list max height",default:"",type:"string | number",value:""},{property:"label",description:"Set select label",default:"",type:"string",value:""},{property:"placeholder",description:"Set placeholder",default:"",type:"string",value:""},{property:"color",description:"Set select color",default:"",type:"string",value:"primary | info | success | error"},{property:"borderType",description:"Set borders type",default:"",type:"string",value:"tile | smooth | rounded"},{property:"multiple",description:"Enable multiple selection (Warning: if multiple prop set, childrenKey has no effect)",default:"false",type:"boolean",value:"true | false"},{property:"onSelect",description:"Invokes on multiple selection (return selected value & selected list)",default:"",type:"function",value:""},{property:"tagColor",description:"Set Tag color (Has effect only with multiple prop)",default:"",type:"string",value:"primary | info | success | error | black"},{property:"tagOutlined",description:"Set Tag outlined prop",default:"",type:"boolean",value:"true | false"},{property:"prefix",description:"Set prefix",default:"",type:"any",value:""},{property:"dark",description:"Set dark mode",default:"false",type:"boolean",value:"true | false"},{property:"whiteBackground",description:"Set input background color to white",default:"false",type:"boolean",value:"true | false"},{property:"className",description:"Set a custom css class to component",default:"",type:"string",value:""}],u=["primary","info","success","error"],p=["default","medium","large"],m=["default","tile","rounded","smooth"];t.default=function(){var e=Object(r.useState)(""),t=Object(n.a)(e,2),a=t[0],d=t[1],y=Object(r.useState)(""),h=Object(n.a)(y,2),f=h[0],g=h[1],b=Object(r.useState)(u[0]),k=Object(n.a)(b,2),S=k[0],v=k[1],w=Object(r.useState)(p[0]),E=Object(n.a)(w,2),C=E[0],O=E[1],K=Object(r.useState)(m[0]),j=Object(n.a)(K,2),x=j[0],z=j[1],T=Object(r.useState)(!1),N=Object(n.a)(T,2),I=N[0],B=N[1],D=Object(r.useState)(!1),U=Object(n.a)(D,2),H=U[0],M=U[1];return i.a.createElement(l.T.Consumer,null,(function(e){return i.a.createElement(c.a,{usage:"// Usage examples\nimport React, { useState } from 'react';\nimport { Select, Icon } from '@assenti/react-ui-components';\n\nconst countries = [\n    { country: 'Kazakhstan', cities: [ 'Nur-Sultan', 'Almaty', 'Shymkent' ] }, \n    { country: 'Russia', cities: ['Moscow', 'St. Petersburg', 'Krasnodar'] }, \n    { country: 'USA', cities: ['Washington, D.C.', 'New York City', 'San Francisco'] }, \n    { country: 'United Kingdom', cities: ['London', 'York', 'Manchester'] }, \n    { country: 'Canada', cities: ['Ottawa', 'Toronto', 'Vancouver'] }, \n    { country: 'Germany', cities: ['Berlin', 'Munich', 'Hamburg'] }, \n    { country: 'France', cities: ['Paris', 'Nice', 'Marselle'] }, \n    { country: 'China', cities: ['Beijing', 'Shanghai', 'Shenzhen'] },\n    { country: 'Japan', cities: ['Tokyo', 'Osaka', 'Kyoto'] },\n    { country: 'South Korea', cities: ['Seoul', 'Busan', 'Daegu'] }\n]\nfunction Example() {\n    const [city, setCity] = useState('');\n\n    return (\n        <>\n            <Select\n                prefix={<Icon name=\"earth\"/>}\n                label=\"One level items with multiple select\"\n                items={countries}\n                itemKey=\"country\"\n                color=\"primary\"\n                maxHeight={200}\n                width={250}\n                multiple\n                placeholder=\"Countries\"\n                value={city}\n                tagOutlined\n                onSelect={(selectedItem, selectedItems) => \n                    console.log(selectedItem, selectedItems)}\n                onChange={value => setCity(value)}/>\n        </>\n    )\n}",backTopBtn:!0,apiSearchable:!0,componentName:"<Select/>",apiDescItems:s},i.a.createElement(l.K,{items:u,dark:e,prefix:i.a.createElement(l.z,{name:"brush"}),width:200,label:"Color",color:"primary",className:"my-5",value:S,onChange:function(e){return v(e)}}),i.a.createElement("br",null),i.a.createElement(l.K,{items:p,dark:e,prefix:i.a.createElement(l.z,{name:"format-size"}),width:200,label:"Size",color:"primary",className:"my-5",value:C,onChange:function(e){return O(e)}}),i.a.createElement("br",null),i.a.createElement(l.K,{items:m,dark:e,prefix:i.a.createElement(l.z,{name:"shape"}),width:200,label:"Border type",color:"primary",className:"my-5",value:x,onChange:function(e){return z(e)}}),i.a.createElement("br",null),i.a.createElement(l.O,{check:H,color:"primary",rightLabel:"Set max height",className:"my-10",onChange:function(){return M(!H)}}),i.a.createElement(l.O,{check:I,color:"primary",rightLabel:"Disabled",className:"my-10",onChange:function(){return B(!I)}}),i.a.createElement(l.r,null),i.a.createElement(l.K,{items:o.a,prefix:i.a.createElement(l.z,{name:"earth"}),itemKey:"country",label:"One level items select",width:250,dark:e,maxHeight:H?200:null,disabled:I,size:C,borderType:x,clearable:!0,onClear:function(){return g("")},color:S,placeholder:"Countries",value:f,onChange:function(e){return g(e)}}),i.a.createElement("br",null),i.a.createElement("br",null),i.a.createElement(l.K,{prefix:i.a.createElement(l.z,{name:"earth"}),label:"Two level items select",items:o.a,itemKey:"country",childrenKey:"cities",disabled:I,color:S,dark:e,borderType:x,width:250,size:C,placeholder:"Cities",value:a,onChange:function(e){d(e),console.log(e)}}),i.a.createElement("br",null),i.a.createElement("br",null),i.a.createElement(l.K,{prefix:i.a.createElement(l.z,{name:"earth"}),label:"One level items searchable select",items:o.a,itemKey:"country",color:S,dark:e,disabled:I,maxHeight:H?200:null,width:250,borderType:x,searchable:!0,size:C,placeholder:"Countries",value:f,onChange:function(e){return g(e)}}),i.a.createElement("br",null),i.a.createElement("br",null),i.a.createElement(l.K,{prefix:i.a.createElement(l.z,{name:"earth"}),label:"One level items with multiple select",items:o.a,itemKey:"country",color:S,dark:e,maxHeight:H?200:null,width:250,disabled:I,multiple:!0,size:C,borderType:x,placeholder:"Countries",value:a,tagOutlined:!0,onSelect:function(e,t){return console.log(e,t)},onChange:function(e){return d(e)}}))}))}},47:function(e,t,a){"use strict";var n=a(2),r=a(0),i=a.n(r),l=a(3),o=a(343),c=a(291),s=a(292),u=["property","description","default","type","value"];t.a=function(e){var t=Object(r.useRef)(),a=Object(r.useState)(!1),p=Object(n.a)(a,2),m=p[0],d=p[1];return i.a.createElement(l.T.Consumer,null,(function(a){return i.a.createElement("div",{className:"rui-page",ref:t},i.a.createElement("div",{className:"rui-page-title"},e.componentName," Component"),i.a.createElement(l.k,{dark:a,header:i.a.createElement("h4",null,"Usage")},e.children,i.a.createElement(l.n,{className:"mt-10",extra:i.a.createElement(l.o,{defaultText:"Copy code",text:e.usage,dark:a}),onChange:function(e){return d(e)},customToggler:i.a.createElement(l.h,{className:"ml-20",name:m?"Close":"Open",icon:"code",color:"info"}),dark:a},i.a.createElement(o.a,{language:"jsx",style:a?c.a:s.a},e.usage))),e.backTopBtn?i.a.createElement(l.e,{dark:!0,setRef:t,size:"medium",tooltip:"Up"}):null,i.a.createElement(l.k,{className:"mt-10"},i.a.createElement(l.P,{tableTitle:i.a.createElement("h2",null,"API"),dark:a,headers:["Property","Description","Default","Type","Value"],items:e.apiDescItems,index:!0,bordered:!0,searchable:e.apiSearchable,searchKey:"property",itemTitles:u})))}))}},52:function(e,t,a){"use strict";a.d(t,"a",(function(){return n}));var n=[{country:"Kazakhstan",cities:["Nur-Sultan","Almaty","Shymkent"],icon:"flag",url:"https://en.wikipedia.org/wiki/Kazakhstan"},{country:"Russia",cities:["Moscow","St. Petersburg","Krasnodar"],icon:"flag",url:"https://en.wikipedia.org/wiki/Russia"},{country:"USA",cities:["Washington, D.C.","New York City","San Francisco"],icon:"flag",url:"https://en.wikipedia.org/wiki/United_States"},{country:"United Kingdom",cities:["London","York","Manchester"],icon:"flag",url:"https://en.wikipedia.org/wiki/United_Kingdom"},{country:"Canada",cities:["Ottawa","Toronto","Vancouver"],icon:"flag",url:"https://en.wikipedia.org/wiki/Canada"},{country:"Germany",cities:["Berlin","Munich","Hamburg"],icon:"flag",url:"https://en.wikipedia.org/wiki/Germany"},{country:"France",cities:["Paris","Nice","Marselle"],icon:"flag",url:"https://en.wikipedia.org/wiki/France"},{country:"China",cities:["Beijing","Shanghai","Shenzhen"],icon:"flag",url:"https://en.wikipedia.org/wiki/China"},{country:"Japan",cities:["Tokyo","Osaka","Kyoto"],icon:"flag",url:"https://en.wikipedia.org/wiki/Japan"},{country:"South Korea",cities:["Seoul","Busan","Daegu"],icon:"flag",url:"https://en.wikipedia.org/wiki/South_Korea"}]}}]);