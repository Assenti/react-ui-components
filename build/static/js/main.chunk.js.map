{"version":3,"sources":["icons/index.js","components/Icon.js","components/Tag.js","components/button/Button.js","components/Checkbox.js","components/Table.js","components/Card.js","components/Switch.js","components/Dropdown.js","components/Input.js","components/List.js","components/Tooltip.js","components/Drawer.js","components/select/Select.js","components/Pagination.js","components/Modal.js","components/badge/Badge.js","components/Radio.js","components/preloader/Preloader.js","routes.js","pages/HomePage.js","pages/ButtonPage.js","pages/IconPage.js","pages/DropdownPage.js","pages/ListPage.js","pages/InputsPage.js","pages/DrawerPage.js","pages/TooltipPage.js","pages/PaginationPage.js","pages/SelectPage.js","pages/TablePage.js","pages/ModalPage.js","pages/CheckboxPage.js","pages/RadioPage.js","pages/SwitchPage.js","pages/CardPage.js","pages/TagPage.js","pages/BadgePage.js","pages/PreloaderPage.js","components/Header.js","layouts/Content.js","layouts/DrawerContent.js","app.js"],"names":["ChevronDoubleLeft","props","width","size","height","viewBox","fill","color","d","ChevronDoubleRight","ChevronBack","ChevronNext","ChevronDown","Delete","Edit","Close","Code","Github","Person","Account","ShieldAccount","Search","Home","Chip","Empty","Sun","Moon","Star","StarOutline","Smartphone","Hammer","City","Download","Menu","Loading","ReactLogo","Icon","name","title","style","className","onClick","e","Tag","result","btn","lifted","uppercase","smooth","rounded","disabled","light","dark","small","outlined","key","trim","tagClass","iconLeft","value","iconRight","Button","loading","icon","block","btnClass","Fragment","Checkbox","checkbox","checkboxClass","type","checked","onChange","label","checkboxLabelClass","Table","bordered","controls","headers","index","map","item","items","noHover","itemTitles","iter","footer","length","Card","card","flat","cardClass","minWidth","header","img","children","Switch","position","leftLabel","leftIcon","leftIconColor","active","check","switchClass","rightIcon","rightLabel","rightIconColor","Dropdown","useState","visible","setVisible","menuClass","tabIndex","onBlur","trigger","CSSTransition","in","timeout","classNames","unmountOnExit","content","InputField","input","useRef","focus","setFocus","inputFieldClass","current","prefix","onFocus","ref","readOnly","required","autoComplete","onKeyUp","placeholder","clearable","onClear","suffix","hint","Uploader","inputFile","inputContainer","multiple","accept","undefined","target","files","onDelete","List","list","dense","listClass","ListItem","onItemClick","right","left","isActiveItem","hover","noDivider","itemClass","itemTitle","subTitle","Tooltip","show","setShow","onMouseEnter","onMouseLeave","tooltip","Drawer","isXs","setIsXs","drawerClass","collapsable","min","absolute","fullHeight","useEffect","window","addEventListener","innerWidth","drawer","preventDefault","currentTarget","onClose","headerCentered","onResize","Select","itemName","subItemsField","subItemName","labelName","selectedItem","onSelect","addSubItem","showSubItemOnly","selectMenu","open","setOpen","subItems","parent","openMenu","handleSelect","subValue","blur","cutLongText","text","slice","selectItemClass","selectSubItemClass","selected","split","classes","normalTitle","main","selectClass","subItem","subIndex","Pagination","perPage","getLimit","Math","ceil","itemsCount","currentPage","setCurrentPage","perPageLocal","setPerPageLocal","arr","i","push","generateMockArr","allPages","activePages","setActivePages","isPrevAvailable","isNextAvailable","paginationClass","perPageVariants","pageText","Modal","closable","close","onEnter","onExited","Badge","badgeClass","Radio","radioClass","RadioGroup","vertical","radioGroupClass","options","Preloader","background","backgroundColor","preloader","routes","path","Component","setLoading","keys","property","description","default","href","setItem","item2","setItem2","heroes","hero","names","itemsComplex","setSelected","isSelected","prop","select","filter","_item","selectOne","first","setFirst","second","setSecond","setFiles","handleFileDelete","setDrawer","drawerMin","setDrawerMin","setContent","stack","minHeight","onAction","setItemsCount","country","cities","selectedCascader","setSelectedCascader","selectedCascaderSubItem","setSelectedCascaderSubItem","v","capital","population","modal","setModal","setCheck","checkLabel","setCheckLabel","cityUS","setCityUS","city","setCity","isDisabled","setIsDisabled","citiesUS","check1","setCheck1","check2","setCheck2","check3","setCheck3","check4","setCheck4","itemsComplexInitial","maxWidth","badge","setBadge","setTimeout","Header","imgPath","src","alt","rightSide","Content","onDrawerToggle","version","DrawerContent","history","useHistory","location","pathname","handleItemClick","ReactDOM","render","document","exact","match","to","querySelector"],"mappings":"qWAEaA,EAAoB,SAACC,GAC9B,OACI,yBAAKC,MAAOD,EAAME,KAAOF,EAAME,KAAO,GAAIC,OAAQH,EAAME,KAAOF,EAAME,KAAO,GAAIE,QAAQ,aACpF,0BAAMC,KAAML,EAAMM,MAAQN,EAAMM,MAAQ,UACpCC,EAAE,8HAKLC,EAAqB,SAACR,GAC/B,OACI,yBAAKC,MAAOD,EAAME,KAAOF,EAAME,KAAO,GAAIC,OAAQH,EAAME,KAAOF,EAAME,KAAO,GAAIE,QAAQ,aACpF,0BAAMC,KAAML,EAAMM,MAAQN,EAAMM,MAAQ,UAAWC,EAAE,2HAKpDE,EAAc,SAACT,GACxB,OACI,yBAAKC,MAAOD,EAAME,KAAOF,EAAME,KAAO,GAAIC,OAAQH,EAAME,KAAOF,EAAME,KAAO,GAAIE,QAAQ,aACpF,0BAAMC,KAAML,EAAMM,MAAQN,EAAMM,MAAQ,UAAWC,EAAE,oEAKpDG,EAAc,SAACV,GACxB,OACI,yBAAKC,MAAOD,EAAME,KAAOF,EAAME,KAAO,GAAIC,OAAQH,EAAME,KAAOF,EAAME,KAAO,GAAIE,QAAQ,aACpF,0BAAMC,KAAML,EAAMM,MAAQN,EAAMM,MAAQ,UAAWC,EAAE,kEAKpDI,EAAc,SAACX,GACxB,OACI,yBAAKC,MAAOD,EAAME,KAAOF,EAAME,KAAO,GAAIC,OAAQH,EAAME,KAAOF,EAAME,KAAO,GAAIE,QAAQ,aACpF,0BAAMC,KAAML,EAAMM,MAAQN,EAAMM,MAAQ,UAAWC,EAAE,iEAKpDK,EAAS,SAACZ,GACnB,OACI,yBAAKC,MAAOD,EAAME,KAAOF,EAAME,KAAO,GAAIC,OAAQH,EAAME,KAAOF,EAAME,KAAO,GAAIE,QAAQ,aACpF,0BAAMC,KAAML,EAAMM,MAAQN,EAAMM,MAAQ,UAAWC,EAAE,wFAKpDM,EAAO,SAACb,GACjB,OACI,yBAAKC,MAAOD,EAAME,KAAOF,EAAME,KAAO,GAAIC,OAAQH,EAAME,KAAOF,EAAME,KAAO,GAAIE,QAAQ,aACpF,0BAAMC,KAAML,EAAMM,MAAQN,EAAMM,MAAQ,UAAWC,EAAE,0JAKpDO,EAAQ,SAACd,GAClB,OACI,yBAAKC,MAAOD,EAAME,KAAOF,EAAME,KAAO,GAAIC,OAAQH,EAAME,KAAOF,EAAME,KAAO,GAAIE,QAAQ,aACpF,0BAAMC,KAAML,EAAMM,MAAQN,EAAMM,MAAQ,UAAWC,EAAE,oHAKpDQ,EAAO,SAACf,GACjB,OACI,yBAAKC,MAAOD,EAAME,KAAOF,EAAME,KAAO,GAAIC,OAAQH,EAAME,KAAOF,EAAME,KAAO,GAAIE,QAAQ,aACpF,0BAAMC,KAAML,EAAMM,MAAQN,EAAMM,MAAQ,UAAWC,EAAE,8JAKpDS,EAAS,SAAChB,GACnB,OACI,yBAAKC,MAAOD,EAAME,KAAOF,EAAME,KAAO,GAAIC,OAAQH,EAAME,KAAOF,EAAME,KAAO,GAAIE,QAAQ,aACpF,0BAAMC,KAAML,EAAMM,MAAQN,EAAMM,MAAQ,UACxCC,EAAE,kvBAKDU,EAAS,SAACjB,GACnB,OACI,yBAAKC,MAAOD,EAAME,KAAOF,EAAME,KAAO,GAAIC,OAAQH,EAAME,KAAOF,EAAME,KAAO,GAAIE,QAAQ,aACpF,0BAAMC,KAAML,EAAMM,MAAQN,EAAMM,MAAQ,UAAWC,EAAE,qIAKpDW,EAAU,SAAClB,GACpB,OACI,yBAAKC,MAAOD,EAAME,KAAOF,EAAME,KAAO,GAAIC,OAAQH,EAAME,KAAOF,EAAME,KAAO,GAAIE,QAAQ,aACpF,0BAAMC,KAAML,EAAMM,MAAQN,EAAMM,MAAQ,UAAWC,EAAE,qQAKpDY,EAAgB,SAACnB,GAC1B,OACI,yBAAKC,MAAOD,EAAME,KAAOF,EAAME,KAAO,GAAIC,OAAQH,EAAME,KAAOF,EAAME,KAAO,GAAIE,QAAQ,aACpF,0BAAMC,KAAML,EAAMM,MAAQN,EAAMM,MAAQ,UAAWC,EAAE,yUAKpDa,EAAS,SAACpB,GACnB,OACI,yBAAKC,MAAOD,EAAME,KAAOF,EAAME,KAAO,GAAIC,OAAQH,EAAME,KAAOF,EAAME,KAAO,GAAIE,QAAQ,aACpF,0BAAMC,KAAML,EAAMM,MAAQN,EAAMM,MAAQ,UAAWC,EAAE,wQAKpDc,EAAO,SAACrB,GACjB,OACI,yBAAKC,MAAOD,EAAME,KAAOF,EAAME,KAAO,GAAIC,OAAQH,EAAME,KAAOF,EAAME,KAAO,GAAIE,QAAQ,aACpF,0BAAMC,KAAML,EAAMM,MAAQN,EAAMM,MAAQ,UAAWC,EAAE,kDAKpDe,EAAO,SAACtB,GACjB,OACI,yBAAKC,MAAOD,EAAME,KAAOF,EAAME,KAAO,GAAIC,OAAQH,EAAME,KAAOF,EAAME,KAAO,GAAIE,QAAQ,aACpF,0BAAMC,KAAML,EAAMM,MAAQN,EAAMM,MAAQ,UAAWC,EAAE,8JAKpDgB,EAAQ,SAACvB,GAClB,OACI,yBAAKI,QAAQ,cACTH,MAAOD,EAAME,KAAOF,EAAME,KAAO,GACjCC,OAAQH,EAAME,KAAOF,EAAME,KAAO,IACtC,2BACI,2BACI,0BAAMG,KAAML,EAAMM,MAAQN,EAAMM,MAAQ,UAAWC,EAAE,6iBAWxDiB,EAAM,SAACxB,GAChB,OACI,yBAAKC,MAAOD,EAAME,KAAOF,EAAME,KAAO,GAAIC,OAAQH,EAAME,KAAOF,EAAME,KAAO,GAAIE,QAAQ,aACpF,0BAAMC,KAAML,EAAMM,MAAQN,EAAMM,MAAQ,UACpCC,EAAE,2XAKLkB,EAAO,SAACzB,GACjB,OACI,yBAAKC,MAAOD,EAAME,KAAOF,EAAME,KAAO,GAAIC,OAAQH,EAAME,KAAOF,EAAME,KAAO,GAAIE,QAAQ,aACpF,0BAAMC,KAAML,EAAMM,MAAQN,EAAMM,MAAQ,UACpCC,EAAE,uEAKLmB,EAAO,SAAC1B,GACjB,OACI,yBAAKC,MAAOD,EAAME,KAAOF,EAAME,KAAO,GAAIC,OAAQH,EAAME,KAAOF,EAAME,KAAO,GAAIE,QAAQ,aACpF,0BAAMC,KAAML,EAAMM,MAAQN,EAAMM,MAAQ,UAAWC,EAAE,2GAKpDoB,EAAc,SAAC3B,GACxB,OACI,yBAAKC,MAAOD,EAAME,KAAOF,EAAME,KAAO,GAAIC,OAAQH,EAAME,KAAOF,EAAME,KAAO,GAAIE,QAAQ,aACpF,0BAAMC,KAAML,EAAMM,MAAQN,EAAMM,MAAQ,UAAWC,EAAE,sNAKpDqB,EAAa,SAAC5B,GACvB,OACI,yBAAKC,MAAOD,EAAME,KAAOF,EAAME,KAAO,GAAIC,OAAQH,EAAME,KAAOF,EAAME,KAAO,GAAIE,QAAQ,aACpF,0BAAMC,KAAML,EAAMM,MAAQN,EAAMM,MAAQ,UAAWC,EAAE,yGAKpDsB,EAAS,SAAC7B,GACnB,OACI,yBAAKC,MAAOD,EAAME,KAAOF,EAAME,KAAO,GAAIC,OAAQH,EAAME,KAAOF,EAAME,KAAO,GAAIE,QAAQ,aACpF,0BAAMC,KAAML,EAAMM,MAAQN,EAAMM,MAAQ,UAAWC,EAAE,+LAKpDuB,EAAO,SAAC9B,GACjB,OACI,yBAAKC,MAAOD,EAAME,KAAOF,EAAME,KAAO,GAAIC,OAAQH,EAAME,KAAOF,EAAME,KAAO,GAAIE,QAAQ,aACpF,0BAAMC,KAAML,EAAMM,MAAQN,EAAMM,MAAQ,UAAWC,EAAE,mKAKpDwB,EAAW,SAAC/B,GACrB,OACI,yBAAKC,MAAOD,EAAME,KAAOF,EAAME,KAAO,GAAIC,OAAQH,EAAME,KAAOF,EAAME,KAAO,GAAIE,QAAQ,aACpF,0BAAMC,KAAML,EAAMM,MAAQN,EAAMM,MAAQ,UAAWC,EAAE,gDAKpDyB,EAAO,SAAChC,GACjB,OACI,yBAAKC,MAAOD,EAAME,KAAOF,EAAME,KAAO,GAAIC,OAAQH,EAAME,KAAOF,EAAME,KAAO,GAAIE,QAAQ,aACpF,0BAAMC,KAAML,EAAMM,MAAQN,EAAMM,MAAQ,UAAWC,EAAE,qDAKpD0B,EAAU,SAACjC,GACpB,OACI,yBAAKC,MAAOD,EAAME,KAAOF,EAAME,KAAO,GAAIC,OAAQH,EAAME,KAAOF,EAAME,KAAO,GAAIE,QAAQ,aACpF,0BAAMC,KAAML,EAAMM,MAAQN,EAAMM,MAAQ,UAAWC,EAAE,iDAKpD2B,EAAY,SAAClC,GACtB,OACI,yBAAKC,MAAOD,EAAME,KAAOF,EAAME,KAAO,GAAIC,OAAQH,EAAME,KAAOF,EAAME,KAAO,GAAIE,QAAQ,aACpF,0BAAMC,KAAML,EAAMM,MAAQN,EAAMM,MAAQ,UAAWC,EAAE,0xEC3MpD4B,EAAO,SAACnC,GAEjB,IAAMmC,EAAO,WACT,OAAQnC,EAAMoC,MACV,IAAK,SACD,OAAO,kBAAC,EAAD,CAAQlC,KAAMF,EAAME,KAAMI,MAAON,EAAMM,QAClD,IAAK,SACD,OAAO,kBAAC,EAAD,CAAQJ,KAAMF,EAAME,KAAMI,MAAON,EAAMM,QAClD,IAAK,OACD,OAAO,kBAAC,EAAD,CAAMJ,KAAMF,EAAME,KAAMI,MAAON,EAAMM,QAChD,IAAK,OACD,OAAO,kBAAC,EAAD,CAAMJ,KAAMF,EAAME,KAAMI,MAAON,EAAMM,QAChD,IAAK,SACD,OAAO,kBAAC,EAAD,CAAQJ,KAAMF,EAAME,KAAMI,MAAON,EAAMM,QAClD,IAAK,QACD,OAAO,kBAAC,EAAD,CAAOJ,KAAMF,EAAME,KAAMI,MAAON,EAAMM,QACjD,IAAK,uBACD,OAAO,kBAAC,EAAD,CAAoBJ,KAAMF,EAAME,KAAMI,MAAON,EAAMM,QAC9D,IAAK,sBACD,OAAO,kBAAC,EAAD,CAAmBJ,KAAMF,EAAME,KAAMI,MAAON,EAAMM,QAC7D,IAAK,OACD,OAAO,kBAAC,EAAD,CAAMJ,KAAMF,EAAME,KAAMI,MAAON,EAAMM,QAChD,IAAK,OACD,OAAO,kBAAC,EAAD,CAAMJ,KAAMF,EAAME,KAAMI,MAAON,EAAMM,QAChD,IAAK,UACD,OAAO,kBAAC,EAAD,CAASJ,KAAMF,EAAME,KAAMI,MAAON,EAAMM,QACnD,IAAK,SACD,OAAO,kBAAC,EAAD,CAAQJ,KAAMF,EAAME,KAAMI,MAAON,EAAMM,QAClD,IAAK,eACD,OAAO,kBAAC,EAAD,CAAaJ,KAAMF,EAAME,KAAMI,MAAON,EAAMM,QACvD,IAAK,eACD,OAAO,kBAAC,EAAD,CAAaJ,KAAMF,EAAME,KAAMI,MAAON,EAAMM,QACvD,IAAK,eACD,OAAO,kBAAC,EAAD,CAAaJ,KAAMF,EAAME,KAAMI,MAAON,EAAMM,QACvD,IAAK,MACD,OAAO,kBAAC,EAAD,CAAKJ,KAAMF,EAAME,KAAMI,MAAON,EAAMM,QAC/C,IAAK,OACD,OAAO,kBAAC,EAAD,CAAMJ,KAAMF,EAAME,KAAMI,MAAON,EAAMM,QAChD,IAAK,OACD,OAAO,kBAAC,EAAD,CAAMJ,KAAMF,EAAME,KAAMI,MAAON,EAAMM,QAChD,IAAK,eACD,OAAO,kBAAC,EAAD,CAAaJ,KAAMF,EAAME,KAAMI,MAAON,EAAMM,QACvD,IAAK,aACD,OAAO,kBAAC,EAAD,CAAYJ,KAAMF,EAAME,KAAMI,MAAON,EAAMM,QACtD,IAAK,SACD,OAAO,kBAAC,EAAD,CAAQJ,KAAMF,EAAME,KAAMI,MAAON,EAAMM,QAClD,IAAK,OACD,OAAO,kBAAC,EAAD,CAAMJ,KAAMF,EAAME,KAAMI,MAAON,EAAMM,QAChD,IAAK,QACD,OAAO,kBAAC,EAAD,CAAOJ,KAAMF,EAAME,KAAMI,MAAON,EAAMM,QACjD,IAAK,WACD,OAAO,kBAAC,EAAD,CAAUJ,KAAMF,EAAME,KAAMI,MAAON,EAAMM,QACpD,IAAK,OACD,OAAO,kBAAC,EAAD,CAAMJ,KAAMF,EAAME,KAAMI,MAAON,EAAMM,QAChD,IAAK,UACD,OAAO,kBAAC,EAAD,CAASJ,KAAMF,EAAME,KAAMI,MAAON,EAAMM,QACnD,IAAK,iBACD,OAAO,kBAAC,EAAD,CAAeJ,KAAMF,EAAME,KAAMI,MAAON,EAAMM,QACzD,IAAK,QACD,OAAO,kBAAC,EAAD,CAAWJ,KAAMF,EAAME,KAAMI,MAAON,EAAMM,QACrD,QACI,MAAO,KAYnB,OACI,uBAAG+B,MAAOrC,EAAMqC,MACZC,MAAO,CAAErC,MAAOD,EAAME,KAAOF,EAAME,KAAO,GAAIC,OAAQH,EAAME,KAAOF,EAAME,KAAO,IAChFqC,UAVAvC,EAAMuC,UACA,QAAN,OAAevC,EAAMuC,WAEd,OAQPC,QAAS,SAACC,GAAD,OAAOzC,EAAMwC,QAAUxC,EAAMwC,QAAQC,GAAK,KACnD,kBAACN,EAAD,QC3GCO,EAAM,SAAC1C,GAsBhB,OACI,yBAAKuC,UArBQ,WACb,IAAII,EAAS,GACTJ,EAAY,CACZK,IAAK,MACLC,OAAQ7C,EAAM6C,OAAS,SAAW,GAClCC,UAAW9C,EAAM8C,UAAY,YAAc,GAC3CC,OAAQ/C,EAAM+C,SAAW/C,EAAMgD,QAAU,SAAW,GACpDA,QAAShD,EAAMgD,UAAYhD,EAAM+C,OAAS,UAAY,GACtDzC,OAAON,EAAMM,OAAUN,EAAMiD,UAAajD,EAAMkD,OAAUlD,EAAMmD,KAAqB,GAAdnD,EAAMM,MAC7E8C,MAAOpD,EAAMoD,MAAQ,QAAU,GAC/BC,SAAUrD,EAAMqD,SAAW,WAAa,GACxCd,UAAWvC,EAAMuC,UAAYvC,EAAMuC,UAAY,IAGnD,IAAK,IAAMe,KAAOf,EACVA,EAAUe,KAAMX,GAAUJ,EAAUe,GAAO,KAEnD,OAAOX,EAAOY,OAIEC,IACXxD,EAAMyD,SAAW,kBAAC,EAAD,CAAMrB,KAAMpC,EAAMyD,WAAc,GACjDzD,EAAM0D,MACN1D,EAAM2D,UAAY,kBAAC,EAAD,CAAMvB,KAAMpC,EAAM2D,YAAe,KC1BnDC,EAAS,SAAC5D,GAkCnB,OACI,4BACIiD,SAAUjD,EAAMiD,UAAYjD,EAAM6D,QAClCtB,UApCS,WACb,IAAII,EAAS,GACTJ,EAAY,CACZK,IAAK,MACLC,OAAQ7C,EAAM6C,OAAS,SAAW,GAClCgB,QAAS7D,EAAM6D,QAAU,UAAY,GACrCf,UAAW9C,EAAM8C,UAAY,YAAc,GAC3CC,OAAQ/C,EAAM+C,SAAW/C,EAAMgD,QAAU,SAAW,GACpDA,QAAShD,EAAMgD,UAAYhD,EAAM+C,OAAS,UAAY,GACtDzC,OAAON,EAAMM,OAAUN,EAAMiD,UAAajD,EAAM6D,SAAY7D,EAAMkD,OAAUlD,EAAMmD,KAAqB,GAAdnD,EAAMM,MAC/F4C,MAAOlD,EAAMkD,QAAUlD,EAAMmD,KAAO,QAAU,GAC9CA,KAAMnD,EAAMmD,OAASnD,EAAMkD,MAAQ,OAAS,GAC5CY,KAAM9D,EAAM8D,OAAS9D,EAAMoC,KAAO,OAAS,GAC3CgB,MAAOpD,EAAMoD,MAAQ,QAAU,GAC/BH,SAAUjD,EAAMiD,UAAYjD,EAAM6D,QAAU,WAAa,GACzD3D,KAAMF,EAAME,KAAOF,EAAME,KAAO,GAChC6D,MAAO/D,EAAM+D,MAAQ,QAAU,GAC/BV,SAAUrD,EAAMqD,SAAW,WAAa,GACxCd,UAAWvC,EAAMuC,UAAYvC,EAAMuC,UAAY,IAGnD,IAAK,IAAMe,KAAOf,EACVA,EAAUe,KAAMX,GAAUJ,EAAUe,GAAO,KAEnD,OAAOX,EAAOY,OAYCS,GACXxB,QAAS,SAACC,GAAD,OAAOzC,EAAMwC,QAAUxC,EAAMwC,QAAQC,GAAK,KAClDzC,EAAM6D,QACH,kBAAC,EAAD,CAAMzB,KAAK,UAAU9B,MAAM,SAC3B,kBAAC,IAAM2D,SAAP,KACKjE,EAAM8D,MAAQ9D,EAAMyD,SAAW,kBAAC,EAAD,CAAMvD,KAAM,GAAIkC,KAAMpC,EAAM8D,OAAU,GACrE9D,EAAMoC,KAAO,0BAAMG,UAd5BvC,EAAM8D,OAAS9D,EAAMyD,SAAiB,OACjCzD,EAAM8D,MAAQ9D,EAAMyD,SAAiB,OAClC,IAY6CzD,EAAMoC,MAAe,GACjEpC,EAAM8D,OAAS9D,EAAMyD,SAAW,kBAAC,EAAD,CAAMvD,KAAM,GAAIkC,KAAMpC,EAAM8D,OAAU,M,OC7C9EI,EAAW,SAAClE,GA+BrB,OACI,yBAAKuC,UAAU,oBACX,2BAAOA,UA/BO,WAClB,IAAII,EAAS,GACTJ,EAAY,CACZ4B,SAAU,WACV7D,MAAON,EAAMM,MAAQN,EAAMM,MAAQ,GACnC2C,SAAUjD,EAAMiD,SAAW,WAAa,IAG5C,IAAK,IAAMK,KAAOf,EACVA,EAAUe,KAAMX,GAAUJ,EAAUe,GAAO,KAEnD,OAAOX,EAAOY,OAoBQa,IACd,2BACIC,KAAK,WACLC,UAAStE,EAAMsE,SAAUtE,EAAMsE,QAC/BrB,WAAUjD,EAAMiD,UAAWjD,EAAMiD,SACjCsB,SAAU,SAAC9B,GAAD,OAAOzC,EAAMuE,SAAS9B,MACpC,gCAEHzC,EAAMwE,MAAQ,yBAAKjC,UAzBD,WACvB,IAAII,EAAS,GACTJ,EAAY,CACZ4B,SAAU,iBACV7D,MAAON,EAAMM,MAAQN,EAAMM,MAAQ,GACnCiC,UAAWvC,EAAMuC,UAAYvC,EAAMuC,UAAY,GAC/CU,SAAUjD,EAAMiD,SAAW,WAAa,IAG5C,IAAK,IAAMK,KAAOf,EACVA,EAAUe,KAAMX,GAAUJ,EAAUe,GAAO,KAEnD,OAAOX,EAAOY,OAaqBkB,GACvBjC,QAAS,kBAAMxC,EAAMuE,aAAavE,EAAMwE,OAAe,KCvC9DE,EAAQ,SAAC1E,GAgBlB,OACI,yBAAKuC,UAAWvC,EAAM2E,SAAW,2BAA6B,mBAC1D,2BAAOpC,UAAU,SACb,+BACI,6BAjBRvC,EAAM4E,WAAa5E,EAAMmE,SACnB,GAAN,mBAAWnE,EAAM6E,SAAjB,CAA0B,KACnB7E,EAAMmE,WAAanE,EAAM4E,SAC1B,CAAE,kBAAC,EAAD,OAAR,mBAAwB5E,EAAM6E,UACvB7E,EAAMmE,UAAYnE,EAAM4E,SACzB,CAAE,kBAAC,EAAD,OAAR,mBAAwB5E,EAAM6E,SAA9B,CAAuC,MAChC7E,EAAM8E,OAAU9E,EAAMmE,UAAanE,EAAM4E,SAGzC5E,EAAM6E,QAFP,CAAE,KAAR,mBAAgB7E,EAAM6E,WAWCE,KAAI,SAACC,EAAMF,GAAP,OAAiB,wBAAIxB,IAAKwB,GAAQE,QAGzD,+BACKhF,EAAMiF,MAAMF,KAAI,SAACC,EAAMF,GAAP,OACb,wBAAIxB,IAAKwB,EAAOvC,UAAWvC,EAAMkF,QAAU,WAAa,IACnDlF,EAAMmE,SAAW,4BACd,kBAAC,EAAD,OACI,kBAAC,IAAMF,SAAP,MACPjE,EAAM8E,MAAQ,4BAAKA,EAAQ,GAAU,kBAAC,IAAMb,SAAP,MACrCjE,EAAMmF,WAAWJ,KAAI,SAAC1C,EAAO+C,GAAR,OAClB,wBAAI9B,IAAK8B,GAAOJ,EAAK3C,OAExBrC,EAAM4E,SAAW,4BACb5E,EAAM4E,UACH,kBAAC,IAAMX,SAAP,YAKvBjE,EAAMqF,OAAS,yBAAK9C,UAAU,gBAAgBvC,EAAMqF,QAAgB,GAC7C,IAAvBrF,EAAMiF,MAAMK,OAAe,yBAAK/C,UAAU,eAAc,kBAAC,EAAD,OAAiB,KC7CzEgD,EAAO,SAACvF,GAkBjB,OACI,yBAAKuC,UAlBS,WACd,IAAII,EAAS,GACTJ,EAAY,CACZiD,KAAM,OACNC,KAAMzF,EAAMyF,KAAO,OAAS,GAC5BtC,KAAMnD,EAAMmD,KAAO,OAAS,GAC5BE,SAAUrD,EAAMqD,WAAarD,EAAMmD,KAAO,WAAa,GACvD7C,MAAON,EAAMM,QAAUN,EAAMmD,KAAOnD,EAAMM,MAAQ,GAClDiC,UAAWvC,EAAMuC,UAAYvC,EAAMuC,UAAY,IAGnD,IAAK,IAAMe,KAAOf,EACVA,EAAUe,KAAMX,GAAUJ,EAAUe,GAAO,KAEnD,OAAOX,EAAOY,OAIEmC,GACZpD,MAAO,CAAErC,MAAOD,EAAMC,MAAQD,EAAMC,MAAQ,GAAI0F,SAAU3F,EAAM2F,SAAW3F,EAAM2F,SAAW,KAC3F3F,EAAMqC,OAASrC,EAAMqD,WAAarD,EAAMmD,KAAO,yBAAKZ,UAAU,cAAcvC,EAAMqC,OAAe,GACjGrC,EAAM4F,OAAS,yBAAKrD,UAAU,eAAevC,EAAM4F,QAAgB,GACnE5F,EAAM6F,IAAM7F,EAAM6F,IAAM,GACxB7F,EAAM8F,SACN9F,EAAMqF,OAAS,yBAAK9C,UAAU,eAAevC,EAAMqF,QAAgB,KCxBnEU,EAAS,SAAC/F,GAiBnB,OACI,yBAAKuC,UAA8B,aAAnBvC,EAAMgG,SAA0B,4BAA8B,oBACzEhG,EAAMiG,YAAcjG,EAAMkG,SAAW,yBAAK3D,UAAU,qBAAqBvC,EAAMiG,WAAmB,GAClGjG,EAAMkG,WAAalG,EAAMiG,UAAY,kBAAC,EAAD,CAAM7D,KAAMpC,EAAMkG,SAAU5F,MAAON,EAAMmG,gBAAmB,GAClG,yBAAK5D,UApBO,WAChB,IAAII,EAAS,GACTJ,EAAY,CACZK,IAAK,SACLwD,OAAQpG,EAAMqG,MAAQ,SAAW,YACjCpD,SAAUjD,EAAMiD,SAAW,WAAa,GACxC3C,MAAON,EAAMM,MAAQN,EAAMM,MAAQ,GACnCiC,UAAWvC,EAAMuC,UAAYvC,EAAMuC,UAAY,IAGnD,IAAK,IAAMe,KAAOf,EACVA,EAAUe,KAAMX,GAAUJ,EAAUe,GAAO,KAEnD,OAAOX,EAAOY,OAOM+C,GACZ9D,QAAS,kBAAOxC,EAAMiD,SAA8B,GAAnBjD,EAAMuE,aACvC,gCAEHvE,EAAMuG,YAAcvG,EAAMwG,WAAa,kBAAC,EAAD,CAAMpE,KAAMpC,EAAMuG,UAAWjG,MAAON,EAAMyG,iBAAoB,GACrGzG,EAAMwG,aAAexG,EAAMuG,UAAY,yBAAKhE,UAAU,sBAAsBvC,EAAMwG,YAAoB,KC1BtGE,EAAW,SAAC1G,GAAW,IAAD,EACD2G,oBAAS,GADR,mBACxBC,EADwB,KACfC,EADe,KAgB/B,OACI,yBAAKtE,UAdS,WACd,IAAII,EAAS,GACTJ,EAAY,CACZH,KAAM,qBACNG,UAAWvC,EAAMuC,UAAYvC,EAAMuC,UAAY,IAGnD,IAAK,IAAMe,KAAOf,EACVA,EAAUe,KAAMX,GAAUJ,EAAUe,GAAO,KAEnD,OAAOX,EAAOY,OAIEuD,GACZC,UAAW,EACXC,OAAQ,kBAAMH,GAAW,KACzB,yBAAKrE,QAAS,kBAAMqE,GAAW,KAAQ7G,EAAMiH,SAC7C,kBAACC,EAAA,EAAD,CACIC,GAAIP,EACJQ,QAAS,IACTC,WAAW,WACXC,eAAa,GACb,yBAAK/E,UAAU,WACXD,MAAO,CAAErC,MAAOD,EAAMC,MAAQD,EAAMC,MAAQ,GAAI0F,SAAU3F,EAAM2F,SAAW3F,EAAM2F,SAAW,KAC5F,yBAAKnD,QAAS,kBAAMqE,GAAW,KAAS7G,EAAMuH,aC3BrDC,EAAa,SAACxH,GACvB,IAAMyH,EAAQC,iBAAO,MADY,EAEPf,oBAAS,GAFF,mBAE1BgB,EAF0B,KAEnBC,EAFmB,KAoCjC,OACI,yBAAKrF,UAjCe,WACpB,IAAII,EAAS,GACTJ,EAAY,CACZkF,MAAO,cACPvH,KAAMF,EAAME,KAAOF,EAAME,KAAO,GAChC2C,OAAQ7C,EAAM6C,OAAS,SAAW,GAClCC,UAAW9C,EAAM8C,UAAY,YAAc,GAC3CC,OAAQ/C,EAAM+C,SAAW/C,EAAMgD,QAAU,SAAW,GACpDA,QAAShD,EAAMgD,QAAU,UAAY,GACrC1C,OAAON,EAAMM,OAAUN,EAAMiD,UAAajD,EAAMkD,OAAUlD,EAAMmD,KAAqB,GAAdnD,EAAMM,MAC7E4C,MAAOlD,EAAMkD,QAAUlD,EAAMmD,KAAO,QAAU,GAC9CA,KAAMnD,EAAMmD,OAASnD,EAAMkD,MAAQ,OAAS,GAC5CD,SAAUjD,EAAMiD,SAAW,WAAa,GACxCV,UAAWvC,EAAMuC,UAAYvC,EAAMuC,UAAY,IAGnD,IAAK,IAAMe,KAAOf,EACVA,EAAUe,KAAMX,GAAUJ,EAAUe,GAAO,KAEnD,OAAOX,EAAOY,OAcEsE,GAAmBvF,MAAO,CAAErC,MAAOD,EAAMC,MAAQD,EAAMC,MAAQ,KAC1ED,EAAMwE,MACP,2BAAOjC,UAAWoF,EAAQ,SAAW,GAAInF,QAAS,kBAAMiF,EAAMK,QAAQH,UAAU3H,EAAMwE,OACpF,GACF,yBAAKjC,UAAWoF,EAAQ,wBAA0B,mBAC7C3H,EAAM+H,OAAS/H,EAAM+H,OAAS,GAC/B,2BACIC,QAlBI,SAACvF,GACbzC,EAAMgI,SAAShI,EAAMgI,QAAQvF,GACjCmF,GAAS,IAiBGZ,OAdG,SAACvE,GACZzC,EAAMgH,QAAQhH,EAAMgH,OAAOvE,GAC/BmF,GAAS,IAaGK,IAAKR,EACLS,YAAUlI,EAAMkI,UAAalI,EAAMuE,UACnCtB,SAAUjD,EAAMiD,SAChBkF,SAAUnI,EAAMmI,SAChBC,aAAcpI,EAAMoI,aACpB1E,MAAO1D,EAAM0D,MACb2E,QAASrI,EAAMqI,QACfC,YAAatI,EAAMsI,YACnB/D,SAAUvE,EAAMuE,SAChBF,KAAMrE,EAAMqE,OACfrE,EAAM0D,OAAS1D,EAAMuI,UAAY,uBAAG/F,QAAS,WAAOxC,EAAMwI,YAAY,kBAAC,EAAD,CAAMpG,KAAK,QAAQlC,KAAM,MAAY,GAC3GF,EAAMyI,OAASzI,EAAMyI,OAAS,IAElCzI,EAAM0I,KAAO,yBAAKnG,UAAU,qBAAqBvC,EAAM0I,MAAc,KAsCrEC,EAAW,SAAC3I,GACrB,IAAM4I,EAAYlB,mBADa,EAELf,oBAAS,GAFJ,mBAEjBiB,GAFiB,WA+C/B,OACI,yBAAKrF,UA5Ce,WACpB,IAAII,EAAS,GACTJ,EAAY,CACZkF,MAAO,iBACPlF,UAAWvC,EAAMuC,UAAYvC,EAAMuC,UAAY,IAGnD,IAAK,IAAMe,KAAOf,EACVA,EAAUe,KAAMX,GAAUJ,EAAUe,GAAO,KAEnD,OAAOX,EAAOY,OAkCEsE,GAAmBvF,MAAO,CAAErC,MAAOD,EAAMC,MAAQD,EAAMC,MAAQ,KAC3E,yBAAKsC,UAhCU,WACnB,IAAII,EAAS,GACTJ,EAAY,CACZH,KAAM,4BACNlC,KAAMF,EAAME,KAAOF,EAAME,KAAO,GAChCI,OAAON,EAAMM,OAAUN,EAAMiD,UAAajD,EAAMkD,OAAUlD,EAAMmD,KAAqB,GAAdnD,EAAMM,MAC7E4C,MAAOlD,EAAMkD,QAAUlD,EAAMmD,KAAO,QAAU,GAC9CA,KAAMnD,EAAMmD,OAASnD,EAAMkD,MAAQ,OAAS,GAC5CL,OAAQ7C,EAAM6C,OAAS,SAAW,GAClCE,OAAQ/C,EAAM+C,SAAW/C,EAAMgD,QAAU,SAAW,GACpDA,QAAShD,EAAMgD,QAAU,UAAY,GACrCC,SAAUjD,EAAMiD,SAAW,WAAa,IAG5C,IAAK,IAAMK,KAAOf,EACVA,EAAUe,KAAMX,GAAUJ,EAAUe,GAAO,KAEnD,OAAOX,EAAOY,OAeMsF,IACZ,kBAAC,EAAD,CAAMzG,KAAK,WAAWlC,KAAM,KAC3BF,EAAMwE,MAAQ,2BAAOhC,QAAS,kBAAMoG,EAAUd,QAAQH,UAAU3H,EAAMwE,OAAiB,GACxF,2BACIwD,QAhBI,SAACvF,GACbzC,EAAMgI,SAAShI,EAAMgI,QAAQvF,GACjCmF,GAAS,IAeGZ,OAZG,SAACvE,GACZzC,EAAMgH,QAAQhH,EAAMgH,OAAOvE,GAC/BmF,GAAS,IAWGK,IAAKW,EACLE,WAAU9I,EAAM8I,SAChBC,OAAQ/I,EAAM+I,OAAS/I,EAAM+I,YAASC,EACtC3G,MAAOrC,EAAMqC,MACbY,SAAUjD,EAAMiD,SAChBkF,SAAUnI,EAAMmI,SAChB5D,SAAW,SAAA9B,GAAC,OAAIzC,EAAMuE,SAAN,YAAmB9B,EAAEwG,OAAOC,SAC5C7E,KAAK,SACRrE,EAAM0D,OAAS1D,EAAM0D,MAAM4B,OAAS,EAAI,8BAAOtF,EAAM0D,MAAM4B,QAAiB,IAEhFtF,EAAM0D,OAAS1D,EAAM0D,MAAM4B,OAAS,EACjC,yBAAK/C,UAAWvC,EAAMgD,QAAU,gCAAkC,yBAC7DhD,EAAM0D,MAAMqB,KAAI,SAACC,EAAMF,GAAP,OACb,yBAAKxB,IAAKwB,EAAOvC,UAAU,wBACvB,8BAAOyC,EAAK5C,MACZ,kBAAC,EAAD,CAAMA,KAAK,QAAQlC,KAAM,GAAIsC,QAAS,kBAAMxC,EAAMmJ,SAASnE,EAAK5C,cAI9E,KC5KDgH,EAAO,SAACpJ,GAgBjB,OACI,yBAAKuC,UAhBS,WACd,IAAII,EAAS,GACTJ,EAAY,CACZ8G,KAAM,OACNC,MAAOtJ,EAAMsJ,MAAQ,QAAU,GAC/BnG,KAAMnD,EAAMmD,KAAO,OAAS,GAC5BZ,UAAWvC,EAAMuC,UAAYvC,EAAMuC,UAAY,IAGnD,IAAK,IAAMe,KAAOf,EACVA,EAAUe,KAAMX,GAAUJ,EAAUe,GAAO,KAEnD,OAAOX,EAAOY,OAIEgG,IACXvJ,EAAM4F,OAAS,yBAAKrD,UAAU,eAAevC,EAAM4F,QAAgB,GACnE5F,EAAM8F,WAKN0D,EAAW,SAACxJ,GAmBrB,OACI,yBAAKwC,QAAS,kBAAMxC,EAAMyJ,YAAczJ,EAAMyJ,cAAgB,IAC1DlH,UApBU,WACd,IAAII,EAAS,GACTJ,EAAY,CACZyC,KAAM,YACN0E,MAAO1J,EAAM0J,QAAU1J,EAAM2J,KAAO,QAAU,GAC9CA,KAAM3J,EAAM2J,OAAS3J,EAAM0J,MAAQ,OAAS,GAC5CtD,OAASpG,EAAM4J,cAAgB5J,EAAM4J,aAAa5J,EAAMgF,MAAS,SAAW,GAC5E6E,MAAO7J,EAAM6J,MAAQ,QAAU,GAC/BC,UAAW9J,EAAM8J,UAAY,GAAK,UAClCvH,UAAWvC,EAAMuC,UAAYvC,EAAMuC,UAAY,IAGnD,IAAK,IAAMe,KAAOf,EACVA,EAAUe,KAAMX,GAAUJ,EAAUe,GAAO,KAEnD,OAAOX,EAAOY,OAKCwG,IACX,6BACI,yBAAKxH,UAAU,oBACVvC,EAAM8D,KAAO,kBAAC,EAAD,CAAM1B,KAAMpC,EAAM8D,KAAMvB,UAAU,SAAW,GAC3D,yBAAKA,UAAU,wBACVvC,EAAMmE,SACNnE,EAAMgF,KAAKhF,EAAMgK,WAAahK,EAAMgF,KAAKhF,EAAMgK,WAAahK,EAAMgF,OAG3E,yBAAKzC,UAAU,yBACVvC,EAAM4E,WAGd5E,EAAMiK,SAAW,yBAAK1H,UAAU,iBAAiBvC,EAAMiK,UAAkB,KC1DzEC,EAAU,SAAClK,GAAW,IAAD,EACN2G,oBAAS,GADH,mBACvBwD,EADuB,KACjBC,EADiB,KAM9B,OACI,yBAAK7H,UAJK,kBAAcvC,EAAMgG,SAAWhG,EAAMgG,SAAW,IAKtDqE,aAAc,kBAAMD,GAAQ,IAC5BE,aAAc,kBAAMF,GAAQ,KAC5B,kBAAClD,EAAA,EAAD,CACIC,GAAIgD,EACJ/C,QAAS,IACTC,WAAW,UACXC,eAAa,GACb,6BAAMtH,EAAMuK,UAEfvK,EAAM8F,WCfN0E,EAAS,SAACxK,GAAW,IAAD,EACL2G,oBAAS,GADJ,mBACtB8D,EADsB,KAChBC,EADgB,KAGvBC,EAAc,WAChB,IAAIhI,EAAS,GACTJ,EAAY,CACZH,KAAM,SACNwI,YAAa5K,EAAM4K,YAAc,cAAgB,GACjD7H,OAAQ/C,EAAM+C,OAAS,SAAW,GAClC8H,IAAK7K,EAAM6K,IAAM,MAAQ,GACzBC,SAAU9K,EAAM8K,SAAW,WAAa,GACxCC,WAAY/K,EAAM+K,WAAa,cAAgB,GAC/C5H,KAAMnD,EAAMmD,OAASnD,EAAMkD,MAAQ,OAAS,IAGhD,IAAK,IAAMI,KAAOf,EACVA,EAAUe,KAAMX,GAAUJ,EAAUe,GAAO,KAEnD,OAAOX,EAAOY,QAoBlB,OAVAyH,qBAAU,WACNC,OAAOC,iBAAiB,UAAU,WAC1BD,OAAOE,WAAa,IACpBT,GAAQ,GAERA,GAAQ,QAGjB,IAGC,kBAAC,IAAMzG,SAAP,KACKwG,EACD,kBAACvD,EAAA,EAAD,CACIC,GAAInH,EAAMoL,OACVhE,QAAS,IACTC,WAAW,oBACXC,eAAa,GACb,yBAAK/E,UAAWvC,EAAMoL,OACd,oBACA,yBACA5I,QA5BA,SAACC,GACjBA,EAAE4I,iBACE5I,EAAE6I,gBAAkB7I,EAAEwG,QAClBjJ,EAAMuL,SAASvL,EAAMuL,YA0BjB,kBAACrE,EAAA,EAAD,CACIC,GAAInH,EAAMoL,OACVhE,QAAS,IACTC,WAAW,SACXC,eAAa,GACb,kBAACJ,EAAA,EAAD,CACIC,GAAInH,EAAM6K,IACVzD,QAAS,IACTC,WAAW,UACP,yBAAK9E,UAAWoI,KACZ,yBAAKpI,UAAU,kBACVvC,EAAM4F,OAAS,yBAAKrD,UAAWvC,EAAMwL,eAC9B,yBAA2B,iBACtBxL,EAAM4F,QAAgB,GAClC5F,EAAM8F,UAEV9F,EAAM4K,YAAc,yBAAKrI,UAAU,iBAChC,kBAAC,EAAD,CAASgI,QAASvK,EAAM6K,IAAM,SAAW,YACrC,kBAAC,EAAD,CACI1H,KAAMnD,EAAMmD,KACZD,OAAOlD,EAAMmD,KACbW,KAAM9D,EAAM6K,IAAM,uBAAyB,sBAC3CrI,QAAS,kBAAMxC,EAAMyL,gBAExB,QAOjC,kBAACvE,EAAA,EAAD,CACIC,GAAInH,EAAMoL,OACVhE,QAAS,IACTC,WAAW,SACXC,eAAa,GACb,kBAACJ,EAAA,EAAD,CACIC,GAAInH,EAAM6K,IACVzD,QAAS,IACTC,WAAW,UACP,yBAAK9E,UAAWoI,KACZ,yBAAKpI,UAAU,kBACVvC,EAAM4F,OAAS,yBAAKrD,UAAWvC,EAAMwL,eAC9B,yBAA2B,iBACtBxL,EAAM4F,QAAgB,GAClC5F,EAAM8F,UAEV9F,EAAM4K,YAAc,yBAAKrI,UAAU,iBAChC,kBAAC,EAAD,CAASgI,QAASvK,EAAM6K,IAAM,SAAW,YACrC,kBAAC,EAAD,CACI1H,KAAMnD,EAAMmD,KACZD,OAAOlD,EAAMmD,KACbW,KAAM9D,EAAM6K,IAAM,uBAAyB,sBAC3CrI,QAAS,kBAAMxC,EAAMyL,gBAExB,QC1GxBC,GAAS,SAAC,GAiBhB,IAhBHzG,EAgBE,EAhBFA,MACA0G,EAeE,EAfFA,SACAC,EAcE,EAdFA,cACAC,EAaE,EAbFA,YACAC,EAYE,EAZFA,UACAxD,EAWE,EAXFA,YACAyD,EAUE,EAVFA,aACAC,EASE,EATFA,SACA/L,EAQE,EARFA,MACA0F,EAOE,EAPFA,SACAsE,EAME,EANFA,SACAgC,EAKE,EALFA,WACAC,EAIE,EAJFA,gBACA5L,EAGE,EAHFA,MACAJ,EAEE,EAFFA,KACA8C,EACE,EADFA,QAEMmJ,EAAazE,iBAAO,MADxB,EAEsBf,oBAAS,GAF/B,mBAEKyF,EAFL,KAEWC,EAFX,KAKIC,EAAW,SAACC,GACd,OAAIX,EAAsBW,EAAOX,GACrB,IAGVY,EAAW,SAAA/J,GACTA,EAAEwG,SAAWxG,EAAE6I,eAAee,GAAQ,IAGxCI,EAAe,SAAChK,EAAGiB,EAAOgJ,GAC5B,GAAIjK,EAAEwG,SAAWxG,EAAE6I,cAAe,CAC9B,IAAI3I,EAAS+J,EAAYR,EAAkBQ,EAAH,UAAiBhJ,EAAjB,cAA4BgJ,GAAchJ,EAClFsI,EAASrJ,GACT0J,GAAQ,GACRF,EAAWrE,QAAQ6E,SAIrBC,EAAc,SAACC,GACjB,OAAIA,EAAKvH,OAAS,IAAW,GAAN,OAAUuH,EAAKC,MAAM,EAAG,KAAxB,OACXD,GAGVE,EAAkB,SAAC/H,GACrB,IACIrC,EAAS,GACTJ,EAAY,CACZyC,KAAM,oBACNoB,QAJauF,EAAW3G,EAAK2G,KAAcI,EAAe/G,IAAS+G,GAI9C,SAAW,IAEpC,IAAK,IAAMzI,KAAOf,EACVA,EAAUe,KAAMX,GAAUJ,EAAUe,GAAO,KAEnD,OAAOX,EAAOY,QAGZyJ,EAAqB,SAAChI,GACxB,IAAIiI,EAAWf,EAAkBH,EAAgBA,EAAeA,EAAamB,MAAM,KAAK,GAAG3J,OAAS,GAEhG4J,EAAU,CACV/G,QAFayF,EAAc7G,EAAK6G,KAAiBoB,EAAWjI,IAASiI,GAEhD,SAAW,IAEpC,MAAM,wBAAN,OAA+BE,EAAQC,YAAvC,YAAsDD,EAAQ/G,SAiBlE,OACI,kBAAC,IAAMnC,SAAP,KACK6H,EAAY,2BAAOvJ,UAAU,sBAAsBuJ,GAAqB,GACzE,yBAAKvJ,UAjBO,SAACyC,GACjB,IAAIrC,EAAS,GACTJ,EAAY,CACZ8K,KAAM,cACNrK,QAASA,EAAU,UAAY,GAC/B9C,KAAMA,GAAc,GACpBI,MAAOA,GAAgB,IAE3B,IAAK,IAAMgD,KAAOf,EACVA,EAAUe,KAAMX,GAAUJ,EAAUe,GAAO,KAEnD,OAAOX,EAAOY,OAMM+J,GACZrF,IAAKkE,EACL7J,MAAO,CAAErC,MAAOA,GAAgB,GAAI0F,SAAUA,GAAsB,IACpEoB,UAAW,EACXvE,QAASgK,EACTxF,OAAQ,kBAAMqF,GAAQ,KAEpBO,EAAYb,GAA8B,IACI,GAAhD,0BAAMvJ,QAASgK,GAAWlE,GACzBsE,EAAYb,GAA8B,IACvC,yBAAKxJ,UAAU,qBACXC,QAASgK,EACTnK,MAAO0J,GACFA,EAAea,EAAYb,GAAgB,IAC3C,GACb,kBAAC,EAAD,CAAM3J,KAAK,iBAEX,kBAAC8E,EAAA,EAAD,CACIC,GAAIiF,EACJhF,QAAS,IACTC,WAAW,cACXC,eAAa,GACb,yBAAK/E,UAAU,uBAtFR0C,GAAgB,IAuFPF,KAAI,SAACC,EAAMF,GAAP,OACZ,yBAAKxB,IAAKwB,EACNvC,UAAWwK,EAAgB/H,GAC3BxC,QAAS,SAAAC,GAAC,OAAI6J,EAAStH,GAAMM,OAAS,EAAI,GAAKmH,EAAahK,EAAGkJ,EAAW3G,EAAK2G,GAAY3G,KAC1F2G,EAAW3G,EAAK2G,GAAY3G,EAC5BsH,EAAStH,GAAMM,OAAS,EAAI,kBAAC,EAAD,CAAMlD,KAAK,iBAAmB,GAC1DkK,EAAStH,GAAMM,OAAS,EACrB,yBAAK/C,UAAU,yBACV0H,EAAW,yBAAK1H,UAAU,8BAA8BoJ,EAAW3G,EAAK2G,GAAY3G,GAAc,GAClGsH,EAAStH,GAAMD,KAAI,SAACwI,EAASC,GAAV,OAChB,yBAAKlK,IAAKkK,EACNjL,UAAWyK,EAAmBO,GAC9B/K,QAAS,SAAAC,GAAC,OAAIgK,EAAahK,EAAGkJ,EAAW3G,EAAK2G,GAAY3G,EAAM6G,EAAc0B,EAAQ1B,GAAe0B,KACpG1B,EAAc0B,EAAQ1B,GAAe0B,EAH1C,IAGoDtB,EAAa,KAAOsB,EAAQtB,GAAc,IAAM,QAGnG,YCnHhCwB,GAAa,SAACzN,GACvB,IAgBI0N,EAAU1N,EAAM0N,QAAU1N,EAAM0N,QAAU,GAExCC,EAAW,WACb,OAAOC,KAAKC,KAAK7N,EAAM8N,WAAWJ,IAAY,EAC1C,EAAIE,KAAKC,KAAK7N,EAAM8N,WAAWJ,IArBN,EAuBK/G,mBAAS3G,EAAM8H,QAAU9H,EAAM8H,QAAU,GAvB9C,mBAuB1BiG,EAvB0B,KAuBbC,EAvBa,OAwBOrH,mBAAS+G,GAxBhB,mBAwB1BO,EAxB0B,KAwBZC,EAxBY,OAyBDvH,mBAjCZ,SAACrB,GAErB,IADA,IAAI6I,EAAM,GACDC,EAAI,EAAGA,EAAI9I,EAAQ8I,IACxBD,EAAIE,KAAKD,GAEb,OAAOD,EA4BkCG,CAAgBV,KAAKC,KAAK7N,EAAM8N,WAAWJ,KAzBnD,mBAyB1Ba,EAzB0B,aA0BK5H,mBAAS4H,EAASzB,MAAM,EAAGa,OA1BhC,mBA0B1Ba,EA1B0B,KA0BbC,EA1Ba,KA4B3BC,EAAkB,WACpB,OAAuB,IAAhBX,GAGLY,EAAkB,WACpB,OAAIZ,IAAgB/N,EAAM8N,YACD,IAArB9N,EAAM8N,YACNC,IAAgBH,KAAKC,KAAK7N,EAAM8N,WAAWJ,IAoCnD,OACI,yBAAKnL,UAvEe,WACpB,IAAII,EAAS,GACTJ,EAAY,CACZK,IAAK,aACL1C,KAAMF,EAAME,KAAOF,EAAME,KAAO,GAChC8C,QAAShD,EAAMgD,QAAU,UAAY,GACrC1C,MAAON,EAAMM,MAAQN,EAAMM,MAAQ,GACnCiC,UAAWvC,EAAMuC,UAAYvC,EAAMuC,UAAY,IAGnD,IAAK,IAAMe,KAAOf,EACVA,EAAUe,KAAMX,GAAUJ,EAAUe,GAAO,KAEnD,OAAOX,EAAOY,OA0DEqL,IAEZ,yBAAKrM,UAAWmM,IAAoB,kBAAoB,2BAA4BlM,QAxBvE,WACbkM,OACIX,EAAc,GAAKJ,MAAe,GAAKI,EAAc,GACrDU,EAAeF,EAASzB,MAAMiB,EAAcJ,IAAYI,IACxDC,EAAeD,EAAc,IACtBA,EAAc,GACrBC,EAAeD,EAAc,MAmB7B,kBAAC,EAAD,OAGHS,EAAYzJ,KAAI,SAACC,EAAMF,GACpB,OACI,yBAAKxB,IAAKwB,EAAOvC,UAAYyC,EAAO,IAAO+I,EAAc,yBAA2B,kBAChFvL,QAAS,kBAAMwL,EAAehJ,EAAO,KACpCA,EAAO,MAKpB,yBAAKzC,UAAWoM,IAAoB,kBAAoB,2BAA4BnM,QAhDvE,WACdmM,MACKZ,EAAcJ,MAAe,GAAKI,EAAcQ,EAASjJ,QACzDmJ,EAAeF,EAASzB,MAAMiB,EAAaA,EAAcJ,MACzDK,EAAeD,EAAc,IACtBA,EAAcQ,EAASjJ,QAC9B0I,EAAeD,EAAc,MA2C7B,kBAAC,EAAD,OAGJ,yBAAKxL,UAAU,uBACX,kBAAC,GAAD,CACIoD,SA3BO,WAAf3F,EAAME,KAA0B,KAC3BF,EAAME,KAAyB,KA2B5BA,KAAMF,EAAME,KACZ8C,QAAShD,EAAMgD,QACf1C,MAAON,EAAMM,MACb2E,MAAOjF,EAAM6O,gBAAkB7O,EAAM6O,gBAAkB,CAAC,GAAI,GAAI,GAAI,KACpEzB,aAAa,EACbrB,aAAY,UAAKkC,EAAL,cAAuBjO,EAAM8O,SAAW9O,EAAM8O,SAAW,QACrE9C,SAvCY,SAACtI,GACzBwK,EAAgBxK,SCvEXqL,GAAQ,SAAC/O,GAMlB,OACI,yBAAKuC,UAAWvC,EAAM4G,QAAU,kBAAoB,yBAChDpE,QAAS,SAACC,GAAD,OAAOzC,EAAMgP,SANhB,SAACvM,GACPA,EAAEwG,SAAWxG,EAAE6I,eAAetL,EAAMuL,UAKH0D,CAAMxM,GAAK,KAC5C,kBAACyE,EAAA,EAAD,CACIC,GAAInH,EAAM4G,QACVQ,QAAS,IACTC,WAAW,QACXC,eAAa,EACb4H,QAAS,kBAAMlP,EAAMkP,QAAUlP,EAAMkP,UAAY,IACjDC,SAAU,kBAAMnP,EAAMmP,SAAWnP,EAAMmP,WAAa,KACpD,yBAAK5M,UAAU,SACX,yBAAKA,UAAU,gBAAgBvC,EAAM4F,QACrC,yBAAKrD,UAAU,iBAAiBvC,EAAM8F,UACrC9F,EAAMqF,OAAS,yBAAK9C,UAAU,gBAAgBvC,EAAMqF,QAAgB,OCpB5E+J,GAAQ,SAACpP,GAqBlB,OACI,yBAAKuC,UArBU,WACf,IAAII,EAAS,GACTJ,EAAY,CACZK,IAAK,kBACLI,QAAShD,EAAMgD,QAAU,UAAY,GACrC1C,MAAON,EAAMM,MAAQN,EAAMM,MAAQ,GACnCiC,UAAWvC,EAAMuC,UAAYvC,EAAMuC,UAAY,IAGnD,IAAK,IAAMe,KAAOf,EACVA,EAAUe,KAAMX,GAAUJ,EAAUe,GAAO,KAEnD,OAAOX,EAAOY,OASE8L,IACXrP,EAAMuM,OACP,yBAAKhK,UAAU,SAPW,qBAAnBvC,EAAM4G,SACL5G,EAAM4G,QAOM5G,EAAM0D,MAAQ,MCzBxC4L,GAAQ,SAACtP,GAeX,OACI,yBAAKuC,UAfU,WACf,IAAII,EAAS,GACTJ,EAAY,CACZK,IAAK,QACLK,SAAUjD,EAAMiD,SAAW,WAAa,GACxCV,UAAWvC,EAAMuC,UAAYvC,EAAMuC,UAAY,IAGnD,IAAK,IAAMe,KAAOf,EACVA,EAAUe,KAAMX,GAAUJ,EAAUe,GAAO,KAEnD,OAAOX,EAAOY,OAIEgM,IACZ,2BACIlL,KAAK,QACLjC,KAAMpC,EAAMoC,KACZsB,MAAO1D,EAAM0D,MACbT,SAAUjD,EAAMiD,SAChBsB,SAAU,SAAA9B,GAAC,OAAIzC,EAAMuE,SAAS9B,MACjCzC,EAAMwE,MAAQ,8BAAOxE,EAAMwE,OAAgB,KAK3CgL,GAAa,SAACxP,GAevB,OACI,yBAAKuC,UAfe,WACpB,IAAII,EAAS,GACTJ,EAAY,CACZK,IAAK,cACL6M,SAAUzP,EAAMyP,SAAW,WAAa,GACxClN,UAAWvC,EAAMuC,UAAYvC,EAAMuC,UAAY,IAGnD,IAAK,IAAMe,KAAOf,EACVA,EAAUe,KAAMX,GAAUJ,EAAUe,GAAO,KAEnD,OAAOX,EAAOY,OAIEmM,IACX1P,EAAM2P,QAAQ5K,KAAI,SAACC,EAAMF,GAAP,OACf,kBAAC,GAAD,CACIxB,IAAKwB,EACL7B,SAAUjD,EAAMiD,SAChBuB,MAAOxE,EAAM8L,UAAY9L,EAAM8L,UAAY9G,EAC3CtB,MAAOsB,EACP5C,KAAMpC,EAAMoC,KACZmC,SAAU,kBAAMvE,EAAMuE,SAASS,W,SCpDtC4K,GAAY,SAAC5P,GACtB,OACI,kBAAC,IAAMiE,SAAP,KACKjE,EAAM4G,QAAU,yBAAKrE,UAAU,YAC5BD,MAAO,CAAEuN,WAAY7P,EAAM8P,gBAAkB9P,EAAM8P,gBAAkB,KAEjE9P,EAAM+P,UAAY/P,EAAM+P,UACxB,yBAAKxN,UAAU,gBACX,yBAAKD,MAAO,CAAEwN,gBAAiB9P,EAAMM,MAAQN,EAAMM,MAAQ,aAC3D,yBAAKgC,MAAO,CAAEwN,gBAAiB9P,EAAMM,MAAQN,EAAMM,MAAQ,aAC3D,yBAAKgC,MAAO,CAAEwN,gBAAiB9P,EAAMM,MAAQN,EAAMM,MAAQ,aAC3D,yBAAKgC,MAAO,CAAEwN,gBAAiB9P,EAAMM,MAAQN,EAAMM,MAAQ,eAG9D,KCIR0P,GAAS,CAClB,CAAEC,KAAM,IAAK7N,KAAM,cAAe8N,UClBd,WACpB,OACI,6BACI,wBAAI3N,UAAU,gBAAd,kCACA,oHACA,kBAAC,EAAD,CAAKkB,SAAS,SAASC,MAAM,2BDcrC,CAAEuM,KAAM,QAAS7N,KAAM,SAAU8N,UEhBX,WAAO,IAAD,EACEvJ,oBAAS,GADX,mBACrB9C,EADqB,KACZsM,EADY,KAEtBC,EAAO,CAAC,WAAY,cAAe,UAAW,OAAQ,SA0H5D,OACI,yBAAK7N,UAAU,QACX,yBAAKA,UAAU,cAAf,oBACA,kBAAC,EAAD,CAAMc,UAAQ,EAAC/C,MAAM,UAAU+B,MAAM,gBACjC,yBAAKE,UAAU,oBACX,kBAAC,EAAD,CACIA,UAAU,OACVjC,MAAM,UACNuC,QAAM,EACNT,KAAK,YAET,kBAAC,EAAD,CACIW,QAAM,EACNR,UAAU,OACVjC,MAAM,UACN8B,KAAK,WAET,kBAAC,EAAD,CACIG,UAAU,OACVc,UAAQ,EACR/C,MAAM,UACN8B,KAAK,aAET,kBAAC,EAAD,CACIG,UAAU,OACVc,UAAQ,EACRP,WAAS,EACTxC,MAAM,UACN8B,KAAK,cAET,kBAAC,EAAD,CACIG,UAAU,OACVc,UAAQ,EACRL,SAAO,EACP1C,MAAM,UACN8B,KAAK,cAIjB,6BACA,kBAAC,EAAD,CAAMiB,UAAQ,EAAC/C,MAAM,UAAU+B,MAAM,gBACjC,yBAAKE,UAAU,oBACX,kBAAC,EAAD,CACIA,UAAU,OACVjC,MAAM,OACN8B,KAAK,YAET,kBAAC,EAAD,CACIG,UAAU,OACVjC,MAAM,OACNJ,KAAK,SACLkC,KAAK,WAET,kBAAC,EAAD,CACIG,UAAU,OACVrC,KAAK,QACLI,MAAM,OACN8B,KAAK,UAET,kBAAC,EAAD,CACIY,SAAO,EACPT,UAAU,OACVjC,MAAM,OACN8B,KAAK,YAET,kBAAC,EAAD,CACIY,SAAO,EACPK,UAAQ,EACRP,WAAS,EACTP,UAAU,OACVjC,MAAM,OACNJ,KAAK,SACLkC,KAAK,WAET,kBAAC,EAAD,CACIY,SAAO,EACPF,WAAS,EACT5C,KAAK,QACLI,MAAM,OACN8B,KAAK,YAIjB,6BACA,kBAAC,EAAD,CAAMiB,UAAQ,EAAC/C,MAAM,UAAU+B,MAAM,iBACjC,kBAAC,EAAD,CACIE,UAAU,OACVjC,MAAM,UACN8B,KAAK,YAET,kBAAC,EAAD,CACIG,UAAU,OACVjC,MAAM,OACN8B,KAAK,SAET,kBAAC,EAAD,CACIG,UAAU,OACVjC,MAAM,QACN8B,KAAK,UAET,kBAAC,EAAD,CACIG,UAAU,OACVjC,MAAM,UACN8B,KAAK,YAET,kBAAC,EAAD,CACIG,UAAU,OACVjC,MAAM,YACN8B,KAAK,cAET,kBAAC,EAAD,CACIG,UAAU,OACVjC,MAAM,QACN8B,KAAK,UAET,kBAAC,EAAD,CACIa,UAAQ,EACR3C,MAAM,UACN8B,KAAK,cAGb,6BACA,kBAAC,EAAD,CAAMiB,UAAQ,EAAC/C,MAAM,UAAU+B,MAAM,gBACjC,yBAAKC,MAAO,CAAErC,MAAO,KAAOsC,UAAU,SAClC,kBAAC,EAAD,CACIwB,OAAK,EACLxB,UAAU,OACVjC,MAAM,UACN8B,KAAK,iBAET,kBAAC,EAAD,CACI2B,OAAK,EACLxB,UAAU,QACVjC,MAAM,UACN+C,UAAQ,EACRjB,KAAK,iBAET,kBAAC,EAAD,CACI2B,OAAK,EACLf,SAAO,EACPK,UAAQ,EACRd,UAAU,OACVjC,MAAM,QACN8B,KAAK,mBAIjB,6BACA,kBAAC,EAAD,CAAMiB,UAAQ,EAAC/C,MAAM,UAAU+B,MAAM,gBACjC,yBAAKE,UAAU,oBACX,kBAAC,EAAD,CACIA,UAAU,QACVjC,MAAM,UACNwD,KAAK,WAET,kBAAC,EAAD,CACIT,UAAQ,EACRd,UAAU,QACVjC,MAAM,UACNwD,KAAK,SAET,kBAAC,EAAD,CACIZ,OAAK,EACLX,UAAU,QACVuB,KAAK,WAET,kBAAC,EAAD,CACIvB,UAAU,QACVjC,MAAM,UACN8B,KAAK,SACL0B,KAAK,WAET,kBAAC,EAAD,CACIT,UAAQ,EACRd,UAAU,QACVjC,MAAM,UACN8B,KAAK,SACL0B,KAAK,WAET,kBAAC,EAAD,CACIvB,UAAU,QACVjC,MAAM,OACN8B,KAAK,OACL0B,KAAK,OACLL,UAAQ,MAIpB,6BACA,kBAAC,EAAD,CAAMJ,UAAQ,EAAC/C,MAAM,UAAU+B,MAAM,WACjC,yBAAKE,UAAU,0BACX,iDACA,kBAAC,EAAD,CACI8D,MAAOxC,EACPvD,MAAM,OACNiC,UAAU,QACVgC,SAAU,kBAAM4L,GAAYtM,OAEpC,yBAAKtB,UAAU,oBACX,kBAAC,EAAD,CACIc,UAAQ,EACRd,UAAU,QACVjC,MAAM,UACNuD,QAASA,EACTC,KAAK,WAET,kBAAC,EAAD,CACIvB,UAAU,QACVW,OAAK,EACLW,QAASA,EACTC,KAAK,WAET,kBAAC,EAAD,CACIvB,UAAU,QACVjC,MAAM,OACN8B,KAAK,OACL0B,KAAK,OACLD,QAASA,EACTJ,UAAQ,IAEZ,kBAAC,EAAD,CACIlB,UAAU,QACVjC,MAAM,OACNuD,QAASA,EACTb,SAAO,EACPZ,KAAK,WAET,kBAAC,EAAD,CACIG,UAAU,QACVjC,MAAM,OACNuD,QAASA,EACTb,SAAO,EACPK,UAAQ,EACRjB,KAAK,aAIjB,mCACA,kBAAC,EAAD,CACIuC,UAAQ,EACRE,QAASuL,EACTnL,MA1WE,CACV,CACIoL,SAAU,UACVC,YAAa,sBACbC,QAAS,GACTlM,KAAM,WACNX,MAAO,sCAEX,CACI2M,SAAU,OACVC,YAAa,yCACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,IAEX,CACI2M,SAAU,SACVC,YAAa,qBACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,QACVC,YAAa,sDACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,wDAEX,CACI2M,SAAU,WACVC,YAAa,uBACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,UACVC,YAAa,4CACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,UACVC,YAAa,6BACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,SACVC,YAAa,iCACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,WACVC,YAAa,yDACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,YACVC,YAAa,+BACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,QACVC,YAAa,mCACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,OACVC,YAAa,kBACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,kBACX,CACI2M,SAAU,OACVC,YAAa,wEACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,sDAEX,CACI2M,SAAU,WACVC,YAAa,6CACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,OACVC,YAAa,kDACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,QACVC,YAAa,kDACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,YACVC,YAAa,sCACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,KAsPHoB,OAAO,EACPK,WAAYiL,OF9VxB,CAAEH,KAAM,QAAS7N,KAAM,OAAQ8N,UGjBX,WACpB,IA6BME,EAAO,CAAC,WAAY,cAAe,UAAW,OAAQ,SA8C5D,OACI,yBAAK7N,UAAU,QACX,yBAAKA,UAAU,cAAf,kBACA,2BAAG,gCAAS+N,MAAZ,iBACI,uBAAGE,KAAK,mCACJvH,OAAO,SACP1G,UAAU,QAFd,0BAIJ,6BACA,kBAAC,EAAD,CAAMc,UAAQ,EAAC/C,MAAM,UAAU+B,MAAM,oBApF/B,CACV,SACA,SACA,OACA,OACA,SACA,QACA,uBACA,sBACA,OACA,OACA,UACA,SACA,iBACA,eACA,eACA,eACA,MACA,OACA,OACA,eACA,aACA,SACA,OACA,QACA,WACA,QA2De0C,KAAI,SAACC,EAAMF,GAAP,OACP,yBAAKxB,IAAKwB,EACNxC,MAAO,CAAEqD,SAAU,IACnBpD,UAAU,kFACV,kBAAC,EAAD,CAAMH,KAAM4C,IACZ,yBAAKzC,UAAU,aAAayC,QAIxC,mCACA,kBAAC,EAAD,CACIL,UAAQ,EACRE,QAASuL,EACTnL,MApEE,CACV,CACIoL,SAAU,OACVC,YAAa,gBACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,IAEX,CACI2M,SAAU,UACVC,YAAa,qBACbC,QAAS,GACTlM,KAAM,WACNX,MAAO,IAEX,CACI2M,SAAU,QACVC,YAAa,YACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,IAEX,CACI2M,SAAU,QACVC,YAAa,iBACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,mCAEX,CACI2M,SAAU,OACVC,YAAa,gBACbC,QAAS,KACTlM,KAAM,SACNX,MAAO,IAEX,CACI2M,SAAU,YACVC,YAAa,sCACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,KA4BHoB,OAAO,EACPK,WAAYiL,OHnFxB,CAAEH,KAAM,YAAa7N,KAAM,WAAY8N,UIff,WAAO,IAAD,EACNvJ,mBAAS,IADH,mBACvB3B,EADuB,KACjByL,EADiB,OAEJ9J,mBAAS,IAFL,mBAEvB+J,EAFuB,KAEhBC,EAFgB,KAIxBP,EAAO,CAAC,WAAY,cAAe,UAAW,OAAQ,SAuCtDQ,EAAS,CACX,CAAExO,KAAM,eAAgByO,KAAM,kBAAmB/M,KAAM,UAAWuC,OAAO,GACzE,CAAEjE,KAAM,eAAgByO,KAAM,aAAc/M,KAAM,UAAWuC,OAAO,GACpE,CAAEjE,KAAM,aAAcyO,KAAM,WAAY/M,KAAM,UAAWuC,OAAO,GAChE,CAAEjE,KAAM,eAAgByO,KAAM,OAAQ/M,KAAM,UAAWuC,OAAO,IAGlE,OACI,yBAAK9D,UAAU,QACX,yBAAKA,UAAU,cAAf,sBACA,kBAAC,EAAD,CAAMc,UAAQ,EAAC/C,MAAM,UAAU+B,MAAM,sBACjC,yBAAKE,UAAU,oBACX,kBAAC,EAAD,CACIgF,QACIqJ,EAAO7L,KAAI,SAACC,EAAMF,GAAP,OACP,yBAAKxB,IAAKwB,EACNvC,UAAU,iBACVC,QAAS,kBAAMiO,EAAQzL,EAAK6L,QAAQ7L,EAAK6L,SAGrD7G,UAAU,OACV/C,QAAS,kBAAC,EAAD,CACL3G,MAAM,OACN8B,KAAK,aACb,kBAAC,EAAD,CAAKsB,MAAK,uBAAkBsB,GAAQzC,UAAU,YAGtD,6BACA,kBAAC,EAAD,CAAMc,UAAQ,EAAC/C,MAAM,UAAU+B,MAAM,0BACjC,yBAAKE,UAAU,OACX,kBAAC,EAAD,CACIgF,QACIqJ,EAAO7L,KAAI,SAACC,EAAMF,GAAP,OACP,yBAAKxB,IAAKwB,EACNvC,UAAU,YACVC,QAAS,kBAAMmO,EAAS3L,EAAK6L,QAAQ7L,EAAK6L,SAGtD5J,QAAS,kBAAC,EAAD,CACD3G,MAAM,OACNyH,OAAQ,kBAAC,EAAD,CAAM3F,KAAK,mBACnBsB,MAAOgN,EACPpI,YAAY,sBAGhC,6BACA,kBAAC,EAAD,CAAMjF,UAAQ,EAAC/C,MAAM,UAAU+B,MAAM,2BACjC,yBAAKE,UAAU,OACX,kBAAC,EAAD,CACIgF,QACI,yBAAKhF,UAAU,+CACX,kBAAC,EAAD,CAAMH,KAAK,UAAU9B,MAAM,OAAOJ,KAAM,KACxC,4BAAQqC,UAAU,mCAAlB,aAGR0E,QAAS,kBAAC,EAAD,CACG/D,OAAK,EACLY,KAAK,gBAG7B,mCACA,kBAAC,EAAD,CACIa,UAAQ,EACRE,QAASuL,EACTnL,MAtGE,CACV,CACIoL,SAAU,UACVC,YAAa,mBACbC,QAAS,GACTlM,KAAM,MACNX,MAAO,IAEX,CACI2M,SAAU,UACVC,YAAa,8CACbC,QAAS,GACTlM,KAAM,MACNX,MAAO,IAEX,CACI2M,SAAU,QACVC,YAAa,6BACbC,QAAS,GACTlM,KAAM,kBACNX,MAAO,IAEX,CACI2M,SAAU,WACVC,YAAa,gCACbC,QAAS,GACTlM,KAAM,kBACNX,MAAO,IAEX,CACI2M,SAAU,YACVC,YAAa,sCACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,KAqEHoB,OAAO,EACPK,WAAYiL,OJ7FxB,CAAEH,KAAM,SAAU7N,KAAM,OAAQ8N,UKjBZ,WACpB,IAAMY,EAAQ,CACV,CAAE1O,KAAM,WAAYgE,QAAQ,GAC5B,CAAEhE,KAAM,eAAgBgE,QAAQ,GAChC,CAAEhE,KAAM,aAAcgE,QAAQ,GAC9B,CAAEhE,KAAM,eAAgBgE,QAAQ,IAU9BgK,EAAO,CAAC,WAAY,cAAe,UAAW,OAAQ,SAflC,EAiHczJ,mBAzGZ,CACxB,CAAEvE,KAAM,eAAgByO,KAAM,kBAAmB/M,KAAM,iBAAkBuC,OAAO,GAChF,CAAEjE,KAAM,eAAgByO,KAAM,aAAc/M,KAAM,iBAAkBuC,OAAO,GAC3E,CAAEjE,KAAM,aAAcyO,KAAM,WAAY/M,KAAM,iBAAkBuC,OAAO,GACvE,CAAEjE,KAAM,eAAgByO,KAAM,OAAQ/M,KAAM,iBAAkBuC,OAAO,KAZ/C,mBAiHnB0K,EAjHmB,aAkHMpK,mBAAS,KAlHf,mBAkHnBsG,EAlHmB,KAkHT+D,EAlHS,KA0HpBC,EAAa,SAACjM,EAAMkM,GACtB,IAAIvO,GAAS,EACb,GAAIuO,EAAM,CAAC,IAAD,uBACN,YAAqBjE,EAArB,+CAA+B,CAAC,IAArBkE,EAAoB,QACvBnM,EAAKkM,KAAUC,EAAOD,KAAOvO,GAAS,IAFxC,mFAKV,OAAOA,GAGX,OACI,yBAAKJ,UAAU,QACX,yBAAKA,UAAU,cAAf,SACA,kBAAC,EAAD,CACIc,UAAQ,EACRd,UAAU,OACVjC,MAAM,UACN+B,MAAM,gCACN,kBAAC,EAAD,KACKyO,EAAM/L,KAAI,SAACC,EAAMF,GAAP,OACP,kBAAC,EAAD,CACI8E,aAAc,SAAA5E,GAAI,OAAIA,EAAKoB,QAC3B9C,IAAKwB,EACLE,KAAMA,EACNgF,UAAU,cAI1B,yCACA,kBAAC,EAAD,CACI1J,MAAM,UACN+B,MAAM,8CACNc,MAAI,EACJZ,UAAU,QACV,kBAAC,EAAD,CAAM0C,MAAO8L,EAAc/G,UAAU,OAAO7G,MAAI,EAAC0G,OAAK,GACjDkH,EAAahM,KAAI,SAACC,EAAMF,GAAP,OACd,kBAAC,EAAD,CACIxB,IAAKwB,EACLE,KAAMA,EACNlB,KAAMkB,EAAKlB,KACXkG,UAAU,OACVH,OAAK,SAIrB,6BACA,kBAAC,EAAD,CACIxG,UAAQ,EACR/C,MAAM,UACN+B,MAAM,wCACNE,UAAU,QACV,kBAAC,EAAD,CAAM+G,OAAK,EAAC1D,OAAO,oBACdkL,EAAM/L,KAAI,SAACC,EAAMF,GAAP,OACP,kBAAC,EAAD,CACIxB,IAAKwB,EACLE,KAAMA,EACNlB,KAAK,UACLkG,UAAU,OACVH,OAAK,SAIrB,6BACA,kBAAC,EAAD,CACIxG,UAAQ,EACR/C,MAAM,UACN+B,MAAM,qBACNE,UAAU,QACV,kBAAC,EAAD,CAAMqD,OAAQ,6BAA+BqH,EAAS3H,QACjDyL,EAAahM,KAAI,SAACC,EAAMF,GAAP,OACd,kBAAC,EAAD,CACIxB,IAAKwB,EACLE,KAAMA,EACNgF,UAAU,OACVJ,aAAc,SAAA5E,GAAI,OAAIiM,EAAWjM,EAAM,SACvC6E,OAAK,EACL1F,SAAU,kBAAC,EAAD,CACNG,QAAS2M,EAAWjM,EAAM,QAC1BT,SAAU,kBApFpB,SAACS,GACXiM,EAAWjM,EAAM,QACjBgM,GAAY,SAAA/D,GAAQ,OAAIA,EAASmE,QAAO,SAAAC,GAAK,OAAIA,EAAMR,OAAS7L,EAAK6L,WAClEG,EAAY,GAAD,mBAAK/D,GAAL,CAAejI,KAiFOsM,CAAUtM,aAI9C,6BACA,kBAAC,EAAD,CAAM3B,UAAQ,EAAC/C,MAAM,UAAU+B,MAAM,oCACjC,kBAAC,EAAD,KACK0O,EAAahM,KAAI,SAACC,EAAMF,GAAP,OACd,kBAAC,EAAD,CACIxB,IAAKwB,EACLE,KAAMA,EACNlB,KAAMkB,EAAKlB,KACXkG,UAAU,OACVC,SAAU,kBAAC,EAAD,CAAK7G,OAAK,EAAC9C,MAAM,OAAOoD,MAAOsB,EAAK6L,OAC9CjM,SACI,kBAAC,IAAMX,SAAP,KACI,kBAAC,EAAD,CAAQb,OAAK,EAAC9C,MAAM,QAAQiC,UAAU,QAAQuB,KAAK,SACnD,kBAAC,EAAD,CAAQV,OAAK,EAAC9C,MAAM,QAAQwD,KAAK,kBAMzD,wCACA,kBAAC,EAAD,CACIa,UAAQ,EACRE,QAASuL,EACTnL,MAnNE,CACV,CACIoL,SAAU,SACVC,YAAa,kBACbC,QAAS,GACTlM,KAAM,MACNX,MAAO,IAEX,CACI2M,SAAU,QACVC,YAAa,wBACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,OACVC,YAAa,kDACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,YACVC,YAAa,sCACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,KAyLHoB,OAAO,EACPK,WAAYiL,IAChB,4CACA,kBAAC,EAAD,CACIzL,UAAQ,EACRE,QAASuL,EACTnL,MA3LG,CACX,CACIoL,SAAU,YACVC,YAAa,uFACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,IAEX,CACI2M,SAAU,WACVC,YAAa,kEACbC,QAAS,GACTlM,KAAM,MACNX,MAAO,IAEX,CACI2M,SAAU,eACVC,YAAa,+DACbC,QAAS,GACTlM,KAAM,WACNX,MAAO,IAEX,CACI2M,SAAU,WACVC,YAAa,sEACbC,QAAS,GACTlM,KAAM,MACNX,MAAO,IAEX,CACI2M,SAAU,OACVC,YAAa,wCACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,sDAEX,CACI2M,SAAU,WACVC,YAAa,uDACbC,QAAS,GACTlM,KAAM,MACNX,MAAO,IAEX,CACI2M,SAAU,YACVC,YAAa,wCACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,QACVC,YAAa,qCACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,YACVC,YAAa,sCACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,KA8HHoB,OAAO,EACPK,WAAYiL,OL1NxB,CAAEH,KAAM,UAAW7N,KAAM,QAAS8N,UMnBZ,WAAO,IAAD,EACFvJ,mBAAS,IADP,mBACrB4K,EADqB,KACdC,EADc,OAEA7K,mBAAS,IAFT,mBAErB8K,EAFqB,KAEbC,EAFa,OAGF/K,mBAAS,IAHP,mBAGrBuC,EAHqB,KAGdyI,EAHc,KAKtBvB,EAAO,CAAC,WAAY,cAAe,UAAW,OAAQ,SAgNtDwB,EAAmB,SAACxP,GACtBuP,GAAS,SAAAzI,GAAK,OAAIA,EAAMkI,QAAO,SAAApM,GAAI,OAAIA,EAAK5C,OAASA,SAGzD,OACI,yBAAKG,UAAU,QACX,yBAAKA,UAAU,cAAf,UACA,2CACA,kBAAC,EAAD,KACI,yBAAKA,UAAU,YACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,CACIiC,MAAM,4CACN8D,YAAY,eACZ5E,MAAO6N,EACPjR,MAAM,UACNL,MAAM,QACNyI,KAAK,YACLF,QAAS,kBAAMgJ,EAAS,KACxBjN,SAAU,SAAA9B,GAAC,OAAI+O,EAAS/O,EAAEwG,OAAOvF,UACrC,kBAAC,EAAD,CACIc,MAAM,0DACN8D,YAAY,eACZ5E,MAAO6N,EACPxO,QAAM,EACNF,QAAM,EACNvC,MAAM,UACNyH,OAAQ,kBAAC,EAAD,CAAM3F,KAAK,WACnBnC,MAAM,QACNuI,QAAS,kBAAMgJ,EAAS,KACxBjN,SAAU,SAAA9B,GAAC,OAAI+O,EAAS/O,EAAEwG,OAAOvF,UACrC,kBAAC,EAAD,CACIc,MAAM,2DACN8D,YAAY,0BACZ5E,MAAO6N,EACPvO,SAAO,EACP+E,OAAQ,kBAAC,EAAD,CAAM3F,KAAK,WACnBqG,OAAQ,kBAAC,EAAD,CAAMrG,KAAK,SACnB9B,MAAM,OACNL,MAAM,QACNuI,QAAS,kBAAMgJ,EAAS,KACxBjN,SAAU,SAAA9B,GAAC,OAAI+O,EAAS/O,EAAEwG,OAAOvF,UACrC,kBAAC,EAAD,CACIc,MAAM,uBACN8D,YAAY,kCACZ5E,MAAO6N,EACPvO,SAAO,EACPC,UAAQ,EACR8E,OAAQ,kBAAC,EAAD,CAAM3F,KAAK,YACnB9B,MAAM,OACNL,MAAM,QACNuI,QAAS,kBAAMgJ,EAAS,KACxBjN,SAAU,SAAA9B,GAAC,OAAI+O,EAAS/O,EAAEwG,OAAOvF,WAEzC,yBAAKnB,UAAU,OACX,kBAAC,EAAD,CACIiC,MAAM,0CACN8D,YAAY,YACZ5E,MAAO6N,EACPjR,MAAM,UACNL,MAAM,OACN8H,OAAQ,kBAAC,EAAD,CAAM3F,KAAK,WACnBqG,OAAQ,kBAAC,EAAD,CAAQrG,KAAK,SAAS9B,MAAM,UAAUkC,QAAS,eACvDgG,QAAS,kBAAMgJ,EAAS,KACxBjN,SAAU,SAAA9B,GAAC,OAAI+O,EAAS/O,EAAEwG,OAAOvF,UACrC,kBAAC,EAAD,CACIc,MAAM,wCACN8D,YAAY,YACZ5E,MAAO6N,EACPjR,MAAM,UACNL,MAAM,OACN8C,QAAM,EACNgF,OAAQ,kBAAC,EAAD,CAAM3F,KAAK,WACnBqG,OAAQ,kBAAC,EAAD,CAAQrG,KAAK,SAAS9B,MAAM,UAAUkC,QAAS,eACvDgG,QAAS,kBAAMgJ,EAAS,KACxBjN,SAAU,SAAA9B,GAAC,OAAI+O,EAAS/O,EAAEwG,OAAOvF,UACrC,kBAAC,EAAD,CACIc,MAAM,yCACN8D,YAAY,YACZ5E,MAAO6N,EACPjR,MAAM,QACNL,MAAM,OACN+C,SAAO,EACP+E,OAAQ,kBAAC,EAAD,CAAM3F,KAAK,WACnBqG,OAAQ,kBAAC,EAAD,CAAQrG,KAAK,SAAS9B,MAAM,QAAQkC,QAAS,eACrDgG,QAAS,kBAAMgJ,EAAS,KACxBjN,SAAU,SAAA9B,GAAC,OAAI+O,EAAS/O,EAAEwG,OAAOvF,aAIjD,2CACA,kBAAC,EAAD,KACI,yBAAKnB,UAAU,OACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,CACIjC,MAAM,OACNgI,YAAY,gBACZ5E,MAAO+N,EACPjN,MAAM,4CACNvE,MAAM,QACN8H,OAAQ,kBAAC,EAAD,CAAM3F,KAAK,eACnBoG,QAAS,kBAAMkJ,EAAU,KACzBnN,SAAU,SAAA9B,GAAC,OAAIiP,EAAUjP,EAAEwG,OAAOvF,UACtC,kBAAC,EAAD,CACIxD,KAAK,SACLI,MAAM,OACNkE,MAAM,2CACNuD,OAAQ,kBAAC,EAAD,CAAM3F,KAAK,eACnBkG,YAAY,gBACZ5E,MAAO+N,EACPxR,MAAM,QACNuI,QAAS,kBAAMkJ,EAAU,KACzBnN,SAAU,SAAA9B,GAAC,OAAIiP,EAAUjP,EAAEwG,OAAOvF,UACtC,kBAAC,EAAD,CACIxD,KAAK,QACLI,MAAM,OACNkE,MAAM,0CACNuD,OAAQ,kBAAC,EAAD,CAAM3F,KAAK,eACnBkG,YAAY,iBACZ5E,MAAO+N,EACPxR,MAAM,QACNuI,QAAS,kBAAMkJ,EAAU,KACzBnN,SAAU,SAAA9B,GAAC,OAAIiP,EAAUjP,EAAEwG,OAAOvF,WAE1C,yBAAKnB,UAAU,OACX,kBAAC,EAAD,CACIjC,MAAM,OACNgI,YAAY,gBACZ5E,MAAO+N,EACPzO,SAAO,EACPwB,MAAM,yDACNvE,MAAM,QACN8H,OAAQ,kBAAC,EAAD,CAAM3F,KAAK,eACnBoG,QAAS,kBAAMkJ,EAAU,KACzBnN,SAAU,SAAA9B,GAAC,OAAIiP,EAAUjP,EAAEwG,OAAOvF,UACtC,kBAAC,EAAD,CACIxD,KAAK,SACLI,MAAM,OACN0C,SAAO,EACPwB,MAAM,wDACNuD,OAAQ,kBAAC,EAAD,CAAM3F,KAAK,eACnBkG,YAAY,gBACZ5E,MAAO+N,EACPxR,MAAM,QACNuI,QAAS,kBAAMkJ,EAAU,KACzBnN,SAAU,SAAA9B,GAAC,OAAIiP,EAAUjP,EAAEwG,OAAOvF,UACtC,kBAAC,EAAD,CACIxD,KAAK,QACLI,MAAM,OACN0C,SAAO,EACPwB,MAAM,uDACNuD,OAAQ,kBAAC,EAAD,CAAM3F,KAAK,eACnBkG,YAAY,iBACZ5E,MAAO+N,EACPxR,MAAM,QACNuI,QAAS,kBAAMkJ,EAAU,KACzBnN,SAAU,SAAA9B,GAAC,OAAIiP,EAAUjP,EAAEwG,OAAOvF,aAIlD,wCACA,kBAAC,EAAD,KACI,kDACA,kBAAC,EAAD,CACIc,MAAM,cACNd,MAAOwF,EACPlG,SAAO,EACPX,MAAM,4BACN/B,MAAM,OACNwI,UAAQ,EACRK,SAAUyI,EACV3R,MAAO,IACPsE,SAAU,SAAA2E,GAAK,OAAIyI,EAASzI,MAChC,6BACA,kBAAC,EAAD,CACI1E,MAAM,cACNd,MAAOwF,EACPlG,SAAO,EACPX,MAAM,4BACN/B,MAAM,UACNwI,UAAQ,EACRK,SAAUyI,EACV3R,MAAO,IACPsE,SAAU,SAAA2E,GAAK,OAAIyI,EAASzI,MAChC,6BACA,sDACA,kBAAC,EAAD,CACI1E,MAAM,cACNd,MAAOwF,EACP7G,MAAM,4BACNnC,KAAK,SACLI,MAAM,OACNwI,UAAQ,EACRK,SAAUyI,EACV3R,MAAO,IACPsE,SAAU,SAAA2E,GAAK,OAAIyI,EAASzI,MAChC,6BACA,0DACA,kBAAC,EAAD,CACI1E,MAAM,cACNd,MAAOwF,EACP7G,MAAM,4BACN/B,MAAM,OACN2C,UAAQ,EACRJ,QAAM,EACNsG,SAAUyI,EACV3R,MAAO,IACPsE,SAAU,SAAA2E,GAAK,OAAIyI,EAASzI,OAsBpC,8CACA,kBAAC,EAAD,CACIvE,UAAQ,EACRE,QAASuL,EACTnL,MAxbE,CACV,CACIoL,SAAU,WACVC,YAAa,4BACbC,QAAS,GACTlM,KAAM,WACNX,MAAO,sCAEX,CACI2M,SAAU,QACVC,YAAa,cACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,IAEX,CACI2M,SAAU,SACVC,YAAa,0BACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,QACVC,YAAa,qCACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,4CAEX,CACI2M,SAAU,WACVC,YAAa,4BACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBACX,CACI2M,SAAU,UACVC,YAAa,6BACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,SACVC,YAAa,sCACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,YACVC,YAAa,+BACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,OACVC,YAAa,uBACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,kBAEX,CACI2M,SAAU,SACVC,YAAa,aACbC,QAAS,GACTlM,KAAM,MACNX,MAAO,IAEX,CACI2M,SAAU,SACVC,YAAa,aACbC,QAAS,GACTlM,KAAM,MACNX,MAAO,IAEX,CACI2M,SAAU,QACVC,YAAa,uBACbC,QAAS,GACTlM,KAAM,kBACNX,MAAO,IAEX,CACI2M,SAAU,WACVC,YAAa,qBACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,WACVC,YAAa,qBACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,YACVC,YAAa,sCACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,KAkVHoB,OAAO,EACPK,WAAYiL,IAChB,4CACA,kBAAC,EAAD,CACIzL,UAAQ,EACRE,QAASuL,EACTnL,MApVU,CAClB,CACIoL,SAAU,WACVC,YAAa,sBACbC,QAAS,GACTlM,KAAM,WACNX,MAAO,yBAEX,CACI2M,SAAU,QACVC,YAAa,2CACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,IAEX,CACI2M,SAAU,SACVC,YAAa,uBACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,QACVC,YAAa,sBACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,oCAEX,CACI2M,SAAU,WACVC,YAAa,yBACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBACX,CACI2M,SAAU,UACVC,YAAa,6BACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,SACVC,YAAa,sCACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,OACVC,YAAa,uBACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,kBAEX,CACI2M,SAAU,WACVC,YAAa,gCACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,SACVC,YAAa,oCACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,IAEX,CACI2M,SAAU,QACVC,YAAa,qBACbC,QAAS,GACTlM,KAAM,kBACNX,MAAO,IAEX,CACI2M,SAAU,WACVC,YAAa,wBACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,QACVC,YAAa,qBACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,IAEX,CACI2M,SAAU,YACVC,YAAa,sCACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,KAqPHoB,OAAO,EACPK,WAAYiL,ONnbxB,CAAEH,KAAM,UAAW7N,KAAM,SAAU8N,UOnBb,WAAO,IAAD,EACAvJ,oBAAS,GADT,mBACrByE,EADqB,KACbyG,EADa,OAEMlL,oBAAS,GAFf,mBAErBmL,EAFqB,KAEVC,EAFU,OAGEpL,mBAAS,IAHX,mBAGrBY,EAHqB,KAGZyK,EAHY,KAKtBC,EAAQ,CACV,CAAE7P,KAAM,aAAc0B,KAAM,QAC5B,CAAE1B,KAAM,aAAc0B,KAAM,QAC5B,CAAE1B,KAAM,QAAS0B,KAAM,QACvB,CAAE1B,KAAM,eAAgB0B,KAAM,QAC9B,CAAE1B,KAAM,cAAe0B,KAAM,SAG3BsM,EAAO,CAAC,WAAY,cAAe,UAAW,OAAQ,SA0E5D,OACI,yBAAK7N,UAAU,QACX,yBAAKA,UAAU,cAAf,UACA,kBAAC,EAAD,CAAMkD,MAAI,EAAClD,UAAU,mBACjB,yBAAKA,UAAU,eAAeD,MAAO,CAAE4P,UAAW,MAC9C,kBAAC,EAAD,CACI9G,OAAQA,EACRP,IAAKiH,EACLvG,QAAS,kBAAMsG,GAAU,IACzBjM,OAAO,QACP7C,QAAM,EACN6H,aAAW,EACXY,gBAAc,EACdC,SAAU,kBAAMsG,GAAcD,KAC7BA,EACG,kBAAC,EAAD,KACKG,EAAMlN,KAAI,WAAeD,GAAf,IAAE1C,EAAF,EAAEA,KAAM0B,EAAR,EAAQA,KAAR,OACP,kBAAC,EAAD,CAASR,IAAKwB,EACVyF,QAASnI,EACT4D,SAAS,SACT,kBAAC,EAAD,CACI9C,OAAK,EACLV,QAAS,kBAAMwP,EAAW5P,IAC1B0B,KAAMA,SAItB,kBAAC,EAAD,KACKmO,EAAMlN,KAAI,SAACC,EAAMF,GAAP,OACP,kBAAC,EAAD,CACIxB,IAAKwB,EACLE,KAAMA,EACN6E,OAAK,EACLG,UAAU,cAK9B,yBAAKzH,UAAU,SACX,yEACA,kBAAC,EAAD,CACIH,KAAK,SACL9B,MAAM,OACNkC,QAAS,kBAAMqP,GAAWzG,MAC9B,2BAAI7D,MAIhB,mCACA,kBAAC,EAAD,CACI5C,UAAQ,EACRE,QAASuL,EACTnL,MA7HE,CACV,CACIoL,SAAU,SACVC,YAAa,yBACbC,QAAS,GACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,cACVC,YAAa,0BACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,MACVC,YAAa,mCACbC,QAAS,GACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,WACVC,YAAa,kCACbC,QAAS,GACTlM,KAAM,WACNX,MAAO,IAEX,CACI2M,SAAU,UACVC,YAAa,sBACbC,QAAS,GACTlM,KAAM,WACNX,MAAO,IAEX,CACI2M,SAAU,aACVC,YAAa,0CACbC,QAAS,GACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,SACVC,YAAa,oBACbC,QAAS,GACTlM,KAAM,MACNX,MAAO,IAEX,CACI2M,SAAU,iBACVC,YAAa,+CACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,OACVC,YAAa,gBACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,WACVC,YAAa,kCACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,iBAyDHoB,OAAO,EACPK,WAAYiL,OPzHxB,CAAEH,KAAM,WAAY7N,KAAM,UAAW8N,UQxBd,WACvB,OACI,yBAAK3N,UAAU,QACX,yBAAKA,UAAU,cAAf,YACA,yBAAKA,UAAU,kBACX,kBAAC,EAAD,CAASgI,QAAQ,aACb,yCAEJ,yBAAKhI,UAAU,UACf,kBAAC,EAAD,CAASgI,QAAQ,UACb,kBAAC,EAAD,CAAQjK,MAAM,OAAO8B,KAAK,SAAS+P,SAAU,oBRe7D,CAAElC,KAAM,cAAe7N,KAAM,aAAc8N,USxBjB,WAAO,IAAD,EACIvJ,mBAAS,KADb,mBACzBmH,EADyB,KACbsE,EADa,KAG1BhC,EAAO,CAAC,WAAY,cAAe,UAAW,OAAQ,SAmE5D,OACI,yBAAK7N,UAAU,QACX,yBAAKA,UAAU,cAAf,cACA,wEACA,kBAAC,EAAD,CACImB,MAAOoK,EACPxN,MAAM,OACN+D,KAAK,SACLpE,MAAO,IACPuE,MAAM,oBACND,SAAU,SAAA9B,GAAC,OAAI2P,EAAc3P,EAAEwG,OAAOvF,UAC1C,kBAAC,GAAD,CACIoK,WAAYA,EACZxN,MAAM,UACNiC,UAAU,OACVuM,SAAS,WACb,kBAAC,GAAD,CACIhB,WAAYA,EACZxN,MAAM,OACNwH,QAAS,EACTvF,UAAU,OACVmL,QAAS,KACb,kBAAC,GAAD,CACII,WAAYA,EACZxN,MAAM,UACNiC,UAAU,OACVuF,QAAS,EACT4F,QAAS,KACb,kBAAC,GAAD,CACII,WAAYA,EACZxN,MAAM,QACNiC,UAAU,OACVuF,QAAS,IACb,8DACA,kBAAC,GAAD,CACIgG,WAAYA,EACZxN,MAAM,OACNiC,UAAU,OACVrC,KAAK,SACL8C,SAAO,IACX,qDACA,kBAAC,GAAD,CACI8K,WAAYA,EACZxN,MAAM,OACNiC,UAAU,OACVrC,KAAK,UACT,mCACA,kBAAC,EAAD,CACIyE,UAAQ,EACRE,QAASuL,EACTnL,MApHE,CACV,CACIoL,SAAU,aACVC,YAAa,mBACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,IAEX,CACI2M,SAAU,kBACVC,YAAa,+BACbC,QAAS,oBACTlM,KAAM,WACNX,MAAO,IAEX,CACI2M,SAAU,UACVC,YAAa,qBACbC,QAAS,KACTlM,KAAM,SACNX,MAAO,IAEX,CACI2M,SAAU,WACVC,YAAa,uBACbC,QAAS,OACTlM,KAAM,SACNX,MAAO,IAEX,CACI2M,SAAU,UACVC,YAAa,sCACbC,QAAS,IACTlM,KAAM,SACNX,MAAO,IAEX,CACI2M,SAAU,QACVC,YAAa,oCACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,oCAEX,CACI2M,SAAU,UACVC,YAAa,6BACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,OACVC,YAAa,sBACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,kBAEX,CACI2M,SAAU,YACVC,YAAa,sCACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,KAuDHoB,OAAO,EACPK,WAAYiL,OTjGxB,CAAEH,KAAM,UAAW7N,KAAM,SAAU8N,UU1Bb,WACtB,IAAMjL,EAAQ,CACV,CAAEoN,QAAS,aAAcC,OAAQ,CAAE,aAAc,SAAU,aAC3D,CAAED,QAAS,SAAUC,OAAQ,CAAC,SAAU,iBAAkB,cAC1D,CAAED,QAAS,MAAOC,OAAQ,CAAC,mBAAoB,gBAAiB,kBAChE,CAAED,QAAS,iBAAkBC,OAAQ,CAAC,SAAU,OAAQ,eACxD,CAAED,QAAS,QAASC,OAAQ,CAAC,UAAW,WAAY,cAN5B,EAQI3L,mBAAS,IARb,mBAQrBsG,EARqB,KAQX+D,EARW,OASoBrK,mBAAS,IAT7B,mBASrB4L,EATqB,KASHC,EATG,OAUkC7L,mBAAS,IAV3C,mBAUrB8L,EAVqB,KAUIC,EAVJ,KAYtBtC,EAAO,CAAC,WAAY,cAAe,UAAW,OAAQ,SAsG5D,OACI,yBAAK7N,UAAU,QACX,yBAAKA,UAAU,cAAf,WACA,8CACA,kBAAC,GAAD,CACI0C,MAAOA,EACP3E,MAAM,UACNL,MAAO,IACP0L,SAAS,UACTrD,YAAY,YACZyD,aAAckB,EACdjB,SAAU,SAAA2G,GAAC,OAAI3B,EAAY2B,MAC/B,kBAAC,GAAD,CACI1N,MAAOA,EACP6G,UAAU,iBACV7L,MAAO,IACPK,MAAM,OACN0C,SAAO,EACP2I,SAAS,UACTrD,YAAY,YACZyD,aAAckB,EACdjB,SAAU,SAAA2G,GAAC,OAAI3B,EAAY2B,MAC/B,kBAAC,GAAD,CACI1N,MAAOA,EACPhF,MAAO,IACPK,MAAM,UACNqL,SAAS,UACTrD,YAAY,YACZyD,aAAckB,EACdjB,SAAU,SAAA2G,GAAC,OAAI3B,EAAY2B,MAC/B,kBAAC,GAAD,CACI1N,MAAOA,EACPhF,MAAO,IACPK,MAAM,QACNqL,SAAS,UACTrD,YAAY,YACZyD,aAAckB,EACdjB,SAAU,SAAA2G,GAAC,OAAI3B,EAAY2B,MAC/B,kBAAC,GAAD,CACIrK,YAAY,mBACZrD,MAAOA,EACPhF,MAAO,IACPC,KAAK,SACLyL,SAAS,UACTG,UAAU,qBACVC,aAAckB,EACdjB,SAAU,SAAA2G,GAAC,OAAI3B,EAAY2B,MAC/B,kBAAC,GAAD,CACIrK,YAAY,mBACZrD,MAAOA,EACPhF,MAAO,IACPC,KAAK,SACL8C,SAAO,EACP1C,MAAM,OACNqL,SAAS,UACTG,UAAU,6BACVC,aAAckB,EACdjB,SAAU,SAAA2G,GAAC,OAAI3B,EAAY2B,MAC/B,kBAAC,GAAD,CACIrK,YAAY,mBACZrD,MAAOA,EACPhF,MAAO,IACPC,KAAK,QACLyL,SAAS,UACTG,UAAU,oBACVC,aAAckB,EACdjB,SAAU,SAAA2G,GAAC,OAAI3B,EAAY2B,MAC/B,qDACA,kBAAC,GAAD,CACI1N,MAAOA,EACPhF,MAAO,IACP8L,aAAcwG,EACdjK,YAAY,iCACZqD,SAAS,UACTC,cAAc,SACdtL,MAAM,OACNwL,UAAU,yBACVE,SAAU,SAAA2G,GAAC,OAAIH,EAAoBG,MACvC,+EACA,kBAAC,GAAD,CACI1N,MAAOA,EACPhF,MAAO,IACP8L,aAAc0G,EACdnK,YAAY,iCACZqD,SAAS,UACTC,cAAc,SACd3B,UAAQ,EACRiC,iBAAiB,EACjBJ,UAAU,yBACVxL,MAAM,OACN0L,SAAU,SAAA2G,GAAC,OAAID,EAA2BC,MAC9C,kBAAC,GAAD,CACI1N,MAAOA,EACPhF,MAAO,IACP8L,aAAc0G,EACdnK,YAAY,iCACZqD,SAAS,UACTC,cAAc,SACd3B,UAAQ,EACRjH,SAAO,EACPkJ,iBAAiB,EACjBJ,UAAU,yBACVxL,MAAM,OACN0L,SAAU,SAAA2G,GAAC,OAAID,EAA2BC,MAC9C,mCACA,kBAAC,EAAD,CACIhO,UAAQ,EACRE,QAASuL,EACTnL,MAjNC,CACT,CACIoL,SAAU,QACVC,YAAa,iBACbC,QAAS,GACTlM,KAAM,sBACNX,MAAO,IAEX,CACI2M,SAAU,eACVC,YAAa,kBACbC,QAAS,GACTlM,KAAM,kBACNX,MAAO,IAEX,CACI2M,SAAU,WACVC,YAAa,wBACbC,QAAS,GACTlM,KAAM,WACNX,MAAO,IAEX,CACI2M,SAAU,WACVC,YAAa,4CACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,IAEX,CACI2M,SAAU,aACVC,YAAa,6EACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,IAEX,CACI2M,SAAU,QACVC,YAAa,mBACbC,QAAS,OACTlM,KAAM,kBACNX,MAAO,sBAEX,CACI2M,SAAU,WACVC,YAAa,uBACbC,QAAS,OACTlM,KAAM,kBACNX,MAAO,sBAEX,CACI2M,SAAU,YACVC,YAAa,mBACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,IAEX,CACI2M,SAAU,cACVC,YAAa,kBACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,IAEX,CACI2M,SAAU,QACVC,YAAa,oCACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,oCAEX,CACI2M,SAAU,UACVC,YAAa,6BACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,UACVC,YAAa,iCACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,OACVC,YAAa,kBACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,kBAEX,CACI2M,SAAU,YACVC,YAAa,sCACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,KAiHHoB,OAAO,EACPK,WAAYiL,OVrMxB,CAAEH,KAAM,SAAU7N,KAAM,QAAS8N,UW1BZ,WACrB,IAAMjL,EAAQ,CACV,CAAEoN,QAAS,aAAcO,QAAS,aAAcC,WAAY,SAC5D,CAAER,QAAS,SAAUO,QAAS,SAAUC,WAAY,SACpD,CAAER,QAAS,MAAOO,QAAS,mBAAoBC,WAAY,QAC3D,CAAER,QAAS,iBAAkBO,QAAS,SAAUC,WAAY,SAC5D,CAAER,QAAS,QAASO,QAAS,UAAWC,WAAY,UAMxD,OACI,yBAAKtQ,UAAU,QACX,yBAAKA,UAAU,cAAf,UACA,2EACA,kBAAC,EAAD,CACIoC,UAAQ,EACRO,SAAS,EACTL,QAVI,CAAC,UAAW,UAAW,cAW3BI,MAAOA,EACPH,OAAO,EACPO,OAAQ,8CACRF,WAAY,CAAC,UAAW,UAAW,gBACvC,kEACA,kBAAC,EAAD,CACIR,UAAQ,EACRR,UAAQ,EACRU,QAlBK,CAAC,UAAW,UAAW,cAmB5BI,MAAOA,EACPE,WAAY,CAAC,UAAW,UAAW,cACnCP,SACI,yBAAKrC,UAAU,mCACX,kBAAC,EAAD,CAASgI,QAAQ,QACb,kBAAC,EAAD,CACInH,OAAK,EACLb,UAAU,QACVjC,MAAM,QACNwD,KAAK,OACLtB,QAAS,gBAGjB,kBAAC,EAAD,CAAS+H,QAAQ,UACb,kBAAC,EAAD,CACInH,OAAK,EACL9C,MAAM,QACNwD,KAAK,SACLtB,QAAS,sBXpBrC,CAAEyN,KAAM,SAAU7N,KAAM,QAAS8N,UY5BZ,WAAO,IAAD,EACDvJ,oBAAS,GADR,mBACpBmM,EADoB,KACbC,EADa,KAG3B,OACI,yBAAKxQ,UAAU,QACX,yBAAKA,UAAU,cAAf,UACA,kBAAC,EAAD,CACIjC,MAAM,OACNJ,KAAK,SACLkC,KAAK,aACLI,QAAS,kBAAMuQ,GAAS,MAC5B,kBAAC,GAAD,CACI/D,UAAQ,EACRzD,QAAS,kBAAMwH,GAAS,IACxBnM,QAASkM,EACTlN,OAAQ,4CACRP,OACI,kBAAC,IAAMpB,SAAP,KACI,kBAAC,EAAD,CACI1B,UAAU,QACVjC,MAAM,YACN8B,KAAK,SACLI,QAAS,kBAAMuQ,GAAS,MAC5B,kBAAC,EAAD,CACIzS,MAAM,OACN8B,KAAK,UACLI,QAAS,kBAAMuQ,GAAS,QAGhC,mDZAhB,CAAE9C,KAAM,YAAa7N,KAAM,WAAY8N,Ua7Bf,WAAO,IAAD,EACJvJ,oBAAS,GADL,mBACvBN,EADuB,KAChB2M,EADgB,OAEMrM,oBAAS,GAFf,mBAEvBsM,EAFuB,KAEXC,EAFW,KAIxB9C,EAAO,CAAC,WAAY,cAAe,UAAW,OAAQ,SA8C5D,OACI,yBAAK7N,UAAU,QACX,yBAAKA,UAAU,cAAf,cACA,iDACA,yBAAKA,UAAU,OACX,kBAAC,EAAD,CACIA,UAAU,QACV+B,QAAS+B,EACT9B,SAAU,kBAAMyO,GAAU3M,MAC9B,kBAAC,EAAD,CACI9D,UAAU,QACV+B,QAAS+B,EACT/F,MAAM,UACNiE,SAAU,kBAAMyO,GAAU3M,MAC9B,kBAAC,EAAD,CACI9D,UAAU,QACV+B,QAAS+B,EACT/F,MAAM,OACNiE,SAAU,kBAAMyO,GAAU3M,MAC9B,kBAAC,EAAD,CACI9D,UAAU,QACV+B,QAAS+B,EACT/F,MAAM,QACNiE,SAAU,kBAAMyO,GAAU3M,MAC9B,kBAAC,EAAD,CACI9D,UAAU,QACV+B,QAAS+B,EACTpD,UAAQ,EACRsB,SAAU,kBAAMyO,GAAU3M,OAElC,qDACA,yBAAK9D,UAAU,OACX,kBAAC,EAAD,CACIA,UAAU,QACViC,MAAM,WACNlE,MAAM,UACNgE,QAAS2O,EACT1O,SAAU,kBAAM2O,GAAeD,MACnC,kBAAC,EAAD,CACIzO,MAAM,WACNlE,MAAM,OACNgE,QAAS2O,EACT1O,SAAU,kBAAM2O,GAAeD,OAEvC,mCACA,kBAAC,EAAD,CACItO,UAAQ,EACRE,QAASuL,EACTnL,MA7FE,CACV,CACIoL,SAAU,UACVC,YAAa,4BACbC,QAAS,GACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,WACVC,YAAa,yBACbC,QAAS,GACTlM,KAAM,WACNX,MAAO,IAEX,CACI2M,SAAU,UACVC,YAAa,yBACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,QACVC,YAAa,kCACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,oCAEX,CACI2M,SAAU,QACVC,YAAa,qBACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,IAEX,CACI2M,SAAU,YACVC,YAAa,sCACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,KAqDHoB,OAAO,EACPK,WAAYiL,ObtExB,CAAEH,KAAM,SAAU7N,KAAM,cAAe8N,Uc3BlB,WAAO,IAAD,EACCvJ,mBAAS,IADV,mBACpBwM,EADoB,KACZC,EADY,OAEHzM,mBAAS,IAFN,mBAEpB0M,EAFoB,KAEdC,EAFc,OAGS3M,oBAAS,GAHlB,mBAGpB4M,EAHoB,KAGRC,EAHQ,KAKrBC,EAAW,CAAC,mBAAoB,gBAAiB,WAEjDrD,EAAO,CAAC,WAAY,cAAe,UAAW,OAAQ,SA8C5D,OACI,yBAAK7N,UAAU,QACX,yBAAKA,UAAU,cAAf,eACA,8DACA,kBAAC,GAAD,CACImB,MAAO2P,EACPjR,KAAK,OACLmC,SAAU,SAACb,GAAD,OAAW4P,EAAQ5P,IAC7BiM,QAzDG,CAAC,aAAc,SAAU,cA0DhC,kBAAC,EAAD,CACIjM,MAAO2P,EACP/K,YAAY,gBACZJ,UAAQ,EACR5H,MAAM,OACNyH,OAAQ,kBAAC,EAAD,CAAM3F,KAAK,SACnBnC,MAAO,MACX,4DACA,kBAAC,GAAD,CACIyD,MAAOyP,EACP1D,UAAQ,EACRrN,KAAK,OACLmC,SAAU,SAACb,GAAD,OAAW0P,EAAU1P,IAC/BiM,QAAS8D,IACb,kBAAC,EAAD,CACI/P,MAAOyP,EACP7K,YAAY,gBACZJ,UAAQ,EACR5H,MAAM,OACN0C,SAAO,EACP+E,OAAQ,kBAAC,EAAD,CAAM3F,KAAK,SACnBnC,MAAO,MACX,yBAAKsC,UAAU,oBACX,wCACA,kBAAC,EAAD,CACIA,UAAU,QACVjC,MAAM,OACN8B,KAAK,mBACLI,QAAS,kBAAMgR,GAAeD,OAEtC,kBAAC,GAAD,CACI7P,MAAOyP,EACP1D,UAAQ,EACRrN,KAAK,OACLa,SAAUsQ,EACVhP,SAAU,SAACb,GAAD,OAAW0P,EAAU1P,IAC/BiM,QAAS8D,IACb,mCACA,kBAAC,EAAD,CACI9O,UAAQ,EACRE,QAASuL,EACTnL,MA/FE,CACV,CACIoL,SAAU,WACVC,YAAa,sBACbC,QAAS,GACTlM,KAAM,WACNX,MAAO,wBAEX,CACI2M,SAAU,OACVC,YAAa,uBACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,IAEX,CACI2M,SAAU,QACVC,YAAa,eACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,IAEX,CACI2M,SAAU,WACVC,YAAa,uBACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,WACVC,YAAa,yBACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,YACVC,YAAa,sCACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,KAuDHoB,OAAO,EACPK,WAAYiL,Od7ExB,CAAEH,KAAM,UAAW7N,KAAM,SAAU8N,Ue/Bb,WAAO,IAAD,EACFvJ,oBAAS,GADP,mBACrBN,EADqB,KACd2M,EADc,OAEArM,oBAAS,GAFT,mBAErB+M,EAFqB,KAEbC,EAFa,OAGAhN,oBAAS,GAHT,mBAGrBiN,EAHqB,KAGbC,EAHa,OAIAlN,oBAAS,GAJT,mBAIrBmN,EAJqB,KAIbC,EAJa,OAKApN,oBAAS,GALT,mBAKrBqN,EALqB,KAKbC,EALa,KAOtB7D,EAAO,CAAC,WAAY,cAAe,UAAW,OAAQ,SAwF5D,OACI,yBAAK7N,UAAU,QACX,yBAAKA,UAAU,cAAf,YACA,+CACA,yBAAKA,UAAU,OACX,kBAAC,EAAD,CAAQ8D,MAAOA,EAAO9B,SAAU,kBAAMyO,GAAU3M,MAChD,kBAAC,EAAD,CAAQA,MAAOA,EAAO/F,MAAM,UAAUiE,SAAU,kBAAMyO,GAAU3M,MAChE,kBAAC,EAAD,CAAQA,MAAOA,EAAO/F,MAAM,OAAOiE,SAAU,kBAAMyO,GAAU3M,MAC7D,kBAAC,EAAD,CAAQA,MAAOA,EAAO/F,MAAM,UAAUiE,SAAU,kBAAMyO,GAAU3M,MAChE,kBAAC,EAAD,CAAQA,MAAOA,EAAO/F,MAAM,QAAQiE,SAAU,kBAAMyO,GAAU3M,MAC9D,kBAAC,EAAD,CAAQA,MAAOuN,EAAQtT,MAAM,QAAQ2C,UAAQ,EAACsB,SAAU,kBAAMsP,GAAWD,OAG7E,8DACA,kBAAC,EAAD,CAAQtT,MAAM,OACV+F,MAAOqN,EACPzN,UAAU,MACVO,WAAW,KACXjC,SAAU,kBAAMoP,GAAWD,MAC/B,6BAAK,6BACL,kBAAC,EAAD,CAAQpT,MAAM,UACV+F,MAAOqN,EACPxN,SAAS,OACTC,cAAc,WACdI,UAAU,MACVE,eAAe,UACflC,SAAU,kBAAMoP,GAAWD,MAC/B,kDACA,yBAAKnR,UAAU,oBACX,kBAAC,EAAD,CAAQjC,MAAM,UACV+F,MAAOyN,EACP9N,SAAS,WACTzB,SAAU,kBAAMwP,GAAWD,MAC/B,kBAAC,EAAD,CAAQxT,MAAM,QACV+F,MAAO2N,EACPhO,SAAS,WACTC,UAAU,MACVO,WAAW,KACXjC,SAAU,kBAAM0P,GAAWD,MAC/B,kBAAC,EAAD,CAAQ1T,MAAM,OACV+F,MAAOyN,EACP9N,SAAS,WACTE,SAAS,OACTK,UAAU,MACVhC,SAAU,kBAAMwP,GAAWD,OAEnC,mCACA,kBAAC,EAAD,CACInP,UAAQ,EACRE,QAASuL,EACTnL,MAzIE,CACV,CACIoL,SAAU,QACVC,YAAa,0BACbC,QAAS,GACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,WACVC,YAAa,uBACbC,QAAS,GACTlM,KAAM,WACNX,MAAO,IAEX,CACI2M,SAAU,UACVC,YAAa,uBACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,WACVC,YAAa,yBACbC,QAAS,aACTlM,KAAM,SACNX,MAAO,YAEX,CACI2M,SAAU,QACVC,YAAa,gCACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,oCAEX,CACI2M,SAAU,YACVC,YAAa,sBACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,IAEX,CACI2M,SAAU,aACVC,YAAa,uBACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,IAEX,CACI2M,SAAU,WACVC,YAAa,qBACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,uCAEX,CACI2M,SAAU,YACVC,YAAa,sBACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,uCAEX,CACI2M,SAAU,gBACVC,YAAa,2BACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,oCAEX,CACI2M,SAAU,iBACVC,YAAa,4BACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,oCAEX,CACI2M,SAAU,YACVC,YAAa,uBACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,KAuDHoB,OAAO,EACPK,WAAYiL,OfnHxB,CAAEH,KAAM,QAAS7N,KAAM,OAAQ8N,UgB9BX,WACpB,IAAMgE,EAAsB,CACxB,CAAE9R,KAAM,eAAgByO,KAAM,kBAAmB/M,KAAM,UAAWuC,OAAO,GACzE,CAAEjE,KAAM,eAAgByO,KAAM,aAAc/M,KAAM,UAAWuC,OAAO,GACpE,CAAEjE,KAAM,aAAcyO,KAAM,WAAY/M,KAAM,UAAWuC,OAAO,GAChE,CAAEjE,KAAM,eAAgByO,KAAM,OAAQ/M,KAAM,UAAWuC,OAAO,IAG5D+J,EAAO,CAAC,WAAY,cAAe,UAAW,OAAQ,SAmG5D,OACI,yBAAK7N,UAAU,QACX,yBAAKA,UAAU,cAAf,SACA,yBAAKD,MAAO,CAAE6R,SAAU,MACpB,gDACA,kBAAC,EAAD,CAAMvO,OAAO,iBACT,kBAAC,EAAD,KACKsO,EAAoBnP,KAAI,SAACC,EAAMF,GAAP,OACrB,kBAAC,EAAD,CACIxB,IAAKwB,EACLE,KAAMA,EACN6E,OAAK,EACLG,UAAU,cAI1B,yCACA,kBAAC,EAAD,CAAMpE,OAAO,gBAAgBH,MAAI,GAC7B,kBAAC,EAAD,KACKyO,EAAoBnP,KAAI,SAACC,EAAMF,GAAP,OACrB,kBAAC,EAAD,CACIxB,IAAKwB,EACLE,KAAMA,EACN6E,OAAK,EACLG,UAAU,cAI1B,+CA3CJ,yBAAKzH,UAAU,OAFP,CAAC,EAAE,EAAE,GAGFwC,KAAI,SAACC,EAAMF,GAAP,OACP,kBAAC,EAAD,CACIxB,IAAKwB,EACLvC,UAAU,WACVtC,MAAO,IACP4F,IAAK,yBAAKtD,UAAU,sBAAqB,kBAAC,EAAD,CAAMH,KAAK,QAAQlC,KAAM,GAAII,MAAM,aAC5E+E,OAAQ,oBAAsBL,GAC9B,yCAAeA,QAqCvB,0DACA,kBAAC,EAAD,CAAM3B,UAAQ,EAAChB,MAAM,kBAAkB/B,MAAM,QACzC,kBAAC,EAAD,KACK4T,EAAoBnP,KAAI,SAACC,EAAMF,GAAP,OACrB,kBAAC,EAAD,CACIxB,IAAKwB,EACLE,KAAMA,EACN6E,OAAK,EACLG,UAAU,eAK9B,mCACA,kBAAC,EAAD,CACIrF,UAAQ,EACRE,QAASuL,EACTnL,MAjJE,CACV,CACIoL,SAAU,SACVC,YAAa,kBACbC,QAAS,GACTlM,KAAM,MACNX,MAAO,IAEX,CACI2M,SAAU,SACVC,YAAa,kBACbC,QAAS,GACTlM,KAAM,MACNX,MAAO,IAEX,CACI2M,SAAU,QACVC,YAAa,iBACbC,QAAS,GACTlM,KAAM,kBACNX,MAAO,wBAEX,CACI2M,SAAU,UACVC,YAAa,mBACbC,QAAS,OACTlM,KAAM,kBACNX,MAAO,IAEX,CACI2M,SAAU,MACVC,YAAa,iBACbC,QAAS,GACTlM,KAAM,kBACNX,MAAO,IAEX,CACI2M,SAAU,OACVC,YAAa,yBACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,OACVC,YAAa,gBACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,WACVC,YAAa,4BACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,QACVC,YAAa,0CACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,oCAEX,CACI2M,SAAU,QACVC,YAAa,+DACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,IAEX,CACI2M,SAAU,YACVC,YAAa,sCACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,KAsEHoB,OAAO,EACPK,WAAYiL,OhB7HxB,CAAEH,KAAM,OAAQ7N,KAAM,MAAO8N,UiBhCV,WACnB,IAAME,EAAO,CAAC,WAAY,cAAe,UAAW,OAAQ,SA0E5D,OACI,yBAAK7N,UAAU,QACX,yBAAKA,UAAU,cAAf,QACA,0CACA,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAKmB,MAAM,gBACX,kBAAC,EAAD,CAAKA,MAAM,cAAcpD,MAAM,WAC/B,kBAAC,EAAD,CAAKoD,MAAM,cAAcpD,MAAM,YAC/B,kBAAC,EAAD,CAAKoD,MAAM,cAAcpD,MAAM,SAC/B,kBAAC,EAAD,CAAKoD,MAAM,cAAcpD,MAAM,YAC/B,kBAAC,EAAD,CAAKoD,MAAM,cAAcpD,MAAM,WAEnC,yCACA,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAKoD,MAAM,cAAcV,SAAO,EAAC1C,MAAM,WACvC,kBAAC,EAAD,CAAKoD,MAAM,cAAcV,SAAO,EAACK,UAAQ,EAAC/C,MAAM,YAChD,kBAAC,EAAD,CAAKoD,MAAM,cAAcV,SAAO,EAACH,QAAM,EAACvC,MAAM,YAC9C,kBAAC,EAAD,CAAKoD,MAAM,cAAcL,UAAQ,EAAC/C,MAAM,YACxC,kBAAC,EAAD,CAAKoD,MAAM,cAAcX,QAAM,EAACzC,MAAM,aAE1C,yCACA,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAKoD,MAAM,aAAapD,MAAM,WAC9B,kBAAC,EAAD,CAAKoD,MAAM,YAAYN,OAAK,EAAC9C,MAAM,WACnC,kBAAC,EAAD,CAAKoD,MAAM,YAAYN,OAAK,EAACJ,SAAO,EAAC1C,MAAM,YAE/C,8CACA,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAKmD,SAAS,aAAaC,MAAM,gBAAgBpD,MAAM,YACvD,kBAAC,EAAD,CAAKmD,SAAS,OAAOC,MAAM,OAAON,OAAK,EAAC9C,MAAM,WAC9C,kBAAC,EAAD,CAAKmD,SAAS,UAAUC,MAAM,WAAWpD,MAAM,SAC/C,kBAAC,EAAD,CAAKmD,SAAS,UAAUC,MAAM,cAElC,mCACA,kBAAC,EAAD,CACIiB,UAAQ,EACRE,QAASuL,EACTnL,MA9GE,CACV,CACIoL,SAAU,QACVC,YAAa,YACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,IAEX,CACI2M,SAAU,SACVC,YAAa,0BACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,QACVC,YAAa,qCACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,4CAEX,CACI2M,SAAU,UACVC,YAAa,6BACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,SACVC,YAAa,sCACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,YACVC,YAAa,+BACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,QACVC,YAAa,eACbC,QAAS,GACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,WACVC,YAAa,4BACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,sDAEX,CACI2M,SAAU,YACVC,YAAa,2BACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,sDAEX,CACI2M,SAAU,YACVC,YAAa,sCACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,KA0CHoB,OAAO,EACPK,WAAYiL,OjBjFxB,CAAEH,KAAM,SAAU7N,KAAM,QAAS8N,UkB/BZ,WACrB,IAAME,EAAO,CAAC,WAAY,cAAe,UAAW,OAAQ,SADjC,EA6DDzJ,oBAAS,GA7DR,mBA6DpByN,EA7DoB,KA6DbC,EA7Da,KA+D3B,OACI,yBAAK9R,UAAU,QACX,yBAAKA,UAAU,cAAf,UACA,kBAAC,EAAD,KACI,yBAAKA,UAAU,oBACX,kBAAC,GAAD,CACIjC,MAAM,OACNoD,MAAO,IACPnB,UAAU,QACVgK,OAAQ,kBAAC,EAAD,CAAMrM,KAAM,GAAIkC,KAAK,cACjC,kBAAC,GAAD,CACI9B,MAAM,QACNoD,MAAO,GACPV,SAAO,EACPT,UAAU,QACVgK,OAAQ,kBAAC,EAAD,CAAMrM,KAAM,GAAIkC,KAAK,iBACjC,kBAAC,GAAD,CACI9B,MAAM,QACNoD,MAAO,GACPV,SAAO,EACP4D,QAASwN,EACT7R,UAAU,QACVgK,OAAQ,kBAAC,EAAD,CAAMrM,KAAM,GAAIkC,KAAK,iBACjC,kBAAC,EAAD,CAAQA,KAAK,eAAe9B,MAAM,OAAOkC,QAAS,kBAAM6R,GAAUD,QAG1E,mCACA,kBAAC,EAAD,CACIzP,UAAQ,EACRE,QAASuL,EACTnL,MA3FE,CACV,CACIoL,SAAU,QACVC,YAAa,kBACbC,QAAS,GACTlM,KAAM,kBACNX,MAAO,IAEX,CACI2M,SAAU,QACVC,YAAa,kBACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,oCAEX,CACI2M,SAAU,UACVC,YAAa,4BACbC,QAAS,GACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,SACVC,YAAa,6BACbC,QAAS,GACTlM,KAAM,MACNX,MAAO,IAEX,CACI2M,SAAU,UACVC,YAAa,sBACbC,QAAS,GACTlM,KAAM,UACNX,MAAO,iBA0DHoB,OAAO,EACPK,WAAYiL,OlB/DxB,CAAEH,KAAM,aAAc7N,KAAM,YAAa8N,UmBlChB,WAAO,IAAD,EACDvJ,oBAAS,GADR,mBACxB9C,EADwB,KACfsM,EADe,KAQzBC,EAAO,CAAC,WAAY,cAAe,UAAW,OAAQ,SAgC5D,OACI,yBAAK7N,UAAU,QACX,yBAAKA,UAAU,cAAf,aACA,yBAAKA,UAAU,SACX,kBAAC,EAAD,CAAQH,KAAK,WAAW9B,MAAM,OAAOkC,QAzC7B,WAChB2N,GAAW,GACXmE,YAAW,kBAAMnE,GAAW,KAAQ,SAyChC,kBAAC,GAAD,CAAWvJ,QAAS/C,IACpB,mCACA,kBAAC,EAAD,CACIc,UAAQ,EACRE,QAASuL,EACTnL,MA1CE,CACV,CACIoL,SAAU,UACVC,YAAa,2BACbC,QAAS,QACTlM,KAAM,UACNX,MAAO,gBAEX,CACI2M,SAAU,YACVC,YAAa,yCACbC,QAAS,kBACTlM,KAAM,MACNX,MAAO,IAEX,CACI2M,SAAU,kBACVC,YAAa,iCACbC,QAAS,cACTlM,KAAM,SACNX,MAAO,IAEX,CACI2M,SAAU,QACVC,YAAa,uCACbC,QAAS,GACTlM,KAAM,SACNX,MAAO,KAgBHoB,OAAO,EACPK,WAAYiL,QCxDfmE,GAAS,SAACvU,GACnB,OACI,yBAAKuC,UAAU,UACX,yBAAKA,UAAU,eACVvC,EAAMwU,QACP,yBAAKjS,UAAU,cAAckS,IAAKzU,EAAMwU,QAASE,IAAI,eAAiB,GACtE,yBAAKnS,UAAU,gBAAgBvC,EAAMqC,QAEzC,yBAAKE,UAAU,gBACVvC,EAAM2U,aCLVC,GAAU,SAAC5U,GAGpB,OACI,yBAAKuC,UAAU,WACX,kBAAC,GAAD,CAAQF,MAAO,yBAAKE,UAAU,oBACtB,kBAAC,EAAD,CAAQA,UAAU,mBAAmBuB,KAAK,OAAOX,MAAI,EAACX,QAAS,kBAAMxC,EAAM6U,oBAC3E,0BAAMtS,UAAU,cAAc+N,OAElCqE,UACA,yBAAKpS,UAAU,oBACX,yBAAKA,UAAU,wBAAuB,oCAAUuS,OAChD,kBAAC,EAAD,CAASvK,QAAQ,oBAAoBvE,SAAS,gBAC1C,kBAAC,EAAD,CACI7C,MAAI,EACJW,KAAK,SACLtB,QAAS,SAAAC,GACTA,EAAE4I,iBACFJ,OAAOmB,KAjBhB,iDAiB6B,iBAIpC,yBAAK7J,UAAU,iBACVvC,EAAM8F,YCvBViP,GAAgB,SAAC/U,GAC1B,IAAMgV,EAAUC,cAMhB,OACI,6BACI,kBAAC,EAAD,CACI7J,OAAQpL,EAAMoL,OACdL,YAAU,EACV5H,MAAI,EACJoI,QAAS,kBAAMvL,EAAMuL,WACrBC,gBAAc,EACd5F,OAAQ,kBAAC,EAAD,CAAMxD,KAAK,QAAQ9B,MAAM,QAAQJ,KAAM,MAC/C,kBAAC,EAAD,CAAMiD,MAAI,GACLnD,EAAMiF,MAAMF,KAAI,SAACC,EAAMF,GAAP,OACb,kBAAC,EAAD,CACIxB,IAAKwB,EACL4E,OAAK,EACLE,aAAc,SAAA9B,GAAO,OAAIA,EAAQmI,OAAShF,OAAOiK,SAASC,UAC1D1L,YAAa,kBAnBb,SAACzE,GACrBgQ,EAAQ3G,KAAKrJ,EAAKiL,MAkBqBmF,CAAgBpQ,IACnCgF,UAAU,OACVH,OAAK,EACL7E,KAAMA,WC4ClCqQ,IAASC,OAAO,mBAzCJ,WAAO,IAAD,EACc3O,oBAAS,GADvB,mBACPyE,EADO,KACCyG,EADD,KAOd,OAJA7G,qBAAU,WACNuK,SAASlT,MAAQiO,OAClB,IAGC,yBAAK/N,UAAU,OACX,kBAAC,IAAD,KACI,kBAAC,GAAD,CACI6I,OAAQA,EACRG,QAAS,kBAAMsG,GAAU,IACzB5M,MAAO+K,KACX,kBAAC,IAAD,KACKA,GAAOjL,KAAI,WAAoBD,GAApB,IAAEmL,EAAF,EAAEA,KAAMC,EAAR,EAAQA,UAAR,OACR,kBAAC,IAAD,CAAO5M,IAAKwB,EAAO0Q,OAAK,EAACvF,KAAMA,IAC1B,gBAAGwF,EAAH,EAAGA,MAAH,OACG,kBAACvO,EAAA,EAAD,CACAC,GAAa,MAATsO,EACJrO,QAAS,IACTC,WAAW,OACXC,eAAa,GACb,yBAAK/E,UAAU,QACX,kBAAC,GAAD,CAASsS,eAAgB,kBAAMhD,GAAWzG,KACtC,kBAAC8E,EAAD,eAOpB,kBAAC,IAAD,CAAOD,KAAK,KACR,kBAAC,IAAD,CAAUyF,GAAG,YAQrB,MAASH,SAASI,cAAc,sB","file":"static/js/main.chunk.js","sourcesContent":["import React from 'react';\n\nexport const ChevronDoubleLeft = (props) => {\n    return (\n        <svg width={props.size ? props.size : 24} height={props.size ? props.size : 24} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : '#4d4d4d'}\n                d=\"M18.41,7.41L17,6L11,12L17,18L18.41,16.59L13.83,12L18.41,7.41M12.41,7.41L11,6L5,12L11,18L12.41,16.59L7.83,12L12.41,7.41Z\" />\n        </svg>\n    )\n}\n\nexport const ChevronDoubleRight = (props) => {\n    return (\n        <svg width={props.size ? props.size : 24} height={props.size ? props.size : 24} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : '#4d4d4d'} d=\"M5.59,7.41L7,6L13,12L7,18L5.59,16.59L10.17,12L5.59,7.41M11.59,7.41L13,6L19,12L13,18L11.59,16.59L16.17,12L11.59,7.41Z\" />\n        </svg>\n    )\n}\n\nexport const ChevronBack = (props) => {\n    return (\n        <svg width={props.size ? props.size : 24} height={props.size ? props.size : 24} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : '#4d4d4d'} d=\"M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z\" />\n        </svg>\n    )\n}\n\nexport const ChevronNext = (props) => {\n    return (\n        <svg width={props.size ? props.size : 24} height={props.size ? props.size : 24} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : '#4D4D4D'} d=\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\" />\n        </svg>\n    )\n}\n\nexport const ChevronDown = (props) => {\n    return (\n        <svg width={props.size ? props.size : 24} height={props.size ? props.size : 24} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : '#4D4D4D'} d=\"M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z\" />\n        </svg>\n    )\n}\n\nexport const Delete = (props) => {\n    return (\n        <svg width={props.size ? props.size : 24} height={props.size ? props.size : 24} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : '#4d4d4d'} d=\"M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z\" />\n        </svg>\n    )\n}\n\nexport const Edit = (props) => {\n    return (\n        <svg width={props.size ? props.size : 24} height={props.size ? props.size : 24} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : '#4d4d4d'} d=\"M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z\" />\n        </svg>\n    )\n}\n\nexport const Close = (props) => {\n    return (\n        <svg width={props.size ? props.size : 24} height={props.size ? props.size : 24} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : '#4d4d4d'} d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\n        </svg>\n    )\n}\n\nexport const Code = (props) => {\n    return (\n        <svg width={props.size ? props.size : 24} height={props.size ? props.size : 24} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : '#4d4d4d'} d=\"M12.89,3L14.85,3.4L11.11,21L9.15,20.6L12.89,3M19.59,12L16,8.41V5.58L22.42,12L16,18.41V15.58L19.59,12M1.58,12L8,5.58V8.41L4.41,12L8,15.58V18.41L1.58,12Z\" />\n        </svg>\n    )\n}\n\nexport const Github = (props) => {\n    return (\n        <svg width={props.size ? props.size : 24} height={props.size ? props.size : 24} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : '#4d4d4d'} \n            d=\"M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z\" />\n        </svg>\n    )\n}\n\nexport const Person = (props) => {\n    return (\n        <svg width={props.size ? props.size : 24} height={props.size ? props.size : 24} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : '#4d4d4d'} d=\"M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z\" />\n        </svg>\n    )\n}\n\nexport const Account = (props) => {\n    return (\n        <svg width={props.size ? props.size : 24} height={props.size ? props.size : 24} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : '#4d4d4d'} d=\"M12,19.2C9.5,19.2 7.29,17.92 6,16C6.03,14 10,12.9 12,12.9C14,12.9 17.97,14 18,16C16.71,17.92 14.5,19.2 12,19.2M12,5A3,3 0 0,1 15,8A3,3 0 0,1 12,11A3,3 0 0,1 9,8A3,3 0 0,1 12,5M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12C22,6.47 17.5,2 12,2Z\" />\n        </svg>\n    )\n}\n\nexport const ShieldAccount = (props) => {\n    return (\n        <svg width={props.size ? props.size : 24} height={props.size ? props.size : 24} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : '#4d4d4d'} d=\"M12,1L3,5V11C3,16.55 6.84,21.74 12,23C17.16,21.74 21,16.55 21,11V5L12,1M12,5A3,3 0 0,1 15,8A3,3 0 0,1 12,11A3,3 0 0,1 9,8A3,3 0 0,1 12,5M17.13,17C15.92,18.85 14.11,20.24 12,20.92C9.89,20.24 8.08,18.85 6.87,17C6.53,16.5 6.24,16 6,15.47C6,13.82 8.71,12.47 12,12.47C15.29,12.47 18,13.79 18,15.47C17.76,16 17.47,16.5 17.13,17Z\" />\n        </svg>\n    )\n}\n\nexport const Search = (props) => {\n    return (\n        <svg width={props.size ? props.size : 24} height={props.size ? props.size : 24} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : '#4d4d4d'} d=\"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z\" />\n        </svg>\n    )\n}\n\nexport const Home = (props) => {\n    return (\n        <svg width={props.size ? props.size : 24} height={props.size ? props.size : 24} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : '#4d4d4d'} d=\"M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z\" />\n        </svg>\n    )\n}\n\nexport const Chip = (props) => {\n    return (\n        <svg width={props.size ? props.size : 24} height={props.size ? props.size : 24} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : '#4d4d4d'} d=\"M6,4H18V5H21V7H18V9H21V11H18V13H21V15H18V17H21V19H18V20H6V19H3V17H6V15H3V13H6V11H3V9H6V7H3V5H6V4M11,15V18H12V15H11M13,15V18H14V15H13M15,15V18H16V15H15Z\" />\n        </svg>\n    )\n}\n\nexport const Empty = (props) => {\n    return (\n        <svg viewBox=\"0 0 512 512\" \n            width={props.size ? props.size : 24} \n            height={props.size ? props.size : 24}>\n        <g>\n            <g>\n                <path fill={props.color ? props.color : '#4D4D4D'} d=\"M510.417,201.092l-48.2-96.4c-2.541-5.082-7.735-8.292-13.417-8.292H63.2c-5.682,0-10.875,3.21-13.417,8.292l-48.2,96.4\n                    C0.542,203.175,0,205.472,0,207.8v192.8c0,8.284,6.716,15,15,15h482c8.284,0,15-6.716,15-15V207.8\n                    C512,205.472,511.458,203.175,510.417,201.092z M72.471,126.4H439.53l33.2,66.4H352.4c-8.284,0-15,6.716-15,15\n                    c0,44.884-36.516,81.399-81.4,81.399c-44.884,0-81.4-36.516-81.4-81.399c0-8.284-6.716-15-15-15H39.271L72.471,126.4z\n                    M482,385.601H30V385.6V222.8h115.605c7.351,54.356,54.056,96.4,110.395,96.4s103.044-42.044,110.395-96.399H482V385.601z\"/>\n            </g>\n        </g>\n        </svg>\n    )\n}\n\nexport const Sun = (props) => {\n    return (\n        <svg width={props.size ? props.size : 24} height={props.size ? props.size : 24} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : '#4D4D4D'}\n                d=\"M3.55,18.54L4.96,19.95L6.76,18.16L5.34,16.74M11,22.45C11.32,22.45 13,22.45 13,22.45V19.5H11M12,5.5A6,6 0 0,0 6,11.5A6,6 0 0,0 12,17.5A6,6 0 0,0 18,11.5C18,8.18 15.31,5.5 12,5.5M20,12.5H23V10.5H20M17.24,18.16L19.04,19.95L20.45,18.54L18.66,16.74M20.45,4.46L19.04,3.05L17.24,4.84L18.66,6.26M13,0.55H11V3.5H13M4,10.5H1V12.5H4M6.76,4.84L4.96,3.05L3.55,4.46L5.34,6.26L6.76,4.84Z\" />\n        </svg>\n    )\n}\n\nexport const Moon = (props) => {\n    return (\n        <svg width={props.size ? props.size : 24} height={props.size ? props.size : 24} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : '#4D4D4D'} \n                d=\"M2 12A10 10 0 0 0 15 21.54A10 10 0 0 1 15 2.46A10 10 0 0 0 2 12Z\" />\n        </svg>\n    )\n}\n\nexport const Star = (props) => {\n    return (\n        <svg width={props.size ? props.size : 24} height={props.size ? props.size : 24} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : '#4D4D4D'} d=\"M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z\" />\n        </svg>\n    )\n}\n\nexport const StarOutline = (props) => {\n    return (\n        <svg width={props.size ? props.size : 24} height={props.size ? props.size : 24} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : '#4D4D4D'} d=\"M12,15.39L8.24,17.66L9.23,13.38L5.91,10.5L10.29,10.13L12,6.09L13.71,10.13L18.09,10.5L14.77,13.38L15.76,17.66M22,9.24L14.81,8.63L12,2L9.19,8.63L2,9.24L7.45,13.97L5.82,21L12,17.27L18.18,21L16.54,13.97L22,9.24Z\" />\n        </svg>\n    )\n}\n\nexport const Smartphone = (props) => {\n    return (\n        <svg width={props.size ? props.size : 24} height={props.size ? props.size : 24} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : '#4D4D4D'} d=\"M17,19H7V5H17M17,1H7C5.89,1 5,1.89 5,3V21A2,2 0 0,0 7,23H17A2,2 0 0,0 19,21V3C19,1.89 18.1,1 17,1Z\" />\n        </svg>\n    )\n}\n\nexport const Hammer = (props) => {\n    return (\n        <svg width={props.size ? props.size : 24} height={props.size ? props.size : 24} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : '#4D4D4D'} d=\"M2 19.63L13.43 8.2L12.72 7.5L14.14 6.07L12 3.89C13.2 2.7 15.09 2.7 16.27 3.89L19.87 7.5L18.45 8.91H21.29L22 9.62L18.45 13.21L17.74 12.5V9.62L16.27 11.04L15.56 10.33L4.13 21.76L2 19.63Z\" />\n        </svg>\n    )\n}\n\nexport const City = (props) => {\n    return (\n        <svg width={props.size ? props.size : 24} height={props.size ? props.size : 24} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : '#4D4D4D'} d=\"M19,15H17V13H19M19,19H17V17H19M13,7H11V5H13M13,11H11V9H13M13,15H11V13H13M13,19H11V17H13M7,11H5V9H7M7,15H5V13H7M7,19H5V17H7M15,11V5L12,2L9,5V7H3V21H21V11H15Z\" />\n        </svg>\n    )\n}\n\nexport const Download = (props) => {\n    return (\n        <svg width={props.size ? props.size : 24} height={props.size ? props.size : 24} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : '#4D4D4D'} d=\"M5,20H19V18H5M19,9H15V3H9V9H5L12,16L19,9Z\" />\n        </svg>\n    )\n}\n\nexport const Menu = (props) => {\n    return (\n        <svg width={props.size ? props.size : 24} height={props.size ? props.size : 24} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : '#4D4D4D'} d=\"M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z\" />\n        </svg>\n    )\n}\n\nexport const Loading = (props) => {\n    return (\n        <svg width={props.size ? props.size : 24} height={props.size ? props.size : 24} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : '#4D4D4D'} d=\"M12,4V2A10,10 0 0,0 2,12H4A8,8 0 0,1 12,4Z\" />\n        </svg>\n    )\n}\n\nexport const ReactLogo = (props) => {\n    return (\n        <svg width={props.size ? props.size : 24} height={props.size ? props.size : 24} viewBox=\"0 0 24 24\">\n            <path fill={props.color ? props.color : '#4D4D4D'} d=\"M12,10.11C13.03,10.11 13.87,10.95 13.87,12C13.87,13 13.03,13.85 12,13.85C10.97,13.85 10.13,13 10.13,12C10.13,10.95 10.97,10.11 12,10.11M7.37,20C8,20.38 9.38,19.8 10.97,18.3C10.45,17.71 9.94,17.07 9.46,16.4C8.64,16.32 7.83,16.2 7.06,16.04C6.55,18.18 6.74,19.65 7.37,20M8.08,14.26L7.79,13.75C7.68,14.04 7.57,14.33 7.5,14.61C7.77,14.67 8.07,14.72 8.38,14.77C8.28,14.6 8.18,14.43 8.08,14.26M14.62,13.5L15.43,12L14.62,10.5C14.32,9.97 14,9.5 13.71,9.03C13.17,9 12.6,9 12,9C11.4,9 10.83,9 10.29,9.03C10,9.5 9.68,9.97 9.38,10.5L8.57,12L9.38,13.5C9.68,14.03 10,14.5 10.29,14.97C10.83,15 11.4,15 12,15C12.6,15 13.17,15 13.71,14.97C14,14.5 14.32,14.03 14.62,13.5M12,6.78C11.81,7 11.61,7.23 11.41,7.5C11.61,7.5 11.8,7.5 12,7.5C12.2,7.5 12.39,7.5 12.59,7.5C12.39,7.23 12.19,7 12,6.78M12,17.22C12.19,17 12.39,16.77 12.59,16.5C12.39,16.5 12.2,16.5 12,16.5C11.8,16.5 11.61,16.5 11.41,16.5C11.61,16.77 11.81,17 12,17.22M16.62,4C16,3.62 14.62,4.2 13.03,5.7C13.55,6.29 14.06,6.93 14.54,7.6C15.36,7.68 16.17,7.8 16.94,7.96C17.45,5.82 17.26,4.35 16.62,4M15.92,9.74L16.21,10.25C16.32,9.96 16.43,9.67 16.5,9.39C16.23,9.33 15.93,9.28 15.62,9.23C15.72,9.4 15.82,9.57 15.92,9.74M17.37,2.69C18.84,3.53 19,5.74 18.38,8.32C20.92,9.07 22.75,10.31 22.75,12C22.75,13.69 20.92,14.93 18.38,15.68C19,18.26 18.84,20.47 17.37,21.31C15.91,22.15 13.92,21.19 12,19.36C10.08,21.19 8.09,22.15 6.62,21.31C5.16,20.47 5,18.26 5.62,15.68C3.08,14.93 1.25,13.69 1.25,12C1.25,10.31 3.08,9.07 5.62,8.32C5,5.74 5.16,3.53 6.62,2.69C8.09,1.85 10.08,2.81 12,4.64C13.92,2.81 15.91,1.85 17.37,2.69M17.08,12C17.42,12.75 17.72,13.5 17.97,14.26C20.07,13.63 21.25,12.73 21.25,12C21.25,11.27 20.07,10.37 17.97,9.74C17.72,10.5 17.42,11.25 17.08,12M6.92,12C6.58,11.25 6.28,10.5 6.03,9.74C3.93,10.37 2.75,11.27 2.75,12C2.75,12.73 3.93,13.63 6.03,14.26C6.28,13.5 6.58,12.75 6.92,12M15.92,14.26C15.82,14.43 15.72,14.6 15.62,14.77C15.93,14.72 16.23,14.67 16.5,14.61C16.43,14.33 16.32,14.04 16.21,13.75L15.92,14.26M13.03,18.3C14.62,19.8 16,20.38 16.62,20C17.26,19.65 17.45,18.18 16.94,16.04C16.17,16.2 15.36,16.32 14.54,16.4C14.06,17.07 13.55,17.71 13.03,18.3M8.08,9.74C8.18,9.57 8.28,9.4 8.38,9.23C8.07,9.28 7.77,9.33 7.5,9.39C7.57,9.67 7.68,9.96 7.79,10.25L8.08,9.74M10.97,5.7C9.38,4.2 8,3.62 7.37,4C6.74,4.35 6.55,5.82 7.06,7.96C7.83,7.8 8.64,7.68 9.46,7.6C9.94,6.93 10.45,6.29 10.97,5.7Z\" />\n        </svg>\n    )\n}","import React from 'react';\nimport { \n    Delete,\n    Search,\n    Home,\n    Edit,\n    Close,\n    Github,\n    ChevronDoubleRight,\n    ChevronDoubleLeft,\n    ChevronDown,\n    ChevronNext,\n    Code,\n    Chip,\n    Account,\n    Sun,\n    Moon,\n    Star,\n    StarOutline,\n    Smartphone,\n    Hammer,\n    City,\n    ChevronBack,\n    Empty,\n    Download,\n    Menu,\n    Person,\n    Loading,\n    ShieldAccount,\n    ReactLogo\n} from '../icons/index';\n\nexport const Icon = (props) => {\n\n    const Icon = () => {\n        switch (props.name) {\n            case 'delete':\n                return <Delete size={props.size} color={props.color}/>;\n            case 'search':\n                return <Search size={props.size} color={props.color}/>;\n            case 'home':\n                return <Home size={props.size} color={props.color}/>;\n            case 'edit':\n                return <Edit size={props.size} color={props.color}/>;\n            case 'github':\n                return <Github size={props.size} color={props.color}/>;\n            case 'close':\n                return <Close size={props.size} color={props.color}/>;\n            case 'chevron-double-right':\n                return <ChevronDoubleRight size={props.size} color={props.color}/>;\n            case 'chevron-double-left':\n                return <ChevronDoubleLeft size={props.size} color={props.color}/>; \n            case 'code':\n                return <Code size={props.size} color={props.color}/>; \n            case 'chip':\n                return <Chip size={props.size} color={props.color}/>; \n            case 'account':\n                return <Account size={props.size} color={props.color}/>; \n            case 'person':\n                return <Person size={props.size} color={props.color}/>; \n            case 'chevron-down':\n                return <ChevronDown size={props.size} color={props.color}/>; \n            case 'chevron-next':\n                return <ChevronNext size={props.size} color={props.color}/>;\n            case 'chevron-back':\n                return <ChevronBack size={props.size} color={props.color}/>;    \n            case 'sun':\n                return <Sun size={props.size} color={props.color}/>;    \n            case 'moon':\n                return <Moon size={props.size} color={props.color}/>; \n            case 'star':\n                return <Star size={props.size} color={props.color}/>;    \n            case 'star-outline':\n                return <StarOutline size={props.size} color={props.color}/>;   \n            case 'smartphone':\n                return <Smartphone size={props.size} color={props.color}/>; \n            case 'hammer':\n                return <Hammer size={props.size} color={props.color}/>;  \n            case 'city':\n                return <City size={props.size} color={props.color}/>;   \n            case 'empty':\n                return <Empty size={props.size} color={props.color}/>;\n            case 'download':\n                return <Download size={props.size} color={props.color}/>;  \n            case 'menu':\n                return <Menu size={props.size} color={props.color}/>;\n            case 'loading':\n                return <Loading size={props.size} color={props.color}/>;\n            case 'shield-account':\n                return <ShieldAccount size={props.size} color={props.color}/>;    \n            case 'react':\n                return <ReactLogo size={props.size} color={props.color}/>;\n            default:\n                return '';\n        }\n    }\n\n    const iconClass = () => {\n        if (props.className) {\n            return `icon ${props.className}`\n        } else {\n            return 'icon'\n        }\n    }\n\n    return (\n        <i title={props.title}\n            style={{ width: props.size ? props.size : 24, height: props.size ? props.size : 24 }}\n            className={iconClass()} \n            onClick={(e) => props.onClick ? props.onClick(e) : {}}>\n            <Icon/>\n        </i>\n    )\n}\n","import React from 'react';\nimport { Icon } from './Icon';\n\nexport const Tag = (props) => {\n\n    const tagClass = () => {\n        let result = '';\n        let className = {\n            btn: 'tag',\n            lifted: props.lifted ? 'lifted' : '',\n            uppercase: props.uppercase ? 'uppercase' : '',\n            smooth: props.smooth && !props.rounded ? 'smooth' : '',\n            rounded: props.rounded && !props.smooth ? 'rounded' : '',\n            color: props.color && !props.disabled && !props.light && !props.dark ? props.color : '',\n            small: props.small ? 'small' : '',\n            outlined: props.outlined ? 'outlined' : '',\n            className: props.className ? props.className : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    return (\n        <div className={tagClass()}>\n            {props.iconLeft ? <Icon name={props.iconLeft}/> : ''}\n            {props.value}\n            {props.iconRight ? <Icon name={props.iconRight}/> : ''}\n        </div>\n    )\n}\n","import React from 'react';\nimport { Icon } from '../Icon';\n\nexport const Button = (props) => {\n    const btnClass = () => {\n        let result = '';\n        let className = {\n            btn: 'btn',\n            lifted: props.lifted ? 'lifted' : '',\n            loading: props.loading ? 'loading' : '',\n            uppercase: props.uppercase ? 'uppercase' : '',\n            smooth: props.smooth && !props.rounded ? 'smooth' : '',\n            rounded: props.rounded && !props.smooth ? 'rounded' : '',\n            color: props.color && !props.disabled && !props.loading && !props.light && !props.dark ? props.color : '',\n            light: props.light && !props.dark ? 'light' : '',\n            dark: props.dark && !props.light ? 'dark' : '',\n            icon: props.icon && !props.name ? 'icon' : '',\n            small: props.small ? 'small' : '',\n            disabled: props.disabled || props.loading ? 'disabled' : '',\n            size: props.size ? props.size : '',\n            block: props.block ? 'block' : '',\n            outlined: props.outlined ? 'outlined' : '',\n            className: props.className ? props.className : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    const setMargin = () => {\n        if (props.icon && !props.iconLeft) return 'mr-5';\n        else if (props.icon && props.iconLeft) return 'ml-5';\n        else return '';\n    }\n\n    return (\n        <button \n            disabled={props.disabled || props.loading}\n            className={btnClass()} \n            onClick={(e) => props.onClick ? props.onClick(e) : {}}>\n            {props.loading ?\n                <Icon name=\"loading\" color=\"gray\"/> :\n                <React.Fragment>\n                    {props.icon && props.iconLeft ? <Icon size={20} name={props.icon}/> : ''}\n                    {props.name ? <span className={setMargin()}>{props.name}</span> : ''}\n                    {props.icon && !props.iconLeft ? <Icon size={20} name={props.icon}/> : ''}\n                </React.Fragment>\n            }\n            \n        </button>\n    )\n}\n","import React from 'react';\n\nexport const Checkbox = (props) => {\n\n    const checkboxClass = () => {\n        let result = '';\n        let className = {\n            checkbox: 'checkbox',\n            color: props.color ? props.color : '',\n            disabled: props.disabled ? 'disabled' : ''\n        }\n\n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    const checkboxLabelClass = () => {\n        let result = '';\n        let className = {\n            checkbox: 'checkbox-label',\n            color: props.color ? props.color : '', \n            className: props.className ? props.className : '',\n            disabled: props.disabled ? 'disabled' : ''\n        }\n\n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    return (\n        <div className=\"checkbox-wrapper\">\n            <label className={checkboxClass()}>\n                <input\n                    type=\"checkbox\"\n                    checked={props.checked ? props.checked : false}\n                    disabled={props.disabled ? props.disabled : false}\n                    onChange={(e) => props.onChange(e)}/>\n                <span></span>\n            </label>\n            {props.label ? <div className={checkboxLabelClass()} \n                    onClick={() => props.onChange()}>{props.label}</div> : ''}\n        </div>\n    )\n}\n","import React from 'react';\nimport { Empty } from '../icons/index';\nimport { Checkbox } from './Checkbox';\n\n\nexport const Table = (props) => {\n\n    const headers = () => {\n        if (props.controls && !props.checkbox) {\n            return [...props.headers, '']\n        } else if (props.checkbox && !props.controls) {\n            return [<Checkbox/>, ...props.headers]\n        } else if (props.checkbox && props.controls) {\n            return [<Checkbox/>, ...props.headers, '']\n        } else if (props.index && !props.checkbox && !props.controls) {\n            return ['#', ...props.headers]\n        } else {\n            return props.headers\n        }\n    }\n\n    return (\n        <div className={props.bordered ? 'table-container bordered' : 'table-container'}>\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        {headers().map((item, index) => <th key={index}>{item}</th>)}\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.items.map((item, index) => \n                        <tr key={index} className={props.noHover ? 'no-hover' : ''}>\n                            {props.checkbox ? <td>\n                                <Checkbox/>\n                            </td> : <React.Fragment/>}\n                            {props.index ? <td>{index + 1}</td> : <React.Fragment/>}\n                            {props.itemTitles.map((title, iter) => \n                                <td key={iter}>{item[title]}</td>\n                            )}\n                            {props.controls ? <td>\n                                {props.controls}\n                            </td> : <React.Fragment/>}\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n            {props.footer ? <div className=\"table-footer\">{props.footer}</div> : ''}\n            {props.items.length === 0 ? <div className=\"table-empty\"><Empty/></div> : ''}\n        </div>\n    )\n}\n","import React from 'react';\n\nexport const Card = (props) => {\n    const cardClass = () => {\n        let result = '';\n        let className = {\n            card: 'card',\n            flat: props.flat ? 'flat' : '',\n            dark: props.dark ? 'dark' : '',\n            outlined: props.outlined && !props.dark ? 'outlined' : '',\n            color: props.color && !props.dark ? props.color : '',\n            className: props.className ? props.className : ''\n        }\n\n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    return (\n        <div className={cardClass()} \n            style={{ width: props.width ? props.width : '', minWidth: props.minWidth ? props.minWidth : '' }}>\n            {props.title && props.outlined && !props.dark ? <div className=\"card-title\">{props.title}</div> : ''}\n            {props.header ? <div className=\"card-header\">{props.header}</div> : ''}\n            {props.img ? props.img : ''}\n            {props.children}\n            {props.footer ? <div className=\"card-footer\">{props.footer}</div> : ''}\n        </div>\n    )\n}\n","import React from 'react';\nimport { Icon } from './Icon';\n\nexport const Switch = (props) => {\n    const switchClass = () => {\n        let result = '';\n        let className = {\n            btn: 'switch',\n            active: props.check ? 'active' : 'disactive',\n            disabled: props.disabled ? 'disabled' : '',\n            color: props.color ? props.color : '',\n            className: props.className ? props.className : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    return (\n        <div className={props.position === 'vertical' ? 'switch-container vertical' : 'switch-container'}>\n            {props.leftLabel && !props.leftIcon ? <div className=\"switch-left-label\">{props.leftLabel}</div> : ''}\n            {props.leftIcon && !props.leftLabel ? <Icon name={props.leftIcon} color={props.leftIconColor}/> : ''}\n            <div className={switchClass()} \n                onClick={() => !props.disabled ? props.onChange() : {}}>\n                <span></span>\n            </div>\n            {props.rightIcon && !props.rightLabel ? <Icon name={props.rightIcon} color={props.rightIconColor}/> : ''}\n            {props.rightLabel && !props.rightIcon ? <div className=\"switch-right-label\">{props.rightLabel}</div> : ''}\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nexport const Dropdown = (props) => {\n    const [visible, setVisible] = useState(false);\n\n    const menuClass = () => {\n        let result = '';\n        let className = {\n            name: 'dropdown-container',\n            className: props.className ? props.className : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    return (\n        <div className={menuClass()} \n            tabIndex={-1}\n            onBlur={() => setVisible(false)}>\n            <div onClick={() => setVisible(true)}>{props.trigger}</div>\n            <CSSTransition\n                in={visible}\n                timeout={300}\n                classNames=\"dropdown\"\n                unmountOnExit>\n                <div className=\"dropdown\" \n                    style={{ width: props.width ? props.width : '', minWidth: props.minWidth ? props.minWidth : ''}}>\n                    <div onClick={() => setVisible(false)}>{props.content}</div>\n                </div>\n            </CSSTransition>\n        </div>\n    )\n}\n","import React, { useRef, useState, createRef } from 'react';\nimport { Icon } from './Icon';\nimport { CSSTransition } from 'react-transition-group';\n\nexport const InputField = (props) => {\n    const input = useRef(null);\n    const [focus, setFocus] = useState(false);\n\n    const inputFieldClass = () => {\n        let result = '';\n        let className = {\n            input: 'input-field',\n            size: props.size ? props.size : '',\n            lifted: props.lifted ? 'lifted' : '',\n            uppercase: props.uppercase ? 'uppercase' : '',\n            smooth: props.smooth && !props.rounded ? 'smooth' : '',\n            rounded: props.rounded ? 'rounded' : '',\n            color: props.color && !props.disabled && !props.light && !props.dark ? props.color : '',\n            light: props.light && !props.dark ? 'light' : '',\n            dark: props.dark && !props.light ? 'dark' : '',\n            disabled: props.disabled ? 'disabled' : '',\n            className: props.className ? props.className : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    const handleFocus = (e) => {\n        if (props.onFocus) props.onFocus(e)\n        setFocus(true)\n    }\n\n    const handleBlur = (e) => {\n        if (props.onBlur) props.onBlur(e)\n        setFocus(false)\n    }\n\n    return (\n        <div className={inputFieldClass()} style={{ width: props.width ? props.width : ''}}>\n            {props.label ? \n            <label className={focus ? 'active' : ''} onClick={() => input.current.focus()}>{props.label}</label> \n            : ''}\n            <div className={focus ? 'input-container focus' : 'input-container'}>\n                {props.prefix ? props.prefix : ''}\n                <input\n                    onFocus={handleFocus}\n                    onBlur={handleBlur}\n                    ref={input}\n                    readOnly={props.readOnly || !props.onChange ? true : false}\n                    disabled={props.disabled}\n                    required={props.required}\n                    autoComplete={props.autoComplete}\n                    value={props.value}\n                    onKeyUp={props.onKeyUp}\n                    placeholder={props.placeholder} \n                    onChange={props.onChange}\n                    type={props.type}/>\n                {props.value && props.clearable ? <i onClick={() => {props.onClear()}}><Icon name=\"close\" size={20}/></i> : ''}\n                {props.suffix ? props.suffix : ''}\n            </div>\n            {props.hint ? <div className=\"input-field__hint\">{props.hint}</div> : ''}\n        </div>\n    )\n}\n\nexport const TextareaField = (props) => {\n    const inputFieldClass = () => {\n        let result = `input-field ${props.medium ? 'medium' : ''} ${props.large ? 'large' : ''}`\n        return result.trim()\n    }\n\n    const inputContainerClass = () => {\n        let result = `input-container ${props.color ? props.color : ''}`\n        return result.trim()\n    }\n\n    return (\n        <div className={inputFieldClass()} style={{ width: props.width ? props.width : ''}}>\n            {props.label ? <label>{props.label}</label> : ''}\n            <div className={inputContainerClass()}>\n                <textarea\n                    rows={props.rows}\n                    required={props.required}\n                    autoComplete={props.autoComplete}\n                    value={props.value}\n                    onKeyUp={props.onKeyUp}\n                    placeholder={props.placeholder} \n                    onChange={props.onChange}\n                    type={props.type}/>\n                <i onClick={() => {\n                    console.log('clicked')\n                    props.onClear()\n                }}><Icon name=\"close\"/></i>\n            </div>\n        </div>\n    )\n}\n\nexport const Uploader = (props) => {\n    const inputFile = useRef();\n    const [focus, setFocus] = useState(false);\n\n    const inputFieldClass = () => {\n        let result = '';\n        let className = {\n            input: 'input-uploader',\n            className: props.className ? props.className : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    const inputContainer = () => {\n        let result = ''\n        let className = {\n            name: 'input-uploader__container',\n            size: props.size ? props.size : '',\n            color: props.color && !props.disabled && !props.light && !props.dark ? props.color : '',\n            light: props.light && !props.dark ? 'light' : '',\n            dark: props.dark && !props.light ? 'dark' : '',\n            lifted: props.lifted ? 'lifted' : '',\n            smooth: props.smooth && !props.rounded ? 'smooth' : '',\n            rounded: props.rounded ? 'rounded' : '',\n            disabled: props.disabled ? 'disabled' : ''\n        }\n\n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    const handleFocus = (e) => {\n        if (props.onFocus) props.onFocus(e)\n        setFocus(true)\n    }\n\n    const handleBlur = (e) => {\n        if (props.onBlur) props.onBlur(e)\n        setFocus(false)\n    }\n\n    return (\n        <div className={inputFieldClass()} style={{ width: props.width ? props.width : ''}}>\n            <div className={inputContainer()}>\n                <Icon name=\"download\" size={20}/>\n                {props.label ? <label onClick={() => inputFile.current.focus()}>{props.label}</label> : ''}\n                <input\n                    onFocus={handleFocus}\n                    onBlur={handleBlur}\n                    ref={inputFile}\n                    multiple={props.multiple ? true : false}\n                    accept={props.accept ? props.accept : undefined}\n                    title={props.title}\n                    disabled={props.disabled}\n                    required={props.required}\n                    onChange={ e => props.onChange([...e.target.files])}\n                    type=\"file\"/>\n                {props.value && props.value.length > 0 ? <span>{props.value.length}</span> : \"\"}\n            </div>\n            {props.value && props.value.length > 0 ? \n                <div className={props.rounded ? 'input-uploader__items rounded' : 'input-uploader__items'}>\n                    {props.value.map((item, index) => \n                        <div key={index} className=\"input-uploader__item\">\n                            <span>{item.name}</span>\n                            <Icon name=\"close\" size={20} onClick={() => props.onDelete(item.name)}/>\n                        </div>\n                    )}\n                </div>\n            : ''}\n        </div>\n    )\n}\n","import React from 'react';\nimport { Icon } from './Icon';\n\nexport const List = (props) => {\n    const listClass = () => {\n        let result = '';\n        let className = {\n            list: 'list',\n            dense: props.dense ? 'dense' : '',\n            dark: props.dark ? 'dark' : '',\n            className: props.className ? props.className : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    return (\n        <div className={listClass()}>\n            {props.header ? <div className=\"list-header\">{props.header}</div> : ''}\n            {props.children}\n        </div>\n    )\n}\n\nexport const ListItem = (props) => {\n    const itemClass = () => {\n        let result = '';\n        let className = {\n            item: 'list-item',\n            right: props.right && !props.left ? 'right' : '',\n            left: props.left && !props.right ? 'left' : '',\n            active: (props.isActiveItem && props.isActiveItem(props.item)) ? 'active' : '',\n            hover: props.hover ? 'hover' : '',\n            noDivider: props.noDivider ? '' : 'divider',\n            className: props.className ? props.className : ''\n        }\n\n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    return (\n        <div onClick={() => props.onItemClick ? props.onItemClick() : {}} \n            className={itemClass()}>\n            <div>\n                <div className=\"row align-center\">\n                    {props.icon ? <Icon name={props.icon} className=\"mr-5\"/> : ''}\n                    <div className=\"list-item__left-side\">\n                        {props.checkbox}\n                        {props.item[props.itemTitle] ? props.item[props.itemTitle] : props.item}\n                    </div>\n                </div>\n                <div className=\"list-item__right-side\">\n                    {props.controls}\n                </div>\n            </div>\n            {props.subTitle ? <div className=\"list-subtitle\">{props.subTitle}</div> : ''}\n        </div>\n    )\n}\n\n\n","import React, { useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nexport const Tooltip = (props) => {\n    const [show, setShow] = useState(false);\n    const tooltipClass = () => {\n        let result = `tooltip ${props.position ? props.position : ''}`;\n        return result;\n    }\n    return (\n        <div className={tooltipClass()}\n            onMouseEnter={() => setShow(true)}\n            onMouseLeave={() => setShow(false)}>\n            <CSSTransition\n                in={show}\n                timeout={300}\n                classNames=\"tooltip\"\n                unmountOnExit>\n                <div>{props.tooltip}</div>\n            </CSSTransition>\n            {props.children}\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Button } from './button/Button';\nimport { Tooltip } from './Tooltip';\n\nexport const Drawer = (props) => {\n    const [isXs, setIsXs] = useState(false);\n\n    const drawerClass = () => {\n        let result = '';\n        let className = {\n            name: 'drawer',\n            collapsable: props.collapsable ? 'collapsable' : '',\n            smooth: props.smooth ? 'smooth' : '',\n            min: props.min ? 'min' : '',\n            absolute: props.absolute ? 'absolute' : '',\n            fullHeight: props.fullHeight ? 'full-height' : '',\n            dark: props.dark && !props.light ? 'dark' : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    const handleClose = (e) => {\n        e.preventDefault();\n        if (e.currentTarget === e.target) {\n            if (props.onClose) props.onClose()\n        } \n    }\n\n    useEffect(() => {\n        window.addEventListener('resize', () => {\n            if (window.innerWidth > 529) {\n                setIsXs(false)\n            } else {\n                setIsXs(true)\n            }\n        })\n    }, [])\n\n    return (\n        <React.Fragment>\n            {isXs ?\n            <CSSTransition\n                in={props.drawer}\n                timeout={100}\n                classNames=\"drawer-background\"\n                unmountOnExit>\n                <div className={props.drawer ? \n                        'drawer-background' : \n                        'drawer-background none'} \n                        onClick={handleClose}>\n                    <CSSTransition\n                        in={props.drawer}\n                        timeout={300}\n                        classNames=\"drawer\"\n                        unmountOnExit>\n                        <CSSTransition\n                            in={props.min}\n                            timeout={300}\n                            classNames=\"expand\">\n                                <div className={drawerClass()}>\n                                    <div className=\"drawer-content\">\n                                        {props.header ? <div className={props.headerCentered ? \n                                                'drawer-header centered' : 'drawer-header'}>\n                                                    {props.header}</div> : ''}\n                                        {props.children}\n                                    </div>\n                                    {props.collapsable ? <div className=\"drawer-footer\">\n                                        <Tooltip tooltip={props.min ? 'Expand' : 'Collapse'}>\n                                            <Button\n                                                dark={props.dark}\n                                                light={props.dark ? false : true}\n                                                icon={props.min ? 'chevron-double-right' : 'chevron-double-left'}\n                                                onClick={() => props.onResize()}/>\n                                        </Tooltip>\n                                    </div> : ''}\n                                </div>\n                            \n                        </CSSTransition>\n                    </CSSTransition>\n                </div>\n            </CSSTransition> :\n            <CSSTransition\n                in={props.drawer}\n                timeout={300}\n                classNames=\"drawer\"\n                unmountOnExit>\n                <CSSTransition\n                    in={props.min}\n                    timeout={300}\n                    classNames=\"expand\">\n                        <div className={drawerClass()}>\n                            <div className=\"drawer-content\">\n                                {props.header ? <div className={props.headerCentered ? \n                                        'drawer-header centered' : 'drawer-header'}>\n                                            {props.header}</div> : ''}\n                                {props.children}\n                            </div>\n                            {props.collapsable ? <div className=\"drawer-footer\">\n                                <Tooltip tooltip={props.min ? 'Expand' : 'Collapse'}>\n                                    <Button\n                                        dark={props.dark}\n                                        light={props.dark ? false : true}\n                                        icon={props.min ? 'chevron-double-right' : 'chevron-double-left'}\n                                        onClick={() => props.onResize()}/>\n                                </Tooltip>\n                            </div> : ''}\n                        </div>\n                    \n                </CSSTransition>\n            </CSSTransition>\n            }\n        </React.Fragment>\n    )\n}\n","import React, { useState, useRef } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Icon } from '../Icon';\n\nexport const Select = ({ \n    items, \n    itemName,\n    subItemsField, \n    subItemName, \n    labelName, \n    placeholder, \n    selectedItem,\n    onSelect,\n    width,\n    minWidth,\n    subTitle,\n    addSubItem,\n    showSubItemOnly,\n    color,\n    size,\n    rounded\n}) => {\n    const selectMenu = useRef(null);\n    const [open, setOpen] = useState(false);\n    const getItems = () => items ? items : [];\n\n    const subItems = (parent) => {\n        if (subItemsField) return parent[subItemsField]\n        else return []\n    }\n\n    const openMenu = e => {\n        if (e.target === e.currentTarget) setOpen(true)\n    }\n\n    const handleSelect = (e, value, subValue) => {\n        if (e.target === e.currentTarget) {\n            let result = subValue ? (showSubItemOnly ? subValue : `${value} / ${subValue}`) : value\n            onSelect(result)\n            setOpen(false)\n            selectMenu.current.blur()\n        }\n    }\n\n    const cutLongText = (text) => {\n        if (text.length > 130) return `${text.slice(0, 130)}...`\n        else return text\n    }\n\n    const selectItemClass = (item) => {\n        let isSelected = itemName ? item[itemName] === selectedItem : item === selectedItem\n        let result = '';\n        let className = {\n            item: 'select-menu__item',\n            active: isSelected ? 'active' : ''\n        }\n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    const selectSubItemClass = (item) => {\n        let selected = showSubItemOnly ? selectedItem : (selectedItem ? selectedItem.split('/')[1].trim() : '')\n        let isSelected = subItemName ? item[subItemName] === selected : item === selected\n        let classes = {\n            active: isSelected ? 'active' : ''\n        }\n        return `select-menu__subitem ${classes.normalTitle} ${classes.active}`\n    }\n\n    const selectClass = (item) => {\n        let result = '';\n        let className = {\n            main: 'select-menu',\n            rounded: rounded ? 'rounded' : '',\n            size: size ? size : '',\n            color: color ? color : ''\n        }\n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    return (\n        <React.Fragment>\n            {labelName ? <label className=\"select-menu__label\">{labelName}</label> : ''}\n            <div className={selectClass()}\n                ref={selectMenu}\n                style={{ width: width ? width : '', minWidth: minWidth ? minWidth : '' }} \n                tabIndex={-1} \n                onClick={openMenu} \n                onBlur={() => setOpen(false)}>\n                \n                {!cutLongText(selectedItem ? selectedItem : '') ? \n                <span onClick={openMenu}>{placeholder}</span> : ''}\n                {cutLongText(selectedItem ? selectedItem : '') ? \n                    <div className=\"select-menu__value\" \n                        onClick={openMenu} \n                        title={selectedItem}>\n                            {selectedItem ? cutLongText(selectedItem) : ''}\n                    </div> : ''}\n                <Icon name=\"chevron-down\"/>\n                \n                <CSSTransition\n                    in={open}\n                    timeout={300}\n                    classNames=\"select-menu\"\n                    unmountOnExit>\n                    <div className=\"select-menu__items\">\n                        {getItems().map((item, index) => \n                            <div key={index} \n                                className={selectItemClass(item)}\n                                onClick={e => subItems(item).length > 0 ? {} : handleSelect(e, itemName ? item[itemName] : item)}>\n                                {itemName ? item[itemName] : item}\n                                {subItems(item).length > 0 ? <Icon name=\"chevron-next\"/> : ''}\n                                {subItems(item).length > 0 ? \n                                    <div className=\"select-menu__subitems\">\n                                        {subTitle ? <div className=\"select-menu__subitem-title\">{itemName ? item[itemName] : item}</div> : ''}\n                                        {subItems(item).map((subItem, subIndex) => \n                                            <div key={subIndex} \n                                                className={selectSubItemClass(subItem)}\n                                                onClick={e => handleSelect(e, itemName ? item[itemName] : item, subItemName ? subItem[subItemName] : subItem)}>\n                                                {subItemName ? subItem[subItemName] : subItem} {addSubItem ? ' (' + subItem[addSubItem] + ')' : ''}\n                                            </div>\n                                        )}\n                                    </div> : ''\n                                }\n                            </div>\n                        )}\n                    </div>\n                </CSSTransition>\n            </div>\n        </React.Fragment>\n    )\n}\n","import React, { useState } from 'react';\nimport { Select } from './select/Select';\nimport { ChevronBack, ChevronNext } from '../icons/index';\n\nconst generateMockArr = (length) => {\n    let arr = []\n    for (let i = 0; i < length; i++) {\n        arr.push(i)\n    }\n    return arr\n}\n\nexport const Pagination = (props) => {\n    const paginationClass = () => {\n        let result = '';\n        let className = {\n            btn: 'pagination',\n            size: props.size ? props.size : '',\n            rounded: props.rounded ? 'rounded' : '',\n            color: props.color ? props.color : '',\n            className: props.className ? props.className : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    let perPage = props.perPage ? props.perPage : 10;\n\n    const getLimit = () => {\n        return Math.ceil(props.itemsCount/perPage) >= 5 ?\n            5 : Math.ceil(props.itemsCount/perPage)\n    }\n    const [currentPage, setCurrentPage] = useState(props.current ? props.current : 1);\n    const [perPageLocal, setPerPageLocal] = useState(perPage);\n    const [allPages, setAllPages] = useState(generateMockArr(Math.ceil(props.itemsCount/perPage)));\n    const [activePages, setActivePages] = useState(allPages.slice(0, getLimit()))\n\n    const isPrevAvailable = () => {\n        return currentPage === 1 ? false : true\n    }\n\n    const isNextAvailable = () => {\n        if (currentPage === props.itemsCount || \n            props.itemsCount === 0 || \n            currentPage === Math.ceil(props.itemsCount/perPage)) return false \n        else return true\n    }\n\n    const handleOnNext = () => {\n       if (isNextAvailable()) {\n            if (currentPage % getLimit() === 0 && currentPage < allPages.length) {\n                setActivePages(allPages.slice(currentPage, currentPage + getLimit()))\n                setCurrentPage(currentPage + 1)\n            } else if (currentPage < allPages.length) {\n                setCurrentPage(currentPage + 1)\n            }\n       }\n    }\n\n    const handleOnPrev = () => {\n        if (isPrevAvailable()) {\n            if((currentPage - 1) % getLimit() === 0 && currentPage > 1){\n                setActivePages(allPages.slice(currentPage - getLimit(), currentPage))\n                setCurrentPage(currentPage - 1)\n            } else if (currentPage > 1) {\n                setCurrentPage(currentPage - 1)\n            }\n        }\n    }\n\n    const handlePerPageSelect = (value) => {\n        setPerPageLocal(value)\n    }\n\n    const getSize = () => {\n        if (props.size === 'medium') return 100\n        else if (props.size === 'large') return 100\n        else return 100\n    }\n\n    return (\n        <div className={paginationClass()}>\n\n            <div className={isPrevAvailable() ? 'pagination-item' : 'pagination-item disabled'} onClick={handleOnPrev}>\n                <ChevronBack />\n            </div>\n\n            {activePages.map((item, index) => {\n                return (\n                    <div key={index} className={(item + 1) === currentPage ? 'pagination-item active' : 'pagination-item'}\n                        onClick={() => setCurrentPage(item + 1)}>\n                        {item + 1}\n                    </div>\n                )\n            })}\n\n            <div className={isNextAvailable() ? 'pagination-item' : 'pagination-item disabled'} onClick={handleOnNext}>\n                <ChevronNext />\n            </div>\n\n            <div className=\"pagination-per-page\">\n                <Select\n                    minWidth={getSize()}\n                    size={props.size}\n                    rounded={props.rounded}\n                    color={props.color}\n                    items={props.perPageVariants ? props.perPageVariants : [10, 20, 50, 100]}\n                    normalTitle={true}\n                    selectedItem={`${perPageLocal} / ${props.pageText ? props.pageText : 'page'}`}\n                    onSelect={handlePerPageSelect}/>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nexport const Modal = (props) => {\n\n    const close = (e) => {\n        if (e.target === e.currentTarget) props.onClose()\n    }\n\n    return (\n        <div className={props.visible ? 'modal-container' : 'modal-container hidden'}\n            onClick={(e) => props.closable ? close(e) : {}}>\n            <CSSTransition\n                in={props.visible}\n                timeout={300}\n                classNames=\"modal\"\n                unmountOnExit\n                onEnter={() => props.onEnter ? props.onEnter() : {}}\n                onExited={() => props.onExited ? props.onExited() : {}}>\n                <div className=\"modal\">\n                    <div className=\"modal-header\">{props.header}</div>\n                    <div className=\"modal-content\">{props.children}</div>\n                    {props.footer ? <div className=\"modal-footer\">{props.footer}</div> : ''}\n                </div>\n            </CSSTransition>\n        </div>\n    )\n}\n","import React from 'react';\n\nexport const Badge = (props) => {\n    const badgeClass = () => {\n        let result = '';\n        let className = {\n            btn: 'badge-container',\n            rounded: props.rounded ? 'rounded' : '',\n            color: props.color ? props.color : '',\n            className: props.className ? props.className : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    const visibility = () => {\n        if (typeof(props.visible) === 'undefined') return true\n        else return props.visible\n    }\n\n    return (\n        <div className={badgeClass()}>\n            {props.parent}\n            <div className=\"badge\">\n                {visibility() ? props.value : ''}\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\n\nconst Radio = (props) => {\n    const radioClass = () => {\n        let result = '';\n        let className = {\n            btn: 'radio',\n            disabled: props.disabled ? 'disabled' : '',\n            className: props.className ? props.className : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    return (\n        <div className={radioClass()}>\n            <input \n                type=\"radio\" \n                name={props.name} \n                value={props.value}\n                disabled={props.disabled} \n                onChange={e => props.onChange(e)}/>\n            {props.label ? <span>{props.label}</span> : ''}\n        </div>\n    )\n}\n\nexport const RadioGroup = (props) => {\n    const radioGroupClass = () => {\n        let result = '';\n        let className = {\n            btn: 'radio-group',\n            vertical: props.vertical ? 'vertical' : '',\n            className: props.className ? props.className : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    return (\n        <div className={radioGroupClass()}>\n            {props.options.map((item, index) => \n                <Radio \n                    key={index}\n                    disabled={props.disabled}\n                    label={props.labelName ? props.labelName : item} \n                    value={item} \n                    name={props.name}\n                    onChange={() => props.onChange(item)}/>\n            )}\n        </div>\n    )\n}\n","import React from 'react';\n\nexport const Preloader = (props) => {\n    return (\n        <React.Fragment>\n            {props.visible ? <div className=\"preloader\"\n                style={{ background: props.backgroundColor ? props.backgroundColor : ''}}>\n                {\n                    props.preloader ? props.preloader :\n                    <div className=\"lds-ellipsis\">\n                        <div style={{ backgroundColor: props.color ? props.color : '#42a5f5' }}></div>\n                        <div style={{ backgroundColor: props.color ? props.color : '#42a5f5' }}></div>\n                        <div style={{ backgroundColor: props.color ? props.color : '#42a5f5' }}></div>\n                        <div style={{ backgroundColor: props.color ? props.color : '#42a5f5' }}></div>\n                    </div>\n                } \n            </div> : ''}\n        </React.Fragment>\n    )\n}","import { HomePage } from './pages/HomePage';\nimport { ButtonPage } from './pages/ButtonPage';\nimport { DropdownPage } from './pages/DropdownPage';\nimport { ListPage } from './pages/ListPage';\nimport { InputsPage } from './pages/InputsPage';\nimport { DrawerPage } from './pages/DrawerPage';\nimport { TooltipPage } from './pages/TooltipPage';\nimport { PaginationPage } from './pages/PaginationPage';\nimport { SelectPage } from './pages/SelectPage';\nimport { TablePage } from './pages/TablePage';\nimport { ModalPage } from './pages/ModalPage';\nimport { CheckboxPage } from './pages/CheckboxPage';\nimport { CardPage } from './pages/CardPage';\nimport { SwitchPage } from './pages/SwitchPage';\nimport { TagPage } from './pages/TagPage';\nimport { BadgePage } from './pages/BadgePage';\nimport { RadioPage } from './pages/RadioPage';\nimport { IconPage } from './pages/IconPage';\nimport { PreloaderPage } from './pages/PreloaderPage';\n\nexport const routes = [\n    { path: '/', name: 'Get started', Component: HomePage },\n    { path: '/btns', name: 'Button', Component: ButtonPage },\n    { path: '/icon', name: 'Icon', Component: IconPage },\n    { path: '/dropdown', name: 'Dropdown', Component: DropdownPage },\n    { path: '/lists', name: 'List', Component: ListPage },\n    { path: '/inputs', name: 'Input', Component: InputsPage },\n    { path: '/drawer', name: 'Drawer', Component: DrawerPage },\n    { path: '/tooltip', name: 'Tooltip', Component: TooltipPage },\n    { path: '/pagination', name: 'Pagination', Component: PaginationPage },\n    { path: '/select', name: 'Select', Component: SelectPage },\n    { path: '/table', name: 'Table', Component: TablePage },\n    { path: '/modal', name: 'Modal', Component: ModalPage },\n    { path: '/checkbox', name: 'Checkbox', Component: CheckboxPage },\n    { path: '/radio', name: 'Radio Group', Component: RadioPage },\n    { path: '/switch', name: 'Switch', Component: SwitchPage },\n    { path: '/card', name: 'Card', Component: CardPage },\n    { path: '/tag', name: 'Tag', Component: TagPage },\n    { path: '/badge', name: 'Badge', Component: BadgePage },\n    { path: '/preloader', name: 'Preloader', Component: PreloaderPage }\n]","import React from 'react';\nimport { Tag } from '../components/Tag';\n\nexport const HomePage = () => {\n    return (\n        <div>\n            <h1 className=\"text-primary\">Welcome to React UI Components</h1>\n            <h4>Main Goal: Create a lot of usefull and maximum reusable UI components for React apps</h4>\n            <Tag iconLeft=\"hammer\" value=\"Work in progress...\"/>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { Button } from '../components/button/Button';\nimport { Table } from '../components/Table';\nimport { Card } from '../components/Card';\nimport { Switch } from '../components/Switch';\n\nexport const ButtonPage = () => {\n    const [loading, setLoading] = useState(true);\n    const keys = ['property', 'description', 'default', 'type', 'value'];\n    const items = [\n        { \n            property: 'onClick', \n            description: 'Handle button click', \n            default: '', \n            type: 'function',\n            value: 'return a button click event object'\n        },\n        { \n            property: 'name', \n            description: 'Set button name (can be set with icon)', \n            default: '', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'lifted', \n            description: 'Lift up the button', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'color', \n            description: 'Set background and border color of button from list', \n            default: '', \n            type: 'string',\n            value: 'primary | info | success | error | black | secondary'\n        },\n        { \n            property: 'disabled',\n            description: 'Make Button disabled', \n            default: 'false',\n            type: 'boolean', \n            value: 'true | false'\n        },\n        { \n            property: 'loading',\n            description: 'Activate loading and make Button disabled', \n            default: 'false',\n            type: 'boolean', \n            value: 'true | false'\n        },\n        { \n            property: 'rounded', \n            description: 'Make border radius rounded',\n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'smooth',\n            description: 'Set button borders more smooth', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'outlined', \n            description: 'Make button background transparent and outline borders', \n            default: 'false',\n            type: 'boolean', \n            value: 'true | false'\n        },\n        { \n            property: 'uppercase',\n            description: 'Transform text to upper case', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'block', \n            description: 'Fills the parent component width',\n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'size', \n            description: 'Set button size',\n            default: '', \n            type: 'string',\n            value: 'medium | large'},\n        { \n            property: 'icon',\n            description: 'Set icon in button and give circle shape to it (can be set with name)', \n            default: '', \n            type: 'string',\n            value: 'home | search | etc. (see icon names list in docs)'\n        },\n        { \n            property: 'iconLeft',\n            description: 'Change icon position to the left from name', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'dark',\n            description: 'Set dark mode (can not be used with light prop)', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'light',\n            description: 'Set light mode (can not be used with dark prop)', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'className',\n            description: 'Set a custom css class to component', \n            default: '', \n            type: 'string',\n            value: ''\n        }\n    ]\n\n    return (\n        <div className=\"page\">\n            <div className=\"page-title\">Button Component</div>\n            <Card outlined color=\"primary\" title=\"Button types\">\n                <div className=\"row align-center\">\n                    <Button\n                        className=\"mr-5\"\n                        color=\"primary\"\n                        lifted\n                        name=\"Primary\"\n                        />\n                    <Button\n                        smooth\n                        className=\"mr-5\"\n                        color=\"primary\"\n                        name=\"Smooth\"\n                        />\n                    <Button\n                        className=\"mr-5\"\n                        outlined\n                        color=\"primary\"\n                        name=\"Outlined\"\n                        />\n                    <Button\n                        className=\"mr-5\"\n                        outlined\n                        uppercase\n                        color=\"primary\"\n                        name=\"uppercase\"\n                        />\n                    <Button\n                        className=\"mr-5\"\n                        outlined\n                        rounded\n                        color=\"primary\"\n                        name=\"Rounded\"\n                        />\n                </div>\n            </Card>\n            <br/>\n            <Card outlined color=\"primary\" title=\"Button sizes\">\n                <div className=\"row align-center\">\n                    <Button\n                        className=\"mr-5\"\n                        color=\"info\"\n                        name=\"Default\"\n                        />\n                    <Button\n                        className=\"mr-5\"\n                        color=\"info\"\n                        size=\"medium\"\n                        name=\"Medium\"\n                        />\n                    <Button\n                        className=\"mr-5\"\n                        size=\"large\"\n                        color=\"info\"\n                        name=\"Large\"\n                        /> \n                    <Button\n                        rounded\n                        className=\"mr-5\"\n                        color=\"info\"\n                        name=\"Default\"\n                        />\n                    <Button\n                        rounded\n                        outlined\n                        uppercase\n                        className=\"mr-5\"\n                        color=\"info\"\n                        size=\"medium\"\n                        name=\"Medium\"\n                        />\n                    <Button\n                        rounded\n                        uppercase\n                        size=\"large\"\n                        color=\"info\"\n                        name=\"Large\"\n                        />  \n                </div>\n            </Card>\n            <br/>\n            <Card outlined color=\"primary\" title=\"Button colors\">\n                <Button\n                    className=\"mr-5\"\n                    color=\"primary\"\n                    name=\"Primary\"\n                    />\n                <Button\n                    className=\"mr-5\"\n                    color=\"info\"\n                    name=\"Info\"\n                    />  \n                <Button\n                    className=\"mr-5\"\n                    color=\"error\"\n                    name=\"Error\"\n                    /> \n                <Button\n                    className=\"mr-5\"\n                    color=\"success\"\n                    name=\"Success\"\n                    /> \n                <Button\n                    className=\"mr-5\"\n                    color=\"secondary\"\n                    name=\"Secondary\"\n                    /> \n                <Button\n                    className=\"mr-5\"\n                    color=\"black\"\n                    name=\"Black\"\n                    /> \n                <Button\n                    disabled\n                    color=\"success\"\n                    name=\"Disabled\"\n                    /> \n            </Card>\n            <br/>\n            <Card outlined color=\"primary\" title=\"Block button\">\n                <div style={{ width: 300 }} className=\"mb-10\">\n                    <Button\n                        block\n                        className=\"my-5\"\n                        color=\"primary\"\n                        name=\"Block button\"\n                        />\n                    <Button\n                        block\n                        className=\"my-10\"\n                        color=\"primary\"\n                        outlined\n                        name=\"Block button\"\n                        />\n                    <Button\n                        block\n                        rounded\n                        outlined\n                        className=\"my-5\"\n                        color=\"error\"\n                        name=\"Block button\"\n                        />   \n                </div>\n            </Card>\n            <br/>\n            <Card outlined color=\"primary\" title=\"Icon buttons\">\n                <div className=\"row align-center\">\n                    <Button\n                        className=\"mr-10\"\n                        color=\"primary\"\n                        icon=\"search\"\n                        />\n                    <Button\n                        outlined\n                        className=\"mr-10\"\n                        color=\"primary\"\n                        icon=\"menu\"\n                        />\n                    <Button\n                        light\n                        className=\"mr-10\"\n                        icon=\"search\"\n                        />\n                    <Button\n                        className=\"mr-10\"\n                        color=\"primary\"\n                        name=\"Search\"\n                        icon=\"search\"\n                        />\n                    <Button\n                        outlined\n                        className=\"mr-10\"\n                        color=\"primary\"\n                        name=\"Search\"\n                        icon=\"search\"\n                        />\n                    <Button\n                        className=\"mr-10\"\n                        color=\"info\"\n                        name=\"Home\"\n                        icon=\"home\"\n                        iconLeft\n                        />\n                </div>\n            </Card>\n            <br/>\n            <Card outlined color=\"primary\" title=\"Loading\">\n                <div className=\"row align-center py-20\">\n                    <label>Toggle loaders</label>\n                    <Switch \n                        check={loading} \n                        color=\"info\" \n                        className=\"ml-10\"\n                        onChange={() => setLoading(!loading)}/>\n                </div>\n                <div className=\"row align-center\">\n                    <Button\n                        outlined\n                        className=\"mr-10\"\n                        color=\"primary\"\n                        loading={loading}\n                        icon=\"search\"\n                        />\n                    <Button\n                        className=\"mr-10\"\n                        light\n                        loading={loading}\n                        icon=\"search\"\n                        />\n                    <Button\n                        className=\"mx-10\"\n                        color=\"info\"\n                        name=\"Home\"\n                        icon=\"home\"\n                        loading={loading}\n                        iconLeft\n                        />\n                    <Button\n                        className=\"mx-10\"\n                        color=\"info\"\n                        loading={loading}\n                        rounded\n                        name=\"Button\"\n                        />\n                    <Button\n                        className=\"mx-10\"\n                        color=\"info\"\n                        loading={loading}\n                        rounded\n                        outlined\n                        name=\"Button\"\n                        />\n                </div>\n            </Card>\n            <h2>API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Table } from '../components/Table';\nimport { Icon } from '../components/Icon';\nimport { description } from '../../package.json';\nimport { Card } from '../components/Card';\n\nexport const IconPage = () => {\n    const icons = [\n        'delete', \n        'search', \n        'home', \n        'edit', \n        'github', \n        'close', \n        'chevron-double-right', \n        'chevron-double-left',\n        'code',\n        'chip',\n        'account',\n        'person',\n        'shield-account',\n        'chevron-down',\n        'chevron-next', \n        'chevron-back', \n        'sun',\n        'moon',\n        'star',\n        'star-outline',\n        'smartphone',\n        'hammer',\n        'city',\n        'empty',\n        'download',\n        'menu'  \n    ]\n\n    const keys = ['property', 'description', 'default', 'type', 'value'];\n    const items = [\n        { \n            property: 'name', \n            description: 'Set icon name', \n            default: '', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'onClick', \n            description: 'Handle click event', \n            default: '', \n            type: 'function',\n            value: ''\n        },\n        { \n            property: 'title', \n            description: 'Set title', \n            default: '', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'color', \n            description: 'Set icon color', \n            default: '', \n            type: 'string',\n            value: 'hex | rgb() | css preset colors'\n        },\n        { \n            property: 'size', \n            description: 'Set icon size',\n            default: '24', \n            type: 'number',\n            value: ''\n        },\n        { \n            property: 'className',\n            description: 'Set a custom css class to component', \n            default: '', \n            type: 'string',\n            value: ''\n        }\n    ]\n\n    return (\n        <div className=\"page\">\n            <div className=\"page-title\">Icon Component</div>\n            <p><strong>{description}</strong> use primarily\n                <a href=\"https://materialdesignicons.com/\"\n                    target=\"blank_\"\n                    className=\"ml-5\">Material Design Icons</a>\n            </p>\n            <br/>\n            <Card outlined color=\"primary\" title=\"Icons collection\">\n                {icons.map((item, index) => \n                    <div key={index} \n                        style={{ minWidth: 60 }}\n                        className=\"row-inline text-center column justify-center align-center pa-5 ma-10 hoverable\">\n                        <Icon name={item}/>\n                        <div className=\"mt-5 fz-8\">{item}</div>\n                    </div>\n                )}\n            </Card>\n            <h2>API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { Dropdown } from '../components/Dropdown';\nimport { Button } from '../components/button/Button';\nimport { InputField } from '../components/Input';\nimport { Card } from '../components/Card';\nimport { Table } from '../components/Table';\nimport { Tag } from '../components/Tag';\nimport { Icon } from '../components/Icon';\n\nexport const DropdownPage = () => {\n    const [item, setItem] = useState('');\n    const [item2, setItem2] = useState('');\n\n    const keys = ['property', 'description', 'default', 'type', 'value'];\n    const items = [\n        { \n            property: 'content', \n            description: 'Dropdown content', \n            default: '', \n            type: 'any',\n            value: ''\n        },\n        { \n            property: 'trigger', \n            description: 'Trigger element (Button, InputField & etc.)',\n            default: '', \n            type: 'any',\n            value: ''\n        },\n        { \n            property: 'width', \n            description: 'Set Dropdown content width',\n            default: '', \n            type: 'string | number',\n            value: ''\n        },\n        { \n            property: 'minWidth', \n            description: 'Set Dropdown content minWidth',\n            default: '', \n            type: 'string | number',\n            value: ''\n        },\n        { \n            property: 'className',\n            description: 'Set a custom css class to component', \n            default: '', \n            type: 'string',\n            value: ''\n        }\n    ]\n\n    const heroes = [\n        { name: 'Steve Rogers', hero: 'Captain America', icon: 'account', check: false }, \n        { name: 'Peter Parker', hero: 'Spider man', icon: 'account', check: false }, \n        { name: 'Tony Stark', hero: 'Iron man', icon: 'account', check: false }, \n        { name: 'Bruce Benner', hero: 'Hulk', icon: 'account', check: false }\n    ];\n\n    return (\n        <div className=\"page\">\n            <div className=\"page-title\">Dropdown Component</div>\n            <Card outlined color=\"primary\" title=\"Dropdown on Button\">\n                <div className=\"row align-center\">\n                    <Dropdown\n                        content={\n                            heroes.map((item, index) => \n                                <div key={index} \n                                    className=\"menu-item fz-8\" \n                                    onClick={() => setItem(item.hero)}>{item.hero}</div>\n                            )\n                        }\n                        itemTitle=\"name\"\n                        trigger={<Button\n                            color=\"info\"\n                            name=\"Button\"/>}/>\n                    <Tag value={`Your select: ${item}`} className=\"ml-10\"/>\n                </div>\n            </Card>\n            <br/>\n            <Card outlined color=\"primary\" title=\"Dropdown on InputField\">\n                <div className=\"row\">\n                    <Dropdown\n                        content={\n                            heroes.map((item, index) => \n                                <div key={index} \n                                    className=\"menu-item\" \n                                    onClick={() => setItem2(item.hero)}>{item.hero}</div>\n                            )\n                        }\n                        trigger={<InputField\n                                color=\"info\"\n                                prefix={<Icon name=\"shield-account\"/>}\n                                value={item2}\n                                placeholder=\"Choose a hero\"/>}/>\n                </div>\n            </Card>\n            <br/>\n            <Card outlined color=\"primary\" title=\"Dropdown on Icon button\">\n                <div className=\"row\">\n                    <Dropdown\n                        content={\n                            <div className=\"row column justify-center px-15 pt-15 pb-20\">\n                                <Icon name=\"account\" color=\"gray\" size={90}/>\n                                <strong className=\"text-center text-info fz-9 pt-5\">John Doe</strong>\n                            </div>\n                        }\n                        trigger={<Button\n                                    light\n                                    icon=\"account\"/>}/>\n                </div>\n            </Card>\n            <h2>API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { List, ListItem } from '../components/List';\nimport { Button } from '../components/button/Button';\nimport { Checkbox } from '../components/Checkbox';\nimport { Table } from '../components/Table';\nimport { Card } from '../components/Card';\nimport { Tag } from '../components/Tag';\n\nexport const ListPage = () => {\n    const names = [\n        { name: 'John Doe', active: false },\n        { name: 'Peter Parker', active: true },\n        { name: 'Tony Stark', active: false },\n        { name: 'Bruce Benner', active: false }\n    ];\n\n    const itemsComplexInitial = [\n        { name: 'Steve Rogers', hero: 'Captain America', icon: 'shield-account', check: false }, \n        { name: 'Peter Parker', hero: 'Spider man', icon: 'shield-account', check: false }, \n        { name: 'Tony Stark', hero: 'Iron man', icon: 'shield-account', check: false }, \n        { name: 'Bruce Benner', hero: 'Hulk', icon: 'shield-account', check: false }\n    ];\n\n    const keys = ['property', 'description', 'default', 'type', 'value'];\n    const items = [\n        { \n            property: 'header', \n            description: 'Set list header',\n            default: '', \n            type: 'any',\n            value: ''\n        },\n        { \n            property: 'dense', \n            description: 'Set list item density',\n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'dark',\n            description: 'Set dark mode (can not be used with light prop)', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'className',\n            description: 'Set a custom css class to component', \n            default: '', \n            type: 'string',\n            value: ''\n        }\n    ]\n\n    const items2 = [\n        { \n            property: 'itemTitle', \n            description: 'If you pass items as array of objects pass the key of field that you want to display', \n            default: '', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'subTitle', \n            description: 'Set subtitle in list item (It can be just text or Tag and etc.)', \n            default: '', \n            type: 'any',\n            value: ''\n        },\n        { \n            property: 'isActiveItem', \n            description: 'Define the active item and set active class (return boolean)', \n            default: '', \n            type: 'function',\n            value: ''\n        },\n        { \n            property: 'checkbox',\n            description: 'A placeholder for checkbox (Expect a checkbox element or Component)', \n            default: '', \n            type: 'any',\n            value: ''\n        },\n        { \n            property: 'icon',\n            description: 'Set icon before the text in list item', \n            default: '', \n            type: 'string',\n            value: 'home | search | etc. (see icon names list in docs)'\n        },\n        { \n            property: 'controls',\n            description: 'A placeholder for item controls like buttons or etc.', \n            default: '', \n            type: 'any',\n            value: ''\n        },\n        { \n            property: 'noDivider',\n            description: 'Remove the divider line between items', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'hover',\n            description: 'Set background color on item hover', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'className',\n            description: 'Set a custom css class to component', \n            default: '', \n            type: 'string',\n            value: ''\n        }\n    ]\n\n    const [itemsComplex, setItemsComplex] = useState(itemsComplexInitial);\n    const [selected, setSelected] = useState([]);\n\n    const selectOne = (item) => {\n        if (isSelected(item, 'hero')) {\n            setSelected(selected => selected.filter(_item => _item.hero !== item.hero))\n        } else setSelected([...selected, item]);\n    }\n\n    const isSelected = (item, prop) => {\n        let result = false\n        if (prop) {\n            for (const select of selected) {\n                if (item[prop] === select[prop]) result = true \n            }\n        }\n        return result\n    }\n\n    return (\n        <div className=\"page\">\n            <div className=\"page-title\">Lists</div>\n            <Card \n                outlined \n                className=\"px-0\"\n                color=\"primary\" \n                title=\"Simple list with active item\">\n                <List>\n                    {names.map((item, index) => \n                        <ListItem\n                            isActiveItem={item => item.active} \n                            key={index} \n                            item={item}\n                            itemTitle=\"name\"/>\n                    )}\n                </List>\n            </Card>\n            <h4>Dark mode</h4>\n            <Card \n                color=\"primary\" \n                title=\"Simple list with dark mode, hover and icons\" \n                dark\n                className=\"px-0\">\n                <List items={itemsComplex} itemTitle=\"hero\" dark hover>\n                    {itemsComplex.map((item, index) => \n                        <ListItem \n                            key={index} \n                            item={item}\n                            icon={item.icon}\n                            itemTitle=\"hero\"\n                            hover/>\n                    )}\n                </List>\n            </Card>\n            <br/>\n            <Card \n                outlined \n                color=\"primary\" \n                title=\"Dense size list with header and hover\"\n                className=\"px-0\">\n                <List dense header=\"Marvel avengers:\">\n                    {names.map((item, index) => \n                        <ListItem \n                            key={index} \n                            item={item}\n                            icon=\"account\"\n                            itemTitle=\"name\"\n                            hover/>\n                    )}\n                </List>\n            </Card>\n            <br/>\n            <Card \n                outlined \n                color=\"primary\" \n                title=\"List with checkbox\"\n                className=\"px-0\">\n                <List header={'Selected Marvel avengers: ' + selected.length}>\n                    {itemsComplex.map((item, index) => \n                        <ListItem \n                            key={index} \n                            item={item}\n                            itemTitle=\"hero\"\n                            isActiveItem={item => isSelected(item, 'hero')}\n                            hover\n                            checkbox={<Checkbox \n                                checked={isSelected(item, 'hero')}\n                                onChange={() => selectOne(item)}/>}/>\n                    )}\n                </List>\n            </Card>\n            <br/>\n            <Card outlined color=\"primary\" title=\"List with controls and subtitles\">\n                <List>\n                    {itemsComplex.map((item, index) => \n                        <ListItem \n                            key={index} \n                            item={item}\n                            icon={item.icon} \n                            itemTitle=\"name\"\n                            subTitle={<Tag small color=\"info\" value={item.hero}/>}\n                            controls={\n                                <React.Fragment>\n                                    <Button small color=\"light\" className=\"mr-10\" icon=\"edit\"/>\n                                    <Button small color=\"light\" icon=\"close\"/>\n                                </React.Fragment>\n                            }/>\n                    )}\n                </List>\n            </Card>\n            <h2>List API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n            <h2>ListItem API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items2}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { InputField, TextareaField, Uploader } from '../components/Input';\nimport { Icon } from '../components/Icon';\nimport { Card } from '../components/Card';\nimport { Button } from '../components/button/Button';\nimport { Table } from '../components/Table';\n\nexport const InputsPage = () => {\n    const [first, setFirst] = useState('');\n    const [second, setSecond] = useState('');\n    const [files, setFiles] = useState('');\n\n    const keys = ['property', 'description', 'default', 'type', 'value'];\n    const items = [\n        { \n            property: 'onChange', \n            description: 'Handle input value change', \n            default: '', \n            type: 'function',\n            value: 'return a input change event object'\n        },\n        { \n            property: 'value', \n            description: 'Input value', \n            default: '', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'lifted', \n            description: 'Lift up the input field', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'color', \n            description: 'Set color of input field from list', \n            default: '', \n            type: 'string',\n            value: 'primary | info | success | error | black'\n        },\n        { \n            property: 'disabled',\n            description: 'Make input field disabled', \n            default: 'false',\n            type: 'boolean', \n            value: 'true | false'},\n        { \n            property: 'rounded', \n            description: 'Make border radius rounded',\n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'smooth',\n            description: 'Set input field borders more smooth', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'uppercase',\n            description: 'Transform text to upper case', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'size', \n            description: 'Set input field size',\n            default: '', \n            type: 'string',\n            value: 'medium | large'\n        },\n        { \n            property: 'prefix',\n            description: 'Set prefix', \n            default: '', \n            type: 'any',\n            value: ''\n        },\n        { \n            property: 'suffix',\n            description: 'Set suffix', \n            default: '', \n            type: 'any',\n            value: ''\n        },\n        { \n            property: 'width',\n            description: 'Set InputField width', \n            default: '', \n            type: 'string | number',\n            value: ''\n        },\n        { \n            property: 'required',\n            description: 'Set input required', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'readOnly',\n            description: 'Set input readOnly', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'className',\n            description: 'Set a custom css class to component', \n            default: '', \n            type: 'string',\n            value: ''\n        }\n    ]\n\n    const itemsUploader = [\n        { \n            property: 'onChange', \n            description: 'Handle files values', \n            default: '', \n            type: 'function',\n            value: 'Return array of files'\n        },\n        { \n            property: 'value', \n            description: 'State value that holds uploaded file(-s)', \n            default: '', \n            type: 'File[]',\n            value: ''\n        },\n        { \n            property: 'lifted', \n            description: 'Lift up the uploader', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'color', \n            description: 'Set color from list', \n            default: '', \n            type: 'string',\n            value: 'primary | info | success | error'\n        },\n        { \n            property: 'disabled',\n            description: 'Make uploader disabled', \n            default: 'false',\n            type: 'boolean', \n            value: 'true | false'},\n        { \n            property: 'rounded', \n            description: 'Make border radius rounded',\n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'smooth',\n            description: 'Set input field borders more smooth', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'size', \n            description: 'Set input field size',\n            default: '', \n            type: 'string',\n            value: 'medium | large'\n        },\n        { \n            property: 'multiple', \n            description: 'Allow choosing multiple files',\n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'accept', \n            description: 'Set accepted MIME types for files',\n            default: '', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'width',\n            description: 'Set Uploader width', \n            default: '', \n            type: 'string | number',\n            value: ''\n        },\n        { \n            property: 'required',\n            description: 'Set Uploader required', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'title',\n            description: 'Set Uploader title', \n            default: '', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'className',\n            description: 'Set a custom css class to component', \n            default: '', \n            type: 'string',\n            value: ''\n        }\n    ]\n\n    const handleFileDelete = (name) => {\n        setFiles(files => files.filter(item => item.name !== name))\n    }\n\n    return (\n        <div className=\"page\">\n            <div className=\"page-title\">Inputs</div>\n            <h3>Input types</h3>\n            <Card>\n                <div className=\"row wrap\">\n                    <div className=\"col\">\n                        <InputField\n                            label=\"Standard input with clear button and hint\"\n                            placeholder=\"Input a text\" \n                            value={first}\n                            color=\"primary\"\n                            width=\"300px\"\n                            hint=\"Some hint\"\n                            onClear={() => setFirst('')} \n                            onChange={e => setFirst(e.target.value)}/>\n                        <InputField\n                            label=\"Smooth input with prefix, clear button with lifted prop\"\n                            placeholder=\"Input a text\" \n                            value={first}\n                            smooth\n                            lifted\n                            color=\"primary\"\n                            prefix={<Icon name=\"search\"/>}\n                            width=\"300px\"\n                            onClear={() => setFirst('')} \n                            onChange={e => setFirst(e.target.value)}/>\n                        <InputField\n                            label=\"Rounded input field with prefix, suffix and clear button\"\n                            placeholder=\"Defaul size input field\" \n                            value={first}\n                            rounded\n                            prefix={<Icon name=\"search\"/>}\n                            suffix={<Icon name=\"edit\"/>}\n                            color=\"info\"\n                            width=\"300px\"\n                            onClear={() => setFirst('')} \n                            onChange={e => setFirst(e.target.value)}/>\n                        <InputField\n                            label=\"Disabled input field\"\n                            placeholder=\"Defaul size rounded input field\" \n                            value={first}\n                            rounded\n                            disabled\n                            prefix={<Icon name=\"account\"/>}\n                            color=\"info\"\n                            width=\"300px\"\n                            onClear={() => setFirst('')} \n                            onChange={e => setFirst(e.target.value)}/>\n                    </div>\n                    <div className=\"col\">\n                        <InputField\n                            label=\"Standard input field with suffix button\"\n                            placeholder=\"Search...\" \n                            value={first}\n                            color=\"primary\"\n                            width=\"100%\"\n                            prefix={<Icon name=\"search\"/>}\n                            suffix={<Button name=\"Search\" color=\"primary\" onClick={() => {}}/>}\n                            onClear={() => setFirst('')} \n                            onChange={e => setFirst(e.target.value)}/>\n                        <InputField\n                            label=\"Smooth input field with suffix button\"\n                            placeholder=\"Search...\" \n                            value={first}\n                            color=\"primary\"\n                            width=\"100%\"\n                            smooth\n                            prefix={<Icon name=\"search\"/>}\n                            suffix={<Button name=\"Search\" color=\"primary\" onClick={() => {}}/>}\n                            onClear={() => setFirst('')} \n                            onChange={e => setFirst(e.target.value)}/>\n                        <InputField\n                            label=\"Rounded input field with suffix button\"\n                            placeholder=\"Search...\" \n                            value={first}\n                            color=\"error\"\n                            width=\"100%\"\n                            rounded\n                            prefix={<Icon name=\"search\"/>}\n                            suffix={<Button name=\"Search\" color=\"error\" onClick={() => {}}/>}\n                            onClear={() => setFirst('')} \n                            onChange={e => setFirst(e.target.value)}/>\n                    </div>\n                </div>\n            </Card>\n            <h3>Input sizes</h3>\n            <Card>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <InputField\n                            color=\"info\"\n                            placeholder=\"777 777 77 77\" \n                            value={second} \n                            label=\"Default input field with label and prefix\"\n                            width=\"300px\"\n                            prefix={<Icon name=\"smartphone\"/>}\n                            onClear={() => setSecond('')} \n                            onChange={e => setSecond(e.target.value)}/>\n                        <InputField\n                            size=\"medium\"\n                            color=\"info\"\n                            label=\"Medium input field with label and prefix\"\n                            prefix={<Icon name=\"smartphone\"/>}\n                            placeholder=\"777 777 77 77\" \n                            value={second} \n                            width=\"300px\"\n                            onClear={() => setSecond('')} \n                            onChange={e => setSecond(e.target.value)}/>\n                        <InputField\n                            size=\"large\"\n                            color=\"info\"\n                            label=\"Large input field with label and prefix\"\n                            prefix={<Icon name=\"smartphone\"/>}\n                            placeholder=\"777 777 77 77 \" \n                            value={second} \n                            width=\"300px\"\n                            onClear={() => setSecond('')} \n                            onChange={e => setSecond(e.target.value)}/>\n                    </div>\n                    <div className=\"col\">\n                        <InputField\n                            color=\"info\"\n                            placeholder=\"777 777 77 77\" \n                            value={second}\n                            rounded \n                            label=\"Rounded default size input field with label and prefix\"\n                            width=\"300px\"\n                            prefix={<Icon name=\"smartphone\"/>}\n                            onClear={() => setSecond('')} \n                            onChange={e => setSecond(e.target.value)}/>\n                        <InputField\n                            size=\"medium\"\n                            color=\"info\"\n                            rounded \n                            label=\"Rounded medium size input field with label and prefix\"\n                            prefix={<Icon name=\"smartphone\"/>}\n                            placeholder=\"777 777 77 77\" \n                            value={second} \n                            width=\"300px\"\n                            onClear={() => setSecond('')} \n                            onChange={e => setSecond(e.target.value)}/>\n                        <InputField\n                            size=\"large\"\n                            color=\"info\"\n                            rounded \n                            label=\"Rounded large size input field with label and prefix\"\n                            prefix={<Icon name=\"smartphone\"/>}\n                            placeholder=\"777 777 77 77 \" \n                            value={second} \n                            width=\"300px\"\n                            onClear={() => setSecond('')} \n                            onChange={e => setSecond(e.target.value)}/>\n                    </div>\n                </div>\n            </Card>\n            <h3>Uploader</h3>\n            <Card>\n                <span>Rounded Uploader</span>\n                <Uploader\n                    label=\"File upload\"\n                    value={files}\n                    rounded\n                    title=\"Сhoose a file please\"\n                    color=\"info\"\n                    multiple\n                    onDelete={handleFileDelete}\n                    width={300}\n                    onChange={files => setFiles(files)}/>\n                <br/>\n                <Uploader\n                    label=\"File upload\"\n                    value={files}\n                    rounded\n                    title=\"Сhoose a file please\"\n                    color=\"success\"\n                    multiple\n                    onDelete={handleFileDelete}\n                    width={300}\n                    onChange={files => setFiles(files)}/>\n                <br/>\n                <span>Medium size Uploader</span>\n                <Uploader\n                    label=\"File upload\"\n                    value={files}\n                    title=\"Сhoose a file please\"\n                    size=\"medium\"\n                    color=\"info\"\n                    multiple\n                    onDelete={handleFileDelete}\n                    width={300}\n                    onChange={files => setFiles(files)}/>\n                <br/>\n                <span>Disabled lifted Uploader</span>\n                <Uploader\n                    label=\"File upload\"\n                    value={files}\n                    title=\"Сhoose a file please\"\n                    color=\"info\"\n                    disabled\n                    lifted\n                    onDelete={handleFileDelete}\n                    width={300}\n                    onChange={files => setFiles(files)}/>\n            </Card>\n            {/* <h3>Textareas</h3>\n            <Card>\n                <TextareaField\n                    label=\"Textarea field\"\n                    placeholder=\"Textarea field\" \n                    value={first}\n                    width=\"300px\"\n                    onClear={() => setFirst('')} \n                    onChange={e => setFirst(e.target.value)}/>\n\n                <TextareaField\n                    rows={4}\n                    color=\"error\"\n                    width=\"300px\"\n                    label=\"Textarea field\"\n                    placeholder=\"Textarea field\" \n                    value={first}\n                    onClear={() => setFirst('')} \n                    onChange={e => setFirst(e.target.value)}/>\n            </Card> */}\n            <h2>InputField API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n            <h2>Uploader API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={itemsUploader}\n                index={true}\n                itemTitles={keys}/>\n            \n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { Drawer } from '../components/Drawer';\nimport { List, ListItem } from '../components/List';\nimport { Button } from '../components/button/Button';\nimport { Tooltip } from '../components/Tooltip';\nimport { Table } from '../components/Table';\nimport { Card } from '../components/Card';\n\nexport const DrawerPage = () => {\n    const [drawer, setDrawer] = useState(true);\n    const [drawerMin, setDrawerMin] = useState(false);\n    const [content, setContent] = useState('');\n\n    const stack = [\n        { name: 'JavaScript', icon: 'code' }, \n        { name: 'TypeScript', icon: 'code' },\n        { name: 'React', icon: 'code' },\n        { name: 'React Router', icon: 'code' },\n        { name: 'React Redux', icon: 'code' }\n    ]\n\n    const keys = ['property', 'description', 'default', 'type', 'value'];\n    const items = [\n        { \n            property: 'drawer', \n            description: 'Drawer visibilty state', \n            default: '', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'collapsable', \n            description: 'Make drawer collapsable', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'min', \n            description: 'Set drawer width to minimum size', \n            default: '', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'onResize', \n            description: 'Handle drawer min prop toggling', \n            default: '', \n            type: 'function',\n            value: ''\n        },\n        { \n            property: 'onClose', \n            description: 'Handle drawer state', \n            default: '', \n            type: 'function',\n            value: ''\n        },\n        { \n            property: 'fullHeight', \n            description: 'Set drawer height to full screen height', \n            default: '', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'header', \n            description: 'Set drawer header', \n            default: '', \n            type: 'any',\n            value: ''\n        },\n        { \n            property: 'headerCentered', \n            description: 'Set drawer header content position to center', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'dark', \n            description: 'Set dark mode', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'absolute', \n            description: 'Set drawer position to absolute', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n    ]\n\n    return (\n        <div className=\"page\">\n            <div className=\"page-title\">Drawer</div>\n            <Card flat className=\"overflow-y pa-0\">\n                <div className=\"app relative\" style={{ minHeight: 260 }}>\n                    <Drawer\n                        drawer={drawer}\n                        min={drawerMin}\n                        onClose={() => setDrawer(false)}\n                        header=\"Title\"\n                        smooth\n                        collapsable\n                        headerCentered\n                        onResize={() => setDrawerMin(!drawerMin)}>\n                        {drawerMin ? \n                            <List>\n                                {stack.map(({name, icon}, index) => \n                                    <Tooltip key={index}    \n                                        tooltip={name}\n                                        position=\"right\">\n                                        <Button\n                                            light \n                                            onClick={() => setContent(name)} \n                                            icon={icon}/>\n                                    </Tooltip>\n                                )}\n                            </List> : \n                            <List>\n                                {stack.map((item, index) => \n                                    <ListItem \n                                        key={index}    \n                                        item={item}\n                                        hover\n                                        itemTitle=\"name\" />\n                                )}\n                            </List>\n                        }\n                    </Drawer>\n                    <div className=\"px-20\">\n                        <p>Drawer in light mode with collapsable prop</p>\n                        <Button \n                            name=\"Toggle\" \n                            color=\"info\"\n                            onClick={() => setDrawer(!drawer)}/>\n                        <p>{content}</p>\n                    </div>\n                </div>\n            </Card>\n            <h2>API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Tooltip } from '../components/Tooltip';\nimport { Button } from '../components/button/Button';\n\nexport const TooltipPage = () => {\n    return (\n        <div className=\"page\">\n            <div className=\"page-title\">Tooltips</div>\n            <div className=\"flex align-top\">\n                <Tooltip tooltip=\"Some text\">\n                    <p>Some text</p>\n                </Tooltip>\n                <div className=\"mx-10\"></div>\n                <Tooltip tooltip=\"Button\">\n                    <Button color=\"info\" name=\"Button\" onAction={() =>{}}/>\n                </Tooltip>\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { Pagination } from '../components/Pagination';\nimport { InputField } from '../components/Input';\nimport { Table } from '../components/Table';\n\nexport const PaginationPage = () => {\n    const [itemsCount, setItemsCount] = useState(100);\n\n    const keys = ['property', 'description', 'default', 'type', 'value'];\n    const items = [\n        { \n            property: 'itemsCount', \n            description: 'Pass items count', \n            default: '', \n            type: 'number',\n            value: ''\n        },\n        { \n            property: 'perPageVariants', \n            description: 'Set per page preset variants', \n            default: '[10, 20, 50, 100]', \n            type: 'number[]',\n            value: ''\n        },\n        { \n            property: 'perPage', \n            description: 'Set per page value', \n            default: '10', \n            type: 'number',\n            value: ''\n        },\n        { \n            property: 'pageText', \n            description: 'Set \"10 / page\" text', \n            default: 'page', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'current', \n            description: 'Set pagination default current page', \n            default: '1', \n            type: 'number',\n            value: ''\n        },\n        { \n            property: 'color', \n            description: 'Set color of pagination from list', \n            default: '', \n            type: 'string',\n            value: 'primary | info | success | error'\n        },\n        { \n            property: 'rounded', \n            description: 'Make border radius rounded',\n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'size', \n            description: 'Set pagination size',\n            default: '', \n            type: 'string',\n            value: 'medium | large'\n        },\n        { \n            property: 'className',\n            description: 'Set a custom css class to component', \n            default: '', \n            type: 'string',\n            value: ''\n        }\n    ]\n\n    return (\n        <div className=\"page\">\n            <div className=\"page-title\">Pagination</div>\n            <h3>Default pagination (in different colors)</h3>\n            <InputField \n                value={itemsCount}\n                color=\"info\"\n                type=\"number\"\n                width={150}\n                label=\"Input items count\" \n                onChange={e => setItemsCount(e.target.value)}/>\n            <Pagination\n                itemsCount={itemsCount}\n                color=\"primary\"\n                className=\"pa-5\"\n                pageText=\"module\"/>\n            <Pagination\n                itemsCount={itemsCount}\n                color=\"info\"\n                current={2}\n                className=\"pa-5\"\n                perPage={20}/>\n            <Pagination\n                itemsCount={itemsCount}\n                color=\"success\"\n                className=\"pa-5\"\n                current={3}\n                perPage={20}/>\n            <Pagination\n                itemsCount={itemsCount}\n                color=\"error\"\n                className=\"pa-5\"\n                current={4}/>\n            <h3>Medium size rounded pagination</h3>\n            <Pagination\n                itemsCount={itemsCount}\n                color=\"info\"\n                className=\"pa-5\"\n                size=\"medium\"\n                rounded/>\n            <h3>Large size pagination</h3>\n            <Pagination\n                itemsCount={itemsCount}\n                color=\"info\"\n                className=\"pa-5\"\n                size=\"large\"/>\n            <h2>API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { Select } from '../components/select/Select';\nimport { Table } from '../components/Table';\n\nexport const SelectPage = () => {\n    const items = [\n        { country: 'Kazakhstan', cities: [ 'Nur-Sultan', 'Almaty', 'Shymkent' ] }, \n        { country: 'Russia', cities: ['Moscow', 'St. Petersburg', 'Krasnodar'] }, \n        { country: 'USA', cities: ['Washington, D.C.', 'New York City', 'San Francisco'] }, \n        { country: 'United Kingdom', cities: ['London', 'York', 'Manchester'] }, \n        { country: 'China', cities: ['Beijing', 'Shanghai', 'Shenzhen'] }\n    ]\n    const [selected, setSelected] = useState('');\n    const [selectedCascader, setSelectedCascader] = useState('');\n    const [selectedCascaderSubItem, setSelectedCascaderSubItem] = useState('');\n\n    const keys = ['property', 'description', 'default', 'type', 'value'];\n    const rows = [\n        { \n            property: 'items', \n            description: 'Select options', \n            default: '', \n            type: 'string[] | object[]',\n            value: ''\n        },\n        { \n            property: 'selectedItem', \n            description: 'Selected option', \n            default: '', \n            type: 'string | number',\n            value: ''\n        },\n        { \n            property: 'onSelect', \n            description: 'Handle selected value', \n            default: '', \n            type: 'function',\n            value: ''\n        },\n        { \n            property: 'itemName', \n            description: 'Set if you pass items as array of objects', \n            default: '', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'addSubItem', \n            description: 'Set second additional prop of object if you pass items as array of objects', \n            default: '', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'width', \n            description: 'Set select width', \n            default: 'auto', \n            type: 'string | number',\n            value: '100px | 100% | 100'\n        },\n        { \n            property: 'minWidth', \n            description: 'Set select min width', \n            default: 'auto', \n            type: 'string | number',\n            value: '100px | 100% | 100'\n        },\n        { \n            property: 'labelName', \n            description: 'Set select label', \n            default: '', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'placeholder', \n            description: 'Set placeholder', \n            default: '', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'color', \n            description: 'Set color of pagination from list', \n            default: '', \n            type: 'string',\n            value: 'primary | info | success | error'\n        },\n        { \n            property: 'rounded', \n            description: 'Make border radius rounded',\n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'subItem', \n            description: 'Set item name in subitems menu',\n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'size', \n            description: 'Set select size',\n            default: '', \n            type: 'string',\n            value: 'medium | large'\n        },\n        { \n            property: 'className',\n            description: 'Set a custom css class to component', \n            default: '', \n            type: 'string',\n            value: ''\n        }\n    ]\n\n    return (\n        <div className=\"page\">\n            <div className=\"page-title\">Selects</div>\n            <h3>Simple Selects</h3>\n            <Select\n                items={items}\n                color=\"primary\"\n                width={200}\n                itemName=\"country\"\n                placeholder=\"Countries\"\n                selectedItem={selected}\n                onSelect={v => setSelected(v)}/>\n            <Select\n                items={items}\n                labelName=\"Rounded select\"\n                width={200}\n                color=\"info\"\n                rounded\n                itemName=\"country\"\n                placeholder=\"Countries\"\n                selectedItem={selected}\n                onSelect={v => setSelected(v)}/>\n            <Select\n                items={items}\n                width={200}\n                color=\"success\"\n                itemName=\"country\"\n                placeholder=\"Countries\"\n                selectedItem={selected}\n                onSelect={v => setSelected(v)}/>\n            <Select\n                items={items}\n                width={200}\n                color=\"error\"\n                itemName=\"country\"\n                placeholder=\"Countries\"\n                selectedItem={selected}\n                onSelect={v => setSelected(v)}/>\n            <Select\n                placeholder=\"Select a country\" \n                items={items}\n                width={200}\n                size=\"medium\"\n                itemName=\"country\"\n                labelName=\"Medium size select\"\n                selectedItem={selected}\n                onSelect={v => setSelected(v)}/>\n            <Select\n                placeholder=\"Select a country\" \n                items={items}\n                width={200}\n                size=\"medium\"\n                rounded\n                color=\"info\"\n                itemName=\"country\"\n                labelName=\"Rounded medium size select\"\n                selectedItem={selected}\n                onSelect={v => setSelected(v)}/>\n            <Select\n                placeholder=\"Select a country\" \n                items={items}\n                width={200}\n                size=\"large\"\n                itemName=\"country\"\n                labelName=\"Large size select\"\n                selectedItem={selected}\n                onSelect={v => setSelected(v)}/>\n            <h3>Selects with subitems</h3>\n            <Select\n                items={items}\n                width={200}\n                selectedItem={selectedCascader}\n                placeholder=\"Select a country and a capital\" \n                itemName=\"country\"\n                subItemsField=\"cities\"\n                color=\"info\"\n                labelName=\"Countries and capitals\"\n                onSelect={v => setSelectedCascader(v)}/>\n            <h3>Selects with subitems (show only subitem value)</h3>\n            <Select\n                items={items}\n                width={200}\n                selectedItem={selectedCascaderSubItem}\n                placeholder=\"Select a country and a capital\" \n                itemName=\"country\"\n                subItemsField=\"cities\"\n                subTitle\n                showSubItemOnly={true}\n                labelName=\"Countries and capitals\"\n                color=\"info\"\n                onSelect={v => setSelectedCascaderSubItem(v)}/>\n            <Select\n                items={items}\n                width={200}\n                selectedItem={selectedCascaderSubItem}\n                placeholder=\"Select a country and a capital\" \n                itemName=\"country\"\n                subItemsField=\"cities\"\n                subTitle\n                rounded\n                showSubItemOnly={true}\n                labelName=\"Countries and capitals\"\n                color=\"info\"\n                onSelect={v => setSelectedCascaderSubItem(v)}/>\n            <h2>API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={rows}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n        \n    )\n}\n","import React from 'react';\nimport { Table } from '../components/Table';\nimport { Button } from '../components/button/Button';\nimport { Tooltip } from '../components/Tooltip';\n\nexport const TablePage = () => {\n    const items = [\n        { country: 'Kazakhstan', capital: 'Nur-Sultan', population: 1029556 }, \n        { country: 'Russia', capital: 'Moscow', population: 12476000 }, \n        { country: 'USA', capital: 'Washington, D.C.', population: 711571 }, \n        { country: 'United Kingdom', capital: 'London', population: 8787892 }, \n        { country: 'China', capital: 'Beijing', population: 21542000 }\n    ];\n\n    const headers = ['Country', 'Capital', 'Population'];\n    const headers2 = ['Country', 'Capital', 'Population'];\n\n    return (\n        <div className=\"page\">\n            <div className=\"page-title\">Tables</div>\n            <h3>Table with order index, no hover and footer</h3>\n            <Table\n                bordered\n                noHover={true} \n                headers={headers}\n                items={items}\n                index={true}\n                footer={<div>I am a footer</div>}\n                itemTitles={['country', 'capital', 'population']}/>\n            <h3>Table with checkboxes and controls</h3>\n            <Table\n                bordered\n                checkbox \n                headers={headers2}\n                items={items}\n                itemTitles={['country', 'capital', 'population']}\n                controls={\n                    <div className=\"row justify-center align-center\">\n                        <Tooltip tooltip=\"Edit\">\n                            <Button\n                                small\n                                className=\"mr-10\"\n                                color=\"light\"\n                                icon=\"edit\"\n                                onClick={() => {}}>\n                            </Button>\n                        </Tooltip>\n                        <Tooltip tooltip=\"Delete\">\n                            <Button\n                                small\n                                color=\"light\"\n                                icon=\"delete\"\n                                onClick={() => {}}>\n                            </Button> \n                        </Tooltip>\n                    </div>\n                }/>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { Modal } from '../components/Modal';\nimport { Button } from '../components/button/Button';\n\nexport const ModalPage = () => {\n    const [modal, setModal] = useState(false);\n\n    return (\n        <div className=\"page\">\n            <div className=\"page-title\">Modals</div>\n            <Button\n                color=\"info\"\n                size=\"medium\"\n                name=\"Open modal\"\n                onClick={() => setModal(true)}/>\n            <Modal\n                closable\n                onClose={() => setModal(false)} \n                visible={modal} \n                header={<div>Modal title</div>}\n                footer={\n                    <React.Fragment>\n                        <Button\n                            className=\"mr-10\"\n                            color=\"secondary\"\n                            name=\"Cancel\"\n                            onClick={() => setModal(false)}/>\n                        <Button\n                            color=\"info\"\n                            name=\"Confirm\"\n                            onClick={() => setModal(false)}/>\n                    </React.Fragment>\n                }>\n                    <p>Modal content...</p>\n                </Modal>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { Checkbox } from '../components/Checkbox';\nimport { Table } from '../components/Table';\n\nexport const CheckboxPage = () => {\n    const [check, setCheck] = useState(true);\n    const [checkLabel, setCheckLabel] = useState(true);\n\n    const keys = ['property', 'description', 'default', 'type', 'value'];\n    const items = [\n        { \n            property: 'checked', \n            description: 'define the checkbox state', \n            default: '', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'onChange', \n            description: 'handle checkbox change', \n            default: '', \n            type: 'function',\n            value: ''\n        },\n        { \n            property: 'disable', \n            description: 'Make checkbox disabled', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'color', \n            description: 'Set color of checkbox from list', \n            default: '', \n            type: 'string',\n            value: 'primary | info | success | error'\n        },\n        { \n            property: 'label', \n            description: 'Set checkbox label', \n            default: '', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'className', \n            description: 'Set a custom css class to component', \n            default: '', \n            type: 'string',\n            value: ''\n        }\n    ]\n\n    return (\n        <div className=\"page\">\n            <div className=\"page-title\">Checkboxes</div>\n            <h3>Simple checkboxes</h3>\n            <div className=\"row\">\n                <Checkbox\n                    className=\"mr-20\" \n                    checked={check} \n                    onChange={() => setCheck(!check)}/>\n                <Checkbox\n                    className=\"mr-20\" \n                    checked={check} \n                    color=\"primary\" \n                    onChange={() => setCheck(!check)}/>\n                <Checkbox \n                    className=\"mr-20\"\n                    checked={check} \n                    color=\"info\" \n                    onChange={() => setCheck(!check)}/>\n                <Checkbox \n                    className=\"mr-20\"\n                    checked={check} \n                    color=\"error\" \n                    onChange={() => setCheck(!check)}/>\n                <Checkbox \n                    className=\"mr-20\"\n                    checked={check} \n                    disabled\n                    onChange={() => setCheck(!check)}/>\n            </div>\n            <h3>Checkboxes with label</h3>\n            <div className=\"row\">\n                <Checkbox\n                    className=\"mr-20\"\n                    label=\"Checkbox\"\n                    color=\"primary\" \n                    checked={checkLabel} \n                    onChange={() => setCheckLabel(!checkLabel)}/>\n                <Checkbox\n                    label=\"Checkbox\"\n                    color=\"info\" \n                    checked={checkLabel} \n                    onChange={() => setCheckLabel(!checkLabel)}/>\n            </div>\n            <h2>API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { RadioGroup } from '../components/Radio';\nimport { InputField } from '../components/Input';\nimport { Icon } from '../components/Icon';\nimport { Table } from '../components/Table';\nimport { Button } from '../components/button/Button';\n\nexport const RadioPage = () => {\n    const [cityUS, setCityUS] = useState('');\n    const [city, setCity] = useState('');\n    const [isDisabled, setIsDisabled] = useState(true);\n    const cities = ['Nur-Sultan', 'Almaty', 'Shymkent'];\n    const citiesUS = ['Washington, D.C.', 'New York City', 'Chicago'];\n\n    const keys = ['property', 'description', 'default', 'type', 'value'];\n    const items = [\n        { \n            property: 'onChange', \n            description: 'Handle radio change', \n            default: '', \n            type: 'function',\n            value: 'return a radio value'\n        },\n        { \n            property: 'name', \n            description: 'Set radio group name', \n            default: '', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'value', \n            description: 'Chosen value', \n            default: '', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'disabled',\n            description: 'Make button disabled', \n            default: 'false',\n            type: 'boolean', \n            value: 'true | false'\n        },\n        { \n            property: 'vertical',\n            description: 'Make position vertical', \n            default: 'false',\n            type: 'boolean', \n            value: 'true | false'\n        },\n        { \n            property: 'className',\n            description: 'Set a custom css class to component', \n            default: '', \n            type: 'string',\n            value: ''\n        }\n    ]\n\n    return (\n        <div className=\"page\">\n            <div className=\"page-title\">Radio Group</div>\n            <h3>Horizontal position with label</h3>\n            <RadioGroup \n                value={city}\n                name=\"town\" \n                onChange={(value) => setCity(value)}\n                options={cities}/>\n            <InputField \n                value={city} \n                placeholder=\"Choose a city\" \n                readOnly\n                color=\"info\"\n                prefix={<Icon name=\"city\"/>}\n                width={270}/>\n            <h3>Vertical position with label</h3>\n            <RadioGroup \n                value={cityUS} \n                vertical\n                name=\"city\"\n                onChange={(value) => setCityUS(value)}\n                options={citiesUS}/>\n            <InputField \n                value={cityUS} \n                placeholder=\"Choose a city\" \n                readOnly\n                color=\"info\"\n                rounded\n                prefix={<Icon name=\"city\"/>}\n                width={270}/>\n            <div className=\"row align-center\">\n                <h3>Disabled</h3>\n                <Button \n                    className=\"ml-15\"\n                    color=\"info\"\n                    name=\"Toggle disabling\" \n                    onClick={() => setIsDisabled(!isDisabled)}/>\n            </div>\n            <RadioGroup \n                value={cityUS} \n                vertical\n                name=\"city\"\n                disabled={isDisabled}\n                onChange={(value) => setCityUS(value)}\n                options={citiesUS}/>\n            <h2>API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { Switch } from '../components/Switch';\nimport { Table } from '../components/Table';\n\nexport const SwitchPage = () => {\n    const [check, setCheck] = useState(true);\n    const [check1, setCheck1] = useState(true);\n    const [check2, setCheck2] = useState(true);\n    const [check3, setCheck3] = useState(true);\n    const [check4, setCheck4] = useState(false);\n\n    const keys = ['property', 'description', 'default', 'type', 'value'];\n    const items = [\n        { \n            property: 'check', \n            description: 'define the switch state', \n            default: '', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'onChange', \n            description: 'handle switch change', \n            default: '', \n            type: 'function',\n            value: ''\n        },\n        { \n            property: 'disable', \n            description: 'Make switch disabled', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'position', \n            description: 'Change switch position', \n            default: 'horizontal', \n            type: 'string',\n            value: 'vertical'\n        },\n        { \n            property: 'color', \n            description: 'Set color of switch from list', \n            default: '', \n            type: 'string',\n            value: 'primary | info | success | error'\n        },\n        { \n            property: 'leftLabel', \n            description: 'Set left side label', \n            default: '', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'rightLabel', \n            description: 'Set right side label', \n            default: '', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'leftIcon', \n            description: 'Set left side icon', \n            default: '', \n            type: 'string',\n            value: 'moon | home | etc. (see icons list)'\n        },\n        { \n            property: 'rightIcon', \n            description: 'Set right side icon', \n            default: '', \n            type: 'string',\n            value: 'moon | home | etc. (see icons list)'\n        },\n        { \n            property: 'leftIconColor', \n            description: 'Set left side icon color', \n            default: '', \n            type: 'string',\n            value: 'hex | rgba | css standard preset'\n        },\n        { \n            property: 'rightIconColor', \n            description: 'Set right side icon color', \n            default: '', \n            type: 'string',\n            value: 'hex | rgba | css standard preset'\n        },\n        { \n            property: 'className', \n            description: 'Set css custom class', \n            default: '', \n            type: 'string',\n            value: ''\n        }\n    ]\n\n    return (\n        <div className=\"page\">\n            <div className=\"page-title\">Switches</div>\n            <h3>Simple switches</h3>\n            <div className=\"row\">\n                <Switch check={check} onChange={() => setCheck(!check)}/>\n                <Switch check={check} color=\"primary\" onChange={() => setCheck(!check)}/>\n                <Switch check={check} color=\"info\" onChange={() => setCheck(!check)}/>\n                <Switch check={check} color=\"success\" onChange={() => setCheck(!check)}/>\n                <Switch check={check} color=\"error\" onChange={() => setCheck(!check)}/>\n                <Switch check={check2} color=\"error\" disabled onChange={() => setCheck2(!check2)}/>\n\n            </div>\n            <h3>Switches with icons and labels</h3>\n            <Switch color=\"info\" \n                check={check1}\n                leftLabel=\"Off\"\n                rightLabel=\"On\" \n                onChange={() => setCheck1(!check1)}/>\n            <br/><br/>\n            <Switch color=\"primary\" \n                check={check1}\n                leftIcon=\"moon\"\n                leftIconColor=\"darkblue\"\n                rightIcon=\"sun\" \n                rightIconColor=\"#feda24\"\n                onChange={() => setCheck1(!check1)}/>\n            <h3>Switches positions</h3>\n            <div className=\"row align-center\">\n                <Switch color=\"primary\" \n                    check={check3}\n                    position=\"vertical\"\n                    onChange={() => setCheck3(!check3)}/>\n                <Switch color=\"error\" \n                    check={check4}\n                    position=\"vertical\"\n                    leftLabel=\"Off\"\n                    rightLabel=\"On\" \n                    onChange={() => setCheck4(!check4)}/>\n                <Switch color=\"info\" \n                    check={check3}\n                    position=\"vertical\"\n                    leftIcon=\"moon\"\n                    rightIcon=\"sun\" \n                    onChange={() => setCheck3(!check3)}/>\n            </div>\n            <h2>API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Card } from '../components/Card';\nimport { List, ListItem } from '../components/List';\nimport { Table } from '../components/Table';\nimport { Icon } from '../components/Icon';\n\nexport const CardPage = () => {\n    const itemsComplexInitial = [\n        { name: 'Steve Rogers', hero: 'Captain America', icon: 'account', check: false }, \n        { name: 'Peter Parker', hero: 'Spider man', icon: 'account', check: false }, \n        { name: 'Tony Stark', hero: 'Iron man', icon: 'account', check: false }, \n        { name: 'Bruce Benner', hero: 'Hulk', icon: 'account', check: false }\n    ];\n\n    const keys = ['property', 'description', 'default', 'type', 'value'];\n    const items = [\n        { \n            property: 'header', \n            description: 'Set card header',\n            default: '', \n            type: 'any',\n            value: ''\n        },\n        { \n            property: 'footer',\n            description: 'Set card footer', \n            default: '', \n            type: 'any',\n            value: ''\n        },\n        { \n            property: 'width',\n            description: 'Set card width', \n            default: '', \n            type: 'string | number',\n            value: '100, \"100%\", \"100px\"'\n        },\n        { \n            property: 'padding',\n            description: 'Set card padding', \n            default: '15px', \n            type: 'string | number',\n            value: ''\n        },\n        { \n            property: 'img',\n            description: 'Set card image', \n            default: '', \n            type: 'string | base64',\n            value: ''\n        },\n        { \n            property: 'flat', \n            description: 'Remove card box shadow',\n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'dark',\n            description: 'Set dark mode', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'outlined',\n            description: 'Set card borders outlined', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'color',\n            description: 'Set card borders color from colors list', \n            default: '', \n            type: 'string',\n            value: 'primary | info | success | error'\n        },\n        { \n            property: 'title',\n            description: 'Set outlined card title (has effect only with outlined prop)', \n            default: '', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'className',\n            description: 'Set a custom css class to component', \n            default: '', \n            type: 'string',\n            value: ''\n        }\n    ]\n\n    const imageCards = () => {\n        let cards = [1,2,3]\n        return (\n            <div className=\"row\">\n                {cards.map((item, index) => \n                    <Card \n                        key={index}\n                        className=\"ma-5 col\"\n                        width={200} \n                        img={<div className=\"row justify-center\"><Icon name=\"react\" size={50} color=\"#42a5f5\"/></div>}\n                        footer={'Some description ' + item}>\n                        <p>Some title {item}</p>\n                    </Card>\n                )}\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"page\">\n            <div className=\"page-title\">Cards</div>\n            <div style={{ maxWidth: 500 }}>\n                <h3>Card with header</h3>\n                <Card header=\"Marvel heroes\">\n                    <List>\n                        {itemsComplexInitial.map((item, index) => \n                            <ListItem \n                                key={index}\n                                item={item}\n                                hover\n                                itemTitle=\"name\"/>\n                        )}\n                    </List>\n                </Card>\n                <h3>Card flat</h3>\n                <Card header=\"Marvel heroes\" flat>\n                    <List>\n                        {itemsComplexInitial.map((item, index) => \n                            <ListItem \n                                key={index}\n                                item={item}\n                                hover\n                                itemTitle=\"name\"/>\n                        )}\n                    </List>\n                </Card>\n                <h3>Card with image</h3>\n                {imageCards()}\n                <h3>Outlined Cards with titles</h3>\n                <Card outlined title=\"Marvel Avengers\" color=\"info\">\n                    <List>\n                        {itemsComplexInitial.map((item, index) => \n                            <ListItem \n                                key={index}\n                                item={item}\n                                hover\n                                itemTitle=\"name\"/>\n                        )}\n                    </List>\n                </Card>\n            </div>\n            <h2>API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Tag } from '../components/Tag';\nimport { Card } from '../components/Card';\nimport { Table } from '../components/Table';\n\nexport const TagPage = () => {\n    const keys = ['property', 'description', 'default', 'type', 'value'];\n    const items = [\n        { \n            property: 'value', \n            description: 'Tag value', \n            default: '', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'lifted', \n            description: 'Lift up the input field', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'color', \n            description: 'Set color of input field from list', \n            default: '', \n            type: 'string',\n            value: 'primary | info | success | error | black'\n        },\n        { \n            property: 'rounded', \n            description: 'Make border radius rounded',\n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'smooth',\n            description: 'Set input field borders more smooth', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'uppercase',\n            description: 'Transform text to upper case', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'small', \n            description: 'Set tag size',\n            default: '', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'iconLeft', \n            description: 'Set icon before the value',\n            default: '', \n            type: 'string',\n            value: 'home | search | etc. (see icon names list in docs)'\n        },\n        { \n            property: 'iconRight', \n            description: 'Set icon after the value',\n            default: '', \n            type: 'string',\n            value: 'home | search | etc. (see icon names list in docs)'\n        },\n        { \n            property: 'className',\n            description: 'Set a custom css class to component', \n            default: '', \n            type: 'string',\n            value: ''\n        }\n    ]\n\n    return (\n        <div className=\"page\">\n            <div className=\"page-title\">Tags</div>\n            <h3>Tag colors</h3>\n            <Card>\n                <Tag value=\"Price: 1000\" />\n                <Tag value=\"Price: 1000\" color=\"yellow\"/>\n                <Tag value=\"Price: 1000\" color=\"primary\"/>\n                <Tag value=\"Price: 1000\" color=\"info\"/>\n                <Tag value=\"Price: 1000\" color=\"success\"/>\n                <Tag value=\"Price: 1000\" color=\"error\"/>\n            </Card>\n            <h3>Tag types</h3>\n            <Card>\n                <Tag value=\"Price: 1000\" rounded color=\"yellow\"/>\n                <Tag value=\"Price: 1000\" rounded outlined color=\"primary\"/>\n                <Tag value=\"Price: 1000\" rounded lifted color=\"primary\"/>\n                <Tag value=\"Price: 1000\" outlined color=\"primary\"/>\n                <Tag value=\"Price: 1000\" smooth color=\"success\"/>\n            </Card>\n            <h3>Tag sizes</h3>\n            <Card>\n                <Tag value=\"Defaul tag\" color=\"yellow\"/>\n                <Tag value=\"Small tag\" small color=\"yellow\"/>\n                <Tag value=\"Small tag\" small rounded color=\"yellow\"/>\n            </Card>\n            <h3>Tag with icons</h3>\n            <Card>\n                <Tag iconLeft=\"smartphone\" value=\"777 777 77 77\" color=\"primary\"/>\n                <Tag iconLeft=\"star\" value=\"1020\" small color=\"yellow\"/>\n                <Tag iconLeft=\"account\" value=\"John Doe\" color=\"info\"/>\n                <Tag iconLeft=\"account\" value=\"John Doe\" />\n            </Card>\n            <h2>API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { Badge } from '../components/badge/Badge';\nimport { Card } from '../components/Card';\nimport { Table } from '../components/Table';\nimport { Icon } from '../components/Icon';\nimport { Button } from '../components/button/Button';\n\nexport const BadgePage = () => {\n    const keys = ['property', 'description', 'default', 'type', 'value'];\n    const items = [\n        { \n            property: 'value', \n            description: 'Set badge value', \n            default: '', \n            type: 'string | number',\n            value: ''\n        },\n        { \n            property: 'color', \n            description: 'Set badge color', \n            default: '', \n            type: 'string',\n            value: 'primary | info | success | error'\n        },\n        { \n            property: 'rounded', \n            description: 'Set rounded badge borders', \n            default: '', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'parent', \n            description: 'Parent component for badge', \n            default: '', \n            type: 'any',\n            value: ''\n        },\n        { \n            property: 'visible', \n            description: 'Badge visible state', \n            default: '', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        // { \n        //     property: 'header', \n        //     description: 'Set drawer header', \n        //     default: '', \n        //     type: 'any',\n        //     value: ''\n        // },\n        // { \n        //     property: 'dark', \n        //     description: 'Set dark mode', \n        //     default: 'false', \n        //     type: 'boolean',\n        //     value: 'true | false'\n        // },\n        // { \n        //     property: 'absolute', \n        //     description: 'Set drawer position to absolute', \n        //     default: 'false', \n        //     type: 'boolean',\n        //     value: 'true | false'\n        // },\n    ]\n\n    const [badge, setBadge] = useState(true);\n\n    return (\n        <div className=\"page\">\n            <div className=\"page-title\">Badges</div>\n            <Card>\n                <div className=\"row align-center\">\n                    <Badge \n                        color=\"info\" \n                        value={100} \n                        className=\"mr-20\"\n                        parent={<Icon size={24} name=\"account\"/>}/>\n                    <Badge \n                        color=\"error\" \n                        value={10} \n                        rounded\n                        className=\"mr-20\"\n                        parent={<Icon size={24} name=\"smartphone\"/>}/>\n                    <Badge \n                        color=\"error\" \n                        value={10} \n                        rounded\n                        visible={badge}\n                        className=\"mr-20\"\n                        parent={<Icon size={24} name=\"smartphone\"/>}/>\n                    <Button name=\"Toggle badge\" color=\"info\" onClick={() => setBadge(!badge)}/>\n                </div>\n            </Card>\n            <h2>API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { Button } from '../components/button/Button';\nimport { Preloader } from '../components/preloader/Preloader';\nimport { Table } from '../components/Table';\n\nexport const PreloaderPage = () => {\n    const [loading, setLoading] = useState(false);\n\n    const handleClick = () => {\n        setLoading(true)\n        setTimeout(() => setLoading(false), 3000)\n    }\n\n    const keys = ['property', 'description', 'default', 'type', 'value'];\n    const items = [\n        { \n            property: 'visible', \n            description: 'Preloader visibile state', \n            default: 'false', \n            type: 'boolean',\n            value: 'true | false'\n        },\n        { \n            property: 'preloader', \n            description: 'Pass your own custom preloader element', \n            default: 'Moving ellipsis', \n            type: 'any',\n            value: ''\n        },\n        { \n            property: 'backgroundColor', \n            description: 'Set preloader background color', \n            default: 'transparent', \n            type: 'string',\n            value: ''\n        },\n        { \n            property: 'color', \n            description: 'Set preloader default ellipsis color', \n            default: '', \n            type: 'string',\n            value: ''\n        }\n    ]\n\n    return (\n        <div className=\"page\">\n            <div className=\"page-title\">Preloader</div>\n            <div className=\"pa-10\">\n                <Button name=\"Activate\" color=\"info\" onClick={handleClick}/>\n            </div>\n            <Preloader visible={loading}/>\n            <h2>API</h2>\n            <Table\n                bordered\n                headers={keys}\n                items={items}\n                index={true}\n                itemTitles={keys}/>\n        </div>\n    )\n}\n","import React from 'react';\n\nexport const Header = (props) => {\n    return (\n        <div className=\"header\">\n            <div className=\"header-left\">\n                {props.imgPath ? \n                <img className=\"header-logo\" src={props.imgPath} alt=\"React logo\"/> : ''}\n                <div className=\"header-title\">{props.title}</div>\n            </div>\n            <div className=\"header-right\">\n                {props.rightSide}\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Header } from '../components/Header';\nimport { Tooltip } from '../components/Tooltip';\nimport { version, description } from '../../package.json';\nimport { Button } from '../components/button/Button';\n\nexport const Content = (props) => {\n    const github = 'https://github.com/Assenti/react-ui-components';\n\n    return (\n        <div className=\"content\">\n            <Header title={<div className=\"row align-center\">\n                    <Button className=\"hidden-sm-and-up\" icon=\"menu\" dark onClick={() => props.onDrawerToggle()}/>\n                    <span className=\"fz-10 ml-5\">{description}</span>\n                </div>}\n                rightSide={\n                <div className=\"row align-center\">\n                    <div className=\"text-lightgray mr-20\"><small>v {version}</small></div>\n                    <Tooltip tooltip=\"Visit Github repo\" position=\"bottom-right\">\n                        <Button \n                            dark\n                            icon=\"github\" \n                            onClick={e => { \n                            e.preventDefault()\n                            window.open(github, '_blank')}}/>\n                    </Tooltip>\n                </div>\n            }/>\n            <div className=\"content-inner\">\n                {props.children}\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Drawer } from '../components/Drawer';\nimport { List, ListItem } from '../components/List';\nimport { Icon } from '../components/Icon';\n\nexport const DrawerContent = (props) => {\n    const history = useHistory();\n\n    const handleItemClick = (item) => {\n        history.push(item.path)\n    }\n    \n    return (\n        <div>\n            <Drawer\n                drawer={props.drawer}\n                fullHeight\n                dark\n                onClose={() => props.onClose()}\n                headerCentered\n                header={<Icon name=\"react\" color=\"white\" size={30}/>}>\n                <List dark>\n                    {props.items.map((item, index) => \n                        <ListItem\n                            key={index}\n                            right\n                            isActiveItem={current => current.path === window.location.pathname}\n                            onItemClick={() => handleItemClick(item)}\n                            itemTitle=\"name\"\n                            hover\n                            item={item}/>\n                    )}\n                </List>\n            </Drawer>\n        </div>\n    )\n}\n","/**\n@license MIT\n\nCopyright (c) 2020 Asset Sultanov\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport { routes } from './routes';\nimport { Content } from './layouts/Content';\nimport { DrawerContent } from './layouts/DrawerContent';\nimport { description } from '../package.json';\n\nconst App = () => {\n    const [drawer, setDrawer] = useState(true);\n\n    useEffect(() => {\n        document.title = description\n    }, [])\n    \n    return (\n        <div className=\"app\">\n            <Router>\n                <DrawerContent \n                    drawer={drawer}\n                    onClose={() => setDrawer(false)} \n                    items={routes}/>\n                <Switch>\n                    {routes.map(({path, Component}, index) => \n                        <Route key={index} exact path={path}>\n                            {({ match }) => (\n                                <CSSTransition\n                                in={match != null}\n                                timeout={300}\n                                classNames=\"page\"\n                                unmountOnExit>\n                                <div className=\"page\">\n                                    <Content onDrawerToggle={() => setDrawer(!drawer)}>\n                                        <Component />\n                                    </Content>\n                                </div>\n                                </CSSTransition>\n                            )}\n                        </Route>\n                    )}\n                    <Route path=\"*\">\n                        <Redirect to=\"/\"/>\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nReactDOM.render(<App />, document.querySelector('#rui-components'));\n"],"sourceRoot":""}