{"version":3,"sources":["../../src/components/backtop/index.js"],"names":["React","useEffect","useState","createRef","CSSTransition","Tooltip","Button","BackTopBtn","props","visible","setVisible","breakpoint","blockRef","handleScroll","e","srcElement","scrollTop","document","addEventListener","removeEventListener","goTop","setRef","current","scrollIntoView","behavior","block","btnBackTopClass","result","className","name","dark","key","trim","right","offsetX","bottom","offsetY","tooltip","size"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, createRef } from 'react'\nimport { CSSTransition } from 'react-transition-group';\nimport { Tooltip, Button } from '../index';\n\nconst BackTopBtn = (props) => {\n    const [visible, setVisible] = useState(false);\n    const [breakpoint] = useState(props.breakpoint ? props.breakpoint : 60);\n    const blockRef = createRef();\n\n    const handleScroll = (e) => {\n        if (e.srcElement.scrollTop > breakpoint) setVisible(true)\n        else setVisible(false)\n    }\n\n    useEffect(() => {\n        document.addEventListener('scroll', handleScroll, true);\n        return () => document.removeEventListener('scroll', handleScroll, true);\n    }, ['scroll', document])\n\n    const goTop = () => {\n        if (props.setRef.current) {\n            props.setRef.current.scrollIntoView({\n                behavior: \"smooth\",\n                block: 'start'\n            })\n        }\n    }\n\n    const btnBackTopClass = () => {\n        let result = '';\n        let className = {\n            name: 'rui-btn-back-top',\n            dark: props.dark ? 'dark' : ''\n        }\n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    return (\n        <div \n            className={btnBackTopClass()}\n            ref={blockRef}\n            style={{ \n                right: props.offsetX ? props.offsetX : 25, \n                bottom: props.offsetY ? props.offsetY : 25\n            }}>\n            <CSSTransition\n                in={visible}\n                timeout={500}\n                classNames=\"btn-back-top\"\n                unmountOnExit>\n                {props.tooltip ?\n                    <Tooltip tooltip={props.tooltip}>\n                        <Button \n                            icon=\"arrow-up-bold\"\n                            lifted\n                            size={props.size ? props.size : ''}\n                            onClick={() => goTop()} \n                            light={!props.dark ? true : false}\n                            dark={props.dark ? true : false}/>\n                    </Tooltip> : \n                    <Button \n                        icon=\"arrow-up-bold\"\n                        lifted\n                        size={props.size ? props.size : ''}\n                        onClick={() => goTop()} \n                        light={!props.dark ? true : false}\n                        dark={props.dark ? true : false}/>\n                }\n            </CSSTransition>\n        </div>\n    )\n}\n\nexport default BackTopBtn;"],"file":"index.js"}