{"version":3,"sources":["../../src/components/tag/index.js"],"names":["React","useState","useEffect","Icon","CSSTransition","Tag","props","visible","setVisible","tagClass","result","className","btn","lifted","uppercase","smooth","rounded","color","disabled","light","dark","small","outlined","key","trim","closable","width","iconLeft","value","iconRight","onClose"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Icon } from '../index';\nimport { CSSTransition } from 'react-transition-group';\n\nconst Tag = (props) => {\n    const [visible, setVisible] = useState(props.visible ? props.visible : true);\n\n    const tagClass = () => {\n        let result = '';\n        let className = {\n            btn: 'rui-tag',\n            lifted: props.lifted ? 'lifted' : '',\n            uppercase: props.uppercase ? 'uppercase' : '',\n            smooth: props.smooth && !props.rounded ? 'smooth' : '',\n            rounded: props.rounded && !props.smooth ? 'rounded' : '',\n            color: props.color && !props.disabled && !props.light && !props.dark ? props.color : '',\n            small: props.small ? 'small' : '',\n            outlined: props.outlined ? 'outlined' : '',\n            className: props.className ? props.className : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    useEffect(() => {\n        if (props.closable) setVisible(props.visible)\n    }, [props.visible])\n\n    return (\n        <CSSTransition\n            in={visible}\n            timeout={300}\n            classNames=\"rui-tag\"\n            unmountOnExit>\n            <div className={tagClass()} style={{ width: props.width ? props.width : ''}}>\n                {props.iconLeft ? <Icon name={props.iconLeft}/> : ''}\n                {props.value}\n                {props.iconRight ? <Icon name={props.iconRight}/> : ''}\n                {props.closable ? \n                    <Icon \n                        className=\"rui-tag__close\" \n                        name=\"close\"\n                        color=\"gray\" \n                        onClick={() => {\n                            props.onClose()\n                            setVisible(false)\n                        }}/> : ''}\n            </div>\n        </CSSTransition>\n    )\n}\n\nexport default Tag;\n"],"file":"index.js"}