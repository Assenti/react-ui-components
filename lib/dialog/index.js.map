{"version":3,"sources":["../../src/components/dialog/index.js"],"names":["React","useState","CSSTransition","Button","Icon","Dialog","props","loading","setLoading","modalClass","result","className","name","dark","key","trim","handleConfirm","onConfirm","Promise","resolve","reject","onCancel","visible","icon","iconColor","color","titleColor","title","description","cancelBtnColor","cancelText","confirmBtnColor","confirmText"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Button, Icon } from '../index';\n\nconst Dialog = (props) => {\n    const [loading, setLoading] = useState(false);\n\n    const modalClass = () => {\n        let result = '';\n        let className = {\n            name: 'rui-dialog',\n            dark: props.dark ? 'dark' : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    const handleConfirm = () => {\n        if (props.onConfirm) {\n            return new Promise(async (resolve, reject) => {\n                setLoading(true)\n                try {\n                    const result = await props.onConfirm()\n                    resolve(result)\n                    props.onCancel()\n                } catch (e) {\n                    reject(e)\n                } finally {\n                    setLoading(false)\n                }\n            })\n        }\n    }\n\n    return (\n        <CSSTransition\n            in={props.visible}\n            timeout={300}\n            classNames=\"dialog\"\n            unmountOnExit>\n            <div className={modalClass()}>\n                <div className=\"rui-dialog__title\">\n                    {props.icon ? \n                        <Icon \n                            className=\"mr-5\" \n                            size={20}\n                            color={props.iconColor ? props.iconColor : ''} \n                            name={props.icon ? props.icon : ''}/> : ''}\n                    <span style={{ color: props.titleColor ? props.titleColor : ''}}>\n                        {props.title}\n                    </span>\n                </div>\n                <div className=\"rui-dialog__description\">{props.description}</div>\n                <div className=\"rui-dialog__controls\">\n                    <Button \n                        onClick={() => props.onCancel()}\n                        className=\"mx-5\"\n                        disabled={loading} \n                        color={props.cancelBtnColor ? props.cancelBtnColor : 'secondary'} \n                        name={props.cancelText ? props.cancelText : 'Cancel'}/>\n                    <Button\n                        onClick={handleConfirm}\n                        className=\"mx-5\"\n                        loading={loading} \n                        color={props.confirmBtnColor ? props.confirmBtnColor : 'primary'} \n                        name={props.confirmText ? props.confirmText : 'Confirm'}/>\n                </div>\n            </div>\n        </CSSTransition>\n    )\n}\n\nexport default Dialog;\n"],"file":"index.js"}