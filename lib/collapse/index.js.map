{"version":3,"sources":["../../src/components/collapse/index.js"],"names":["React","useState","Icon","Tooltip","CSSTransition","Collapse","props","defaultState","visible","setVisible","collapseClass","result","className","name","border","title","position","key","trim","tooltip","icon","iconSize","iconColor","contentStyles","children"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Icon } from '../icon';\nimport { Tooltip } from '../tooltip';\nimport { CSSTransition } from 'react-transition-group';\n\nexport const Collapse = (props) => {\n    const [visible, setVisible] = useState(props.defaultState ? props.defaultState : false);\n\n    const collapseClass = () => {\n        let result = '';\n        let className = {\n            name: 'collapse',\n            border: props.border ? 'bordered' : '',\n            title: props.title ? 'titled' : '',\n            position: !props.title ? (props.position ? props.position : 'right') : '',\n            className: props.className ? props.className : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    return (\n        <div className={collapseClass()}>\n            <div className=\"collapse-trigger\">\n                {props.title ? <span>{props.title}</span> : ''}\n                {props.tooltip ?\n                    <Tooltip tooltip={props.tooltip}>\n                        <Icon name={props.icon ? props.icon : 'chevron-down'}\n                            size={props.iconSize ? props.iconSize : ''}\n                            color={props.iconColor ? props.iconColor : 'gray'}\n                            className={visible ? 'reverse' : ''} \n                            onClick={() => setVisible(!visible)}/>\n                    </Tooltip> : \n                    <Icon name={props.icon ? props.icon : 'chevron-down'}\n                        size={props.iconSize ? props.iconSize : ''}\n                        color={props.iconColor ? props.iconColor : 'gray'}\n                        className={visible ? 'reverse' : ''} \n                        onClick={() => setVisible(!visible)}/>\n                }\n            </div>\n            <CSSTransition\n                in={visible}\n                timeout={300}\n                unmountOnExit\n                classNames=\"collapse\">\n                <div className=\"collapse-content\"\n                    style={{...props.contentStyles}}>\n                    {props.children}\n                </div>\n            </CSSTransition>\n        </div>\n    )\n}\n"],"file":"index.js"}