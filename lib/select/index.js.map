{"version":3,"sources":["../../src/components/select/index.js"],"names":["React","useState","useRef","CSSTransition","Icon","Select","items","itemName","subItemsField","subItemName","labelName","placeholder","selectedItem","onSelect","width","minWidth","subTitle","addSubItem","showSubItemOnly","color","size","rounded","selectMenu","open","setOpen","getItems","subItems","parent","openMenu","e","target","currentTarget","handleSelect","value","subValue","result","current","blur","cutLongText","text","length","slice","selectItemClass","item","isSelected","className","active","key","trim","selectSubItemClass","selected","split","classes","normalTitle","selectClass","main","map","index","subItem","subIndex"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Icon } from '../icon';\n\nexport const Select = ({ \n    items, \n    itemName,\n    subItemsField, \n    subItemName, \n    labelName, \n    placeholder, \n    selectedItem,\n    onSelect,\n    width,\n    minWidth,\n    subTitle,\n    addSubItem,\n    showSubItemOnly,\n    color,\n    size,\n    rounded\n}) => {\n    const selectMenu = useRef(null);\n    const [open, setOpen] = useState(false);\n    const getItems = () => items ? items : [];\n\n    const subItems = (parent) => {\n        if (subItemsField) return parent[subItemsField]\n        else return []\n    }\n\n    const openMenu = e => {\n        if (e.target === e.currentTarget) setOpen(true)\n    }\n\n    const handleSelect = (e, value, subValue) => {\n        if (e.target === e.currentTarget) {\n            let result = subValue ? (showSubItemOnly ? subValue : `${value} / ${subValue}`) : value\n            onSelect(result)\n            setOpen(false)\n            selectMenu.current.blur()\n        }\n    }\n\n    const cutLongText = (text) => {\n        if (text.length > 130) return `${text.slice(0, 130)}...`\n        else return text\n    }\n\n    const selectItemClass = (item) => {\n        let isSelected = itemName ? item[itemName] === selectedItem : item === selectedItem\n        let result = '';\n        let className = {\n            item: 'select-menu__item',\n            active: isSelected ? 'active' : ''\n        }\n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    const selectSubItemClass = (item) => {\n        let selected = showSubItemOnly ? selectedItem : (selectedItem ? selectedItem.split('/')[1].trim() : '')\n        let isSelected = subItemName ? item[subItemName] === selected : item === selected\n        let classes = {\n            active: isSelected ? 'active' : ''\n        }\n        return `select-menu__subitem ${classes.normalTitle} ${classes.active}`\n    }\n\n    const selectClass = (item) => {\n        let result = '';\n        let className = {\n            main: 'select-menu',\n            rounded: rounded ? 'rounded' : '',\n            size: size ? size : '',\n            color: color ? color : ''\n        }\n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    return (\n        <React.Fragment>\n            {labelName ? <label className=\"select-menu__label\">{labelName}</label> : ''}\n            <div className={selectClass()}\n                ref={selectMenu}\n                style={{ width: width ? width : '', minWidth: minWidth ? minWidth : '' }} \n                tabIndex={-1} \n                onClick={openMenu} \n                onBlur={() => setOpen(false)}>\n                \n                {!cutLongText(selectedItem ? selectedItem : '') ? \n                <span onClick={openMenu}>{placeholder}</span> : ''}\n                {cutLongText(selectedItem ? selectedItem : '') ? \n                    <div className=\"select-menu__value\" \n                        onClick={openMenu} \n                        title={selectedItem}>\n                            {selectedItem ? cutLongText(selectedItem) : ''}\n                    </div> : ''}\n                <Icon name=\"chevron-down\"/>\n                \n                <CSSTransition\n                    in={open}\n                    timeout={300}\n                    classNames=\"select-menu\"\n                    unmountOnExit>\n                    <div className=\"select-menu__items\">\n                        {getItems().map((item, index) => \n                            <div key={index} \n                                className={selectItemClass(item)}\n                                onClick={e => subItems(item).length > 0 ? {} : handleSelect(e, itemName ? item[itemName] : item)}>\n                                {itemName ? item[itemName] : item}\n                                {subItems(item).length > 0 ? <Icon name=\"chevron-next\"/> : ''}\n                                {subItems(item).length > 0 ? \n                                    <div className=\"select-menu__subitems\">\n                                        {subTitle ? <div className=\"select-menu__subitem-title\">{itemName ? item[itemName] : item}</div> : ''}\n                                        {subItems(item).map((subItem, subIndex) => \n                                            <div key={subIndex} \n                                                className={selectSubItemClass(subItem)}\n                                                onClick={e => handleSelect(e, itemName ? item[itemName] : item, subItemName ? subItem[subItemName] : subItem)}>\n                                                {subItemName ? subItem[subItemName] : subItem} {addSubItem ? ' (' + subItem[addSubItem] + ')' : ''}\n                                            </div>\n                                        )}\n                                    </div> : ''\n                                }\n                            </div>\n                        )}\n                    </div>\n                </CSSTransition>\n            </div>\n        </React.Fragment>\n    )\n}\n"],"file":"index.js"}