{"version":3,"sources":["../../src/components/uploader/index.js"],"names":["React","useState","useRef","Icon","Uploader","props","inputFile","focus","setFocus","inputFieldClass","result","className","input","key","trim","inputContainer","name","size","color","disabled","light","dark","lifted","borderType","handleFocus","e","onFocus","handleBlur","onBlur","width","label","current","multiple","accept","undefined","title","required","onChange","target","files","value","length","rounded","map","item","index","onDelete"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Icon } from '../index';\n\nconst Uploader = (props) => {\n    const inputFile = useRef();\n    const [focus, setFocus] = useState(false);\n\n    const inputFieldClass = () => {\n        let result = '';\n        let className = {\n            input: 'rui-input-uploader',\n            className: props.className ? props.className : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    const inputContainer = () => {\n        let result = ''\n        let className = {\n            name: 'rui-input-uploader__container',\n            size: props.size ? props.size : '',\n            color: props.color && !props.disabled && !props.light && !props.dark ? props.color : '',\n            lifted: props.lifted ? 'lifted' : '',\n            borderType: props.borderType ? props.borderType : '',\n            disabled: props.disabled ? 'disabled' : ''\n        }\n\n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    const handleFocus = (e) => {\n        if (props.onFocus) props.onFocus(e)\n        setFocus(true)\n    }\n\n    const handleBlur = (e) => {\n        if (props.onBlur) props.onBlur(e)\n        setFocus(false)\n    }\n\n    return (\n        <div className={inputFieldClass()} style={{ width: props.width ? props.width : ''}}>\n            <div className={inputContainer()}>\n                <Icon name=\"download\" size={20}/>\n                {props.label ? <label onClick={() => inputFile.current.focus()}>{props.label}</label> : ''}\n                <input\n                    onFocus={handleFocus}\n                    onBlur={handleBlur}\n                    ref={inputFile}\n                    multiple={props.multiple ? true : false}\n                    accept={props.accept ? props.accept : undefined}\n                    title={props.title}\n                    disabled={props.disabled}\n                    required={props.required}\n                    onChange={ e => props.onChange([...e.target.files])}\n                    type=\"file\"/>\n                {props.value && props.value.length > 0 ? <span>{props.value.length}</span> : \"\"}\n            </div>\n            {props.value && props.value.length > 0 ? \n                <div className={props.rounded ? 'rui-input-uploader__items rounded' : 'rui-input-uploader__items'}>\n                    {props.value.map((item, index) => \n                        <div key={index} className=\"rui-input-uploader__item\">\n                            <span>{item.name}</span>\n                            <Icon name=\"close\" size={20} onClick={() => props.onDelete(item.name)}/>\n                        </div>\n                    )}\n                </div>\n            : ''}\n        </div>\n    )\n}\n\nexport default Uploader;"],"file":"index.js"}