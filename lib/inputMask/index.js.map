{"version":3,"sources":["../../src/components/inputMask/index.js"],"names":["React","useState","InputField","phoneMaskFormatter","cardMaskFormatter","cardIssueMaskFormatter","iinMaskFormatter","InputMask","props","preValue","setPreValue","handleKeyDown","e","mask","key","match","concatenatedValue","length","code","slice","handleChange","onChange","getValue"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { InputField } from '../input';\nimport { phoneMaskFormatter, cardMaskFormatter, cardIssueMaskFormatter, iinMaskFormatter } from '../utils';\n\nconst InputMask = (props) => {\n    const [preValue, setPreValue] = useState('');\n\n    const handleKeyDown = (e) => {\n        switch (props.mask) {\n            case 'phone':\n                if (e.key.match(/^[0-9]+$/)) {\n                    let concatenatedValue = preValue + e.key;                    \n                    setPreValue(concatenatedValue.length <=10 ? concatenatedValue : preValue)\n                    phoneMaskFormatter(concatenatedValue, props.code)\n                } else if (e.key === 'Backspace' && preValue) {\n                    setPreValue(preValue.slice(0, preValue.length - 1))\n                    phoneMaskFormatter(preValue.slice(0, preValue.length - 1))\n                }\n                break;\n            case 'card':\n                if (e.key.match(/^[0-9]+$/)) {\n                    let concatenatedValue = preValue + e.key;                    \n                    setPreValue(concatenatedValue.length <=16 ? concatenatedValue : preValue)\n                    cardMaskFormatter(concatenatedValue)\n                } else if (e.key === 'Backspace' && preValue) {\n                    setPreValue(preValue.slice(0, preValue.length - 1))\n                    cardMaskFormatter(preValue.slice(0, preValue.length - 1))\n                }\n                break;\n            case 'card-issue':\n                if (e.key.match(/^[0-9]+$/)) {\n                    let concatenatedValue = preValue + e.key;                    \n                    setPreValue(concatenatedValue.length <=4 ? concatenatedValue : preValue)\n                    cardIssueMaskFormatter(concatenatedValue)\n                } else if (e.key === 'Backspace' && preValue) {\n                    setPreValue(preValue.slice(0, preValue.length - 1))\n                    cardIssueMaskFormatter(preValue.slice(0, preValue.length - 1))\n                }\n                break;\n            case 'iin':\n                if (e.key.match(/^[0-9]+$/)) {\n                    let concatenatedValue = preValue + e.key;                    \n                    setPreValue(concatenatedValue.length <=12 ? concatenatedValue : preValue)\n                    iinMaskFormatter(concatenatedValue)\n                } else if (e.key === 'Backspace' && preValue) {\n                    setPreValue(preValue.slice(0, preValue.length - 1))\n                    iinMaskFormatter(preValue.slice(0, preValue.length - 1))\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    const handleChange = (e) => {\n        switch (props.mask) {\n            case 'phone':\n                props.onChange(phoneMaskFormatter(preValue, props.code), preValue);\n                break;\n            case 'card':\n                props.onChange(cardMaskFormatter(preValue), preValue);\n                break;\n            case 'card-issue':\n                props.onChange(cardIssueMaskFormatter(preValue), preValue);\n                break;\n            case 'iin':\n                props.onChange(iinMaskFormatter(preValue), preValue);\n                break;\n            default:\n                break;\n        }\n    }\n\n    const getValue = () => {\n        switch (props.mask) {\n            case 'phone':\n                return phoneMaskFormatter(preValue, props.code);\n            case 'card':\n                return cardMaskFormatter(preValue);\n            case 'card-issue':\n                return cardIssueMaskFormatter(preValue);\n            case 'iin':\n                return iinMaskFormatter(preValue);\n            default:\n                return '';\n        }\n    }\n\n    return (\n        <InputField \n            {...props}\n            type=\"text\"\n            onKeyDown={handleKeyDown}\n            onChange={handleChange}\n            value={getValue()}/>\n    )\n}\n\nexport default InputMask;\n"],"file":"index.js"}