{"version":3,"sources":["../../src/components/input/index.js"],"names":["React","useRef","useState","useEffect","Icon","InputField","props","input","focus","setFocus","isChanged","setIsChanged","type","isPassword","setIsPassword","getInputColor","required","value","color","inputFieldClass","result","className","whiteBackground","size","lifted","borderType","disabled","key","trim","handleFocus","e","onFocus","handleBlur","currentTarget","target","onBlur","handleClear","onClear","handleChange","onChange","uppercase","toUpperCase","handleKeyUp","onEnter","onKeyUp","getHintColor","hintColor","getInputType","handlePassTypeChange","autoFocus","current","width","label","prefix","paddingLeft","paddingRight","suffix","tabIndex","readOnly","autoComplete","name","maxLength","minLength","min","max","step","onKeyDown","placeholder","clearable","hint"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport { Icon } from '../index';\n\nconst InputField = (props) => {\n    const input = useRef(null);\n    const [focus, setFocus] = useState(false);\n    const [isChanged, setIsChanged] = useState(false);\n    const [isPassword, setIsPassword] = useState(props.type === 'password' ? true : false);\n\n    const getInputColor = () => {\n        if (props.required) {\n            if (isChanged && !props.value) {\n                return 'error';\n            } else {\n                return props.color ? props.color : 'primary';\n            }\n        } else {\n            return props.color ? props.color : 'primary';\n        }\n    }\n\n    const inputFieldClass = () => {\n        let result = '';\n        let className = {\n            input: 'rui-input-field',\n            whiteBackground: props.whiteBackground ? 'white-background' : '',\n            size: props.size ? props.size : '',\n            lifted: props.lifted ? 'lifted' : '',\n            borderType: props.borderType ? props.borderType : '',\n            color: getInputColor(),\n            disabled: props.disabled ? 'disabled' : '',\n            className: props.className ? props.className : ''\n        }\n        \n        for (const key in className) {\n            if (className[key]) result += className[key] + ' '\n        }\n        return result.trim();\n    }\n\n    const handleFocus = (e) => {\n        if (props.onFocus) props.onFocus(e)\n        setFocus(true)\n    }\n\n    const handleBlur = (e) => {\n        if (e.currentTarget === e.target) {\n           if (props.onBlur) props.onBlur(e)\n            setFocus(false) \n        }\n    }\n\n    const handleClear = () => {\n        setFocus(false)\n        props.onClear()\n        setIsChanged(false)\n    }\n\n    const handleChange = (e) => {\n        if (props.onChange) {\n            setIsChanged(true)\n            if (props.uppercase) {\n                e.target.value = e.target.value.toUpperCase()\n            }\n            props.onChange(e)\n        }\n    }\n\n    const handleKeyUp = (e) => {\n        if (props.onEnter) {\n            if (e.key === 'Enter') {\n                props.onEnter()\n            }\n        } else if (props.onKeyUp) {\n            props.onKeyUp(e)\n        }\n    }\n\n    const getHintColor = () => {\n        if (props.hintColor) {\n            return `rui-input-field__hint ${props.hintColor}`\n        } else {\n            if (props.required) {\n                if (isChanged && !props.value) {\n                    return 'rui-input-field__hint error'\n                } else {\n                    return 'rui-input-field__hint'\n                }\n            } else {\n                return 'rui-input-field__hint'\n            }\n        }\n    }\n\n    const getInputType = () => {\n        if (props.type === 'password') {\n            return isPassword ? 'password' : 'text';\n        } else if (props.type === 'number') {\n            return 'number';\n        } else if (props.type === 'email') {\n            return 'email';\n        } else {\n            return 'text';\n        }\n    }\n\n    const handlePassTypeChange = (e) => {\n        setIsPassword(!isPassword)\n    }\n\n    useEffect(() => {\n        if (props.autoFocus) input.current.focus();\n    }, [])\n\n    return (\n        <div className={inputFieldClass()} \n            style={{ width: props.width ? props.width : ''}}>\n            {props.label ? \n            <label className={focus ? 'active' : ''} \n                onClick={() => input.current.focus()}>{props.required ? <span className=\"text-error\">*</span> : ''} {props.label}</label> \n            : ''}\n            <div className={focus ? 'rui-input-container focus' : 'rui-input-container'}>\n                {props.prefix ? <span className=\"rui-input-prefix\">{props.prefix}</span> : ''}\n                <input\n                    style={{ \n                        paddingLeft: props.prefix ? 0 : '',\n                        paddingRight: props.suffix ? 0 : ''\n                    }}\n                    onFocus={handleFocus}\n                    onBlur={handleBlur}\n                    ref={input}\n                    tabIndex={props.tabIndex}\n                    readOnly={props.readOnly || !props.onChange ? true : false}\n                    disabled={props.disabled}\n                    required={props.required}\n                    autoComplete={props.autoComplete ? '' : 'off'}\n                    name={props.name}\n                    maxLength={props.maxLength}\n                    minLength={props.minLength}\n                    min={props.min}\n                    max={props.max}\n                    step={props.step}\n                    value={props.value}\n                    onKeyUp={handleKeyUp}\n                    onKeyDown={props.onKeyDown}\n                    placeholder={props.placeholder} \n                    onChange={handleChange}\n                    type={getInputType()}/>\n                {props.value && props.clearable ? \n                    <Icon \n                        name=\"close\" \n                        onClick={() => props.onClear ? handleClear() : {}} \n                        className=\"rui-input-clear\"/> : ''}\n                {props.suffix ? \n                    <span className=\"rui-input-suffix\">{props.suffix}</span> :\n                    (props.type === 'password' ? \n                    <Icon \n                        className=\"rui-input-clear\"\n                        name={isPassword ? 'eye' : 'eye-off'} \n                        onClick={handlePassTypeChange}/> : '')\n                }\n            </div>\n            {props.hint ? \n                <div className={getHintColor()}>{props.hint}</div> : ''}\n        </div>\n    )\n}\n\nexport default InputField;"],"file":"index.js"}